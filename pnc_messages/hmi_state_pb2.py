# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hmi_state.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='hmi_state.proto',
  package='nio.proto',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x0fhmi_state.proto\x12\tnio.proto\"\xa0\x05\n\x08HmiState\x12\x11\n\ttime_meas\x18\x01 \x01(\x04\x12?\n\x13\x66unction_enable_req\x18\x02 \x01(\x0e\x32\x13.nio.proto.SwichReq:\rNO_REQ_SWITCH\x12\x45\n\x0flane_change_req\x18\x03 \x01(\x0e\x32\x18.nio.proto.LaneChangeReq:\x12NO_REQ_LANE_CHANGE\x12\x46\n\x14speed_adjustment_req\x18\x04 \x01(\x0e\x32\x16.nio.proto.SpeedADJReq:\x10NO_REQ_SPEED_ADJ\x12\x1e\n\x13reference_speed_req\x18\x05 \x01(\x01:\x01\x30\x12=\n\x0coverride_req\x18\x06 \x01(\x0e\x32\x16.nio.proto.OverrideReq:\x0fNO_REQ_OVERRIDE\x12 \n\x15reference_tau_gap_req\x18\x07 \x01(\x01:\x01\x30\x12>\n\x0e\x64\x61_inhibit_req\x18\x08 \x01(\x0e\x32\x17.nio.proto.DAInhibitReq:\rREQ_NO_ACTIVE\x12\x39\n\x0c\x66unction_req\x18\t \x01(\x0e\x32\x1a.nio.proto.FunctionRequest:\x07REQ_OFF\x12;\n\x0f\x61\x63l_confirm_req\x18\n \x01(\x0e\x32\x18.nio.proto.ALCConfirmReq:\x08REQ_AUTO\x12\x37\n\x0cvlc_mode_req\x18\x0b \x01(\x0e\x32\x15.nio.proto.VLCModeReq:\nREQ_LC_OFF\x12\x1b\n\x0ctakeover_req\x18\x0c \x01(\x08:\x05\x66\x61lse\x12\"\n\x17raw_reference_speed_req\x18\r \x01(\x01:\x01\x30*D\n\x08SwichReq\x12\x11\n\rNO_REQ_SWITCH\x10\x00\x12\x11\n\rREQ_SWITCH_ON\x10\x01\x12\x12\n\x0eREQ_SWITCH_OFF\x10\x02*}\n\rLaneChangeReq\x12\x16\n\x12NO_REQ_LANE_CHANGE\x10\x00\x12\x11\n\rREQ_LEFT_TURN\x10\x01\x12\x12\n\x0eREQ_RIGHT_TURN\x10\x02\x12\x15\n\x11REQ_TIP_LEFT_TURN\x10\x03\x12\x16\n\x12REQ_TIP_RIGHT_TURN\x10\x04*c\n\x0bSpeedADJReq\x12\x14\n\x10NO_REQ_SPEED_ADJ\x10\x00\x12\x14\n\x10REQ_HIGHER_SPEED\x10\x01\x12\x13\n\x0fREQ_EQUAL_SPEED\x10\x02\x12\x13\n\x0fREQ_LOWER_SPEED\x10\x03*\x82\x01\n\x0bOverrideReq\x12\x13\n\x0fNO_REQ_OVERRIDE\x10\x00\x12\x18\n\x14REQ_LATERAL_OVERRIDE\x10\x01\x12\x1d\n\x19REQ_LONGITUDINAL_OVERRIDE\x10\x02\x12%\n!REQ_LATERAL_LONGITUDINAL_OVERRIDE\x10\x03*R\n\x0f\x46unctionRequest\x12\x0b\n\x07REQ_OFF\x10\x00\x12\x10\n\x0cREQ_CHECKING\x10\x01\x12\x0f\n\x0bREQ_STANDBY\x10\x02\x12\x0f\n\x0bREQ_RUNNING\x10\x03*e\n\rALCConfirmReq\x12\x0c\n\x08REQ_AUTO\x10\x00\x12\x16\n\x12REQ_CONFIRM_TYPE_1\x10\x01\x12\x16\n\x12REQ_CONFIRM_TYPE_2\x10\x02\x12\x16\n\x12REQ_CONFIRM_TYPE_3\x10\x03*\x8b\x01\n\x0c\x44\x41InhibitReq\x12\x11\n\rREQ_NO_ACTIVE\x10\x00\x12\x16\n\x12REQ_ACTIVE_SOFT_AD\x10\x01\x12\x16\n\x12REQ_ACTIVE_SOFT_TD\x10\x02\x12\x17\n\x13REQ_ACTIVE_SOFT_EDA\x10\x03\x12\x1f\n\x1bREQ_ACTIVE_SOFT_INSTANT_OFF\x10\x04*\xae\x01\n\nVLCModeReq\x12\x0e\n\nREQ_LC_OFF\x10\x00\x12\x12\n\x0eREQ_LC_PASSIVE\x10\x01\x12\x12\n\x0eREQ_LC_STANDBY\x10\x02\x12\x11\n\rREQ_LC_ACTIVE\x10\x03\x12\x15\n\x11REQ_LC_BRAKE_ONLY\x10\x04\x12\x13\n\x0fREQ_LC_OVERRIDE\x10\x05\x12\x15\n\x11REQ_LC_STANDSTILL\x10\x06\x12\x12\n\x0eREQ_LC_FAILURE\x10\x07')
)

_SWICHREQ = _descriptor.EnumDescriptor(
  name='SwichReq',
  full_name='nio.proto.SwichReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_REQ_SWITCH', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_SWITCH_ON', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_SWITCH_OFF', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=705,
  serialized_end=773,
)
_sym_db.RegisterEnumDescriptor(_SWICHREQ)

SwichReq = enum_type_wrapper.EnumTypeWrapper(_SWICHREQ)
_LANECHANGEREQ = _descriptor.EnumDescriptor(
  name='LaneChangeReq',
  full_name='nio.proto.LaneChangeReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_REQ_LANE_CHANGE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LEFT_TURN', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_RIGHT_TURN', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_TIP_LEFT_TURN', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_TIP_RIGHT_TURN', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=775,
  serialized_end=900,
)
_sym_db.RegisterEnumDescriptor(_LANECHANGEREQ)

LaneChangeReq = enum_type_wrapper.EnumTypeWrapper(_LANECHANGEREQ)
_SPEEDADJREQ = _descriptor.EnumDescriptor(
  name='SpeedADJReq',
  full_name='nio.proto.SpeedADJReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_REQ_SPEED_ADJ', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_HIGHER_SPEED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_EQUAL_SPEED', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LOWER_SPEED', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=902,
  serialized_end=1001,
)
_sym_db.RegisterEnumDescriptor(_SPEEDADJREQ)

SpeedADJReq = enum_type_wrapper.EnumTypeWrapper(_SPEEDADJREQ)
_OVERRIDEREQ = _descriptor.EnumDescriptor(
  name='OverrideReq',
  full_name='nio.proto.OverrideReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_REQ_OVERRIDE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LATERAL_OVERRIDE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LONGITUDINAL_OVERRIDE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LATERAL_LONGITUDINAL_OVERRIDE', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1004,
  serialized_end=1134,
)
_sym_db.RegisterEnumDescriptor(_OVERRIDEREQ)

OverrideReq = enum_type_wrapper.EnumTypeWrapper(_OVERRIDEREQ)
_FUNCTIONREQUEST = _descriptor.EnumDescriptor(
  name='FunctionRequest',
  full_name='nio.proto.FunctionRequest',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='REQ_OFF', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_CHECKING', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_STANDBY', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_RUNNING', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1136,
  serialized_end=1218,
)
_sym_db.RegisterEnumDescriptor(_FUNCTIONREQUEST)

FunctionRequest = enum_type_wrapper.EnumTypeWrapper(_FUNCTIONREQUEST)
_ALCCONFIRMREQ = _descriptor.EnumDescriptor(
  name='ALCConfirmReq',
  full_name='nio.proto.ALCConfirmReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='REQ_AUTO', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_CONFIRM_TYPE_1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_CONFIRM_TYPE_2', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_CONFIRM_TYPE_3', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1220,
  serialized_end=1321,
)
_sym_db.RegisterEnumDescriptor(_ALCCONFIRMREQ)

ALCConfirmReq = enum_type_wrapper.EnumTypeWrapper(_ALCCONFIRMREQ)
_DAINHIBITREQ = _descriptor.EnumDescriptor(
  name='DAInhibitReq',
  full_name='nio.proto.DAInhibitReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='REQ_NO_ACTIVE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_ACTIVE_SOFT_AD', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_ACTIVE_SOFT_TD', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_ACTIVE_SOFT_EDA', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_ACTIVE_SOFT_INSTANT_OFF', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1324,
  serialized_end=1463,
)
_sym_db.RegisterEnumDescriptor(_DAINHIBITREQ)

DAInhibitReq = enum_type_wrapper.EnumTypeWrapper(_DAINHIBITREQ)
_VLCMODEREQ = _descriptor.EnumDescriptor(
  name='VLCModeReq',
  full_name='nio.proto.VLCModeReq',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_OFF', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_PASSIVE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_STANDBY', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_ACTIVE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_BRAKE_ONLY', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_OVERRIDE', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_STANDSTILL', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQ_LC_FAILURE', index=7, number=7,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1466,
  serialized_end=1640,
)
_sym_db.RegisterEnumDescriptor(_VLCMODEREQ)

VLCModeReq = enum_type_wrapper.EnumTypeWrapper(_VLCMODEREQ)
NO_REQ_SWITCH = 0
REQ_SWITCH_ON = 1
REQ_SWITCH_OFF = 2
NO_REQ_LANE_CHANGE = 0
REQ_LEFT_TURN = 1
REQ_RIGHT_TURN = 2
REQ_TIP_LEFT_TURN = 3
REQ_TIP_RIGHT_TURN = 4
NO_REQ_SPEED_ADJ = 0
REQ_HIGHER_SPEED = 1
REQ_EQUAL_SPEED = 2
REQ_LOWER_SPEED = 3
NO_REQ_OVERRIDE = 0
REQ_LATERAL_OVERRIDE = 1
REQ_LONGITUDINAL_OVERRIDE = 2
REQ_LATERAL_LONGITUDINAL_OVERRIDE = 3
REQ_OFF = 0
REQ_CHECKING = 1
REQ_STANDBY = 2
REQ_RUNNING = 3
REQ_AUTO = 0
REQ_CONFIRM_TYPE_1 = 1
REQ_CONFIRM_TYPE_2 = 2
REQ_CONFIRM_TYPE_3 = 3
REQ_NO_ACTIVE = 0
REQ_ACTIVE_SOFT_AD = 1
REQ_ACTIVE_SOFT_TD = 2
REQ_ACTIVE_SOFT_EDA = 3
REQ_ACTIVE_SOFT_INSTANT_OFF = 4
REQ_LC_OFF = 0
REQ_LC_PASSIVE = 1
REQ_LC_STANDBY = 2
REQ_LC_ACTIVE = 3
REQ_LC_BRAKE_ONLY = 4
REQ_LC_OVERRIDE = 5
REQ_LC_STANDSTILL = 6
REQ_LC_FAILURE = 7



_HMISTATE = _descriptor.Descriptor(
  name='HmiState',
  full_name='nio.proto.HmiState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time_meas', full_name='nio.proto.HmiState.time_meas', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='function_enable_req', full_name='nio.proto.HmiState.function_enable_req', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lane_change_req', full_name='nio.proto.HmiState.lane_change_req', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='speed_adjustment_req', full_name='nio.proto.HmiState.speed_adjustment_req', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference_speed_req', full_name='nio.proto.HmiState.reference_speed_req', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='override_req', full_name='nio.proto.HmiState.override_req', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference_tau_gap_req', full_name='nio.proto.HmiState.reference_tau_gap_req', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='da_inhibit_req', full_name='nio.proto.HmiState.da_inhibit_req', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='function_req', full_name='nio.proto.HmiState.function_req', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acl_confirm_req', full_name='nio.proto.HmiState.acl_confirm_req', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vlc_mode_req', full_name='nio.proto.HmiState.vlc_mode_req', index=10,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='takeover_req', full_name='nio.proto.HmiState.takeover_req', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='raw_reference_speed_req', full_name='nio.proto.HmiState.raw_reference_speed_req', index=12,
      number=13, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=703,
)

_HMISTATE.fields_by_name['function_enable_req'].enum_type = _SWICHREQ
_HMISTATE.fields_by_name['lane_change_req'].enum_type = _LANECHANGEREQ
_HMISTATE.fields_by_name['speed_adjustment_req'].enum_type = _SPEEDADJREQ
_HMISTATE.fields_by_name['override_req'].enum_type = _OVERRIDEREQ
_HMISTATE.fields_by_name['da_inhibit_req'].enum_type = _DAINHIBITREQ
_HMISTATE.fields_by_name['function_req'].enum_type = _FUNCTIONREQUEST
_HMISTATE.fields_by_name['acl_confirm_req'].enum_type = _ALCCONFIRMREQ
_HMISTATE.fields_by_name['vlc_mode_req'].enum_type = _VLCMODEREQ
DESCRIPTOR.message_types_by_name['HmiState'] = _HMISTATE
DESCRIPTOR.enum_types_by_name['SwichReq'] = _SWICHREQ
DESCRIPTOR.enum_types_by_name['LaneChangeReq'] = _LANECHANGEREQ
DESCRIPTOR.enum_types_by_name['SpeedADJReq'] = _SPEEDADJREQ
DESCRIPTOR.enum_types_by_name['OverrideReq'] = _OVERRIDEREQ
DESCRIPTOR.enum_types_by_name['FunctionRequest'] = _FUNCTIONREQUEST
DESCRIPTOR.enum_types_by_name['ALCConfirmReq'] = _ALCCONFIRMREQ
DESCRIPTOR.enum_types_by_name['DAInhibitReq'] = _DAINHIBITREQ
DESCRIPTOR.enum_types_by_name['VLCModeReq'] = _VLCMODEREQ
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HmiState = _reflection.GeneratedProtocolMessageType('HmiState', (_message.Message,), {
  'DESCRIPTOR' : _HMISTATE,
  '__module__' : 'hmi_state_pb2'
  # @@protoc_insertion_point(class_scope:nio.proto.HmiState)
  })
_sym_db.RegisterMessage(HmiState)


# @@protoc_insertion_point(module_scope)
