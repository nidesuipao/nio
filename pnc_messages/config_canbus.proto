
syntax = "proto2";

package nio.proto;

import "stream.proto";

message CanInterface {
  enum Type {
    INVALID = 0;
    VIRTUAL = 1;
    KVASER_PCIE = 2;  // https://www.kvaser.com/product/kvaser-pciecan-4xhs/
    MAZU=3;
  }

  optional Type type = 1;
  repeated ChannelConfig channel_config = 2;

  optional MazuChannelConfig mazu_channel_config = 3;
}

message ChannelConfig {
  optional int32 channels = 1;
  optional int32 bit_rate_k = 2 [default = 500];         // in kbps
  optional int32 read_timeout_us = 3 [default = 1000];   // in us
  optional int32 write_timeout_us = 4 [default = 1000];  // in us
}

message MazuChannelConfig{
  message Transit_Stream{   // transit stream between devices
    enum Device_ID{
      S1_ADP = 1;
      S3_ADB = 3;
      MCU_1 = 5;
      MCU_2 = 6;
    }
    optional Device_ID sender_id = 1;
    optional Device_ID receiver_id = 2;
    optional int32 stream_id = 3;
    optional Stream stream = 4;
  }

  message Channel{
    enum Channel_ID{
      ADAS_CAN = 0;
      CHASSIS_1 = 1;
      CHASSIS_2 = 2;
      FLM_CAN = 3;
    }
    optional Channel_ID channel_id = 1;
    optional int32 stream_id = 2;   // id should be identical to the transit stream id
    optional string channel_name = 3;
  }
  repeated Transit_Stream transit_stream = 1;
  repeated Channel channel = 2;
}

message TorqueScheduler {
  repeated TorqueSchedulerInfo scheduler = 1;
}

message TorqueSchedulerInfo {
  optional double speed = 1;  // m/s
  optional double torque = 2;
}

message SchedulerInfo {
  optional double speed = 1;  // m/s
  optional double value = 2;
}

message DeclimiterScheduler {
  repeated SchedulerInfo scheduler = 1;
}

message ChassisConfig {
  optional double acc_max_jerk = 1;
  optional double acc_min_jerk = 2 ;
  optional double acc_lower_rate_limiter = 3;
  optional double acc_upper_rate_limiter = 4;
  optional double steering_ratio = 5;
  optional double steering_angle_bound = 6;
  optional double steer_override_interval_time = 7;
  optional TorqueScheduler steer_override_torque_scheduler = 8;
  optional uint32 max_high_level_button_cnt = 9;
  optional uint32 init_reference_speed = 10;
  optional uint32 max_reference_speed = 11;
  optional double max_reference_time_distance = 12;
  optional bool enable_checking_signal_loss = 13 [default = true];
  optional bool enable_steer_overlay_driving_policy = 14;
  optional TorqueScheduler steer_overlay_same_dir_torque_table = 15;
  optional TorqueScheduler steer_overlay_back_dir_torque_table = 16;
  optional double steer_overlay_lk_lat_dist_bound = 17;
  optional double steer_overlay_lk_min_torque = 18;
  optional double steer_overlay_lc_lat_dist_bound = 19;
  optional double steer_overlay_lc_min_torque = 20;
  optional bool enable_dec_limiter_scheduler = 21 [default = false];
  optional DeclimiterScheduler dec_limiter_table = 22;
}


message ConfigCanbus {
  optional CanInterface interface = 1;

  enum CarModel {
    INVALID = 0;
    MKZ = 1;
    HAVAL = 2;
    FMT = 3;
    FMS = 4;
    NIO = 5;
    ES8 = 6;
    ET7 = 7;
  }
  optional CarModel car_model = 2;
  optional ChassisConfig chassis_config = 3;
}
