syntax = "proto2";

package nio.proto;

message PlannerEvaluation {
  optional uint64 time_meas = 1;
  optional bool path_qp_success  = 2;
  optional bool speed_qp_success = 3;
  optional double behavior_timecost = 4;    // ms
  optional double motion_timecost = 5;       // ms
  optional bool behavior_fallback = 6;
  optional bool motion_fallback = 7;

  enum LaneChangeType {
    NONE = 0;
    LEFT_FORWARD = 1;
    RIGHT_FORWARD = 2;
    FINISH = 3;
    CANCEL = 4;
  }
  optional LaneChangeType lane_change_type = 8;
  repeated AgentInfo agent_info = 9;
  optional double ego_neareast_refpoint_offset_to_map = 10; // m
  repeated BehaivorKeepConfusionMatrix behavior_keep_confusion_matrix = 11;
  enum PlannerCapabilityMode {
    LaneKeep = 0;
    LaneChange = 1;
    LaneMerge = 2;
  }
  repeated PlannerCapabilityMode planner_capability_mode = 12; // means ego is LK,LC or Merge and repeated means ego could Merge with LC
  repeated BehaviorMergeConfusionMatrix behavior_merge_confusion_matrix = 13;
  repeated BehaviorLaneChangeConfusionMatrix behavior_lane_change_confusion_matrix = 14;

  // batch of timestamps that describe the timeline of planner process
  optional uint64 on_roadmap_start_ts         = 15;
  optional uint64 on_global_routing_start_ts  = 16;
  optional uint64 update_navi_start_ts        = 17;
  optional uint64 planner_start_ts            = 18;
  optional uint64 planner_update_start_ts     = 19;
  optional uint64 planner_run_start_ts        = 20;
  optional uint64 prediction_run_start_ts     = 21;
  optional uint64 bp_run_start_ts             = 22;
  optional uint64 update_lane_change_start_ts = 23;
  optional uint64 update_refline_start_ts     = 24;
  optional uint64 mp_run_start_ts             = 25;
  optional uint64 planner_finished_ts         = 26;
  optional int32 perception_objects_count     = 27;
}

message AgentInfo {
   enum Type{
      FOLLOW = 0;
      CUT_IN = 1;
   }

   message LonLatInfo{
      optional double longitudinal = 1;
      optional double lateral = 2;
   }

   optional int32 id = 1;
   optional Type type = 2;
   optional LonLatInfo distance = 3;
   optional LonLatInfo velocity = 4;
   optional LonLatInfo acceleration = 5;
   optional double timestamp = 6;
}

message PlannerReturnCode {
   enum ErrorCode{
      FAILURE = 0;
      SUCCESS = 1;
      LOCAL_MAP_EMPTY = 2;
      GLOBAL_ROUTE_EMPTY = 3;
      LOCAL_ROUTER_FAILED = 4;
      REFERENCE_LINE_UPDATE_FAILED = 5;
      EGO_CAR_NOT_IN_LOCAL_MAP = 6;
      MOTION_PRE_CHECK_FAILED = 7;
      REF_LINE_GENERATOR_FAILED = 8;
   }
}

message BehaivorKeepConfusionMatrix {
   optional int32 tree_level = 1;
   optional int64 true_positive = 2 [default = 0];
   optional int64 false_positive = 3 [default = 0];
   optional int64 true_negative = 4 [default = 0];
   optional int64 false_negative = 5 [default = 0];
}

message BehaviorMergeConfusionMatrix {
   optional int32 tree_level = 1;
   optional bool matched_result = 2;
}

message BehaviorLaneChangeConfusionMatrix {
   optional int32 tree_level = 1;
   optional bool slot_match_result = 2;
   optional bool safety_match_result = 3;
}
