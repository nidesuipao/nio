
syntax = "proto2";

package nio.proto;

import "geometry.proto";

message Pose {
  // Vehicle reference point (VRP) is at center of rear axle.

  // When this message was published. In nanoseconds.
  optional uint64 time_pub = 1;
  
  // When the measurements were made. In nanoseconds.
  optional uint64 time_meas = 2;
  
  // GPS time of the measurements. In nanoseconds.
  optional uint64 time_gps = 3;
  
  // East/north/up with respect to the map origin.
  // Horizontal offsets x and y are 0 if VRP is right at the map origin.
  // Height z is with respect to WGS-84 ellipsoid.
  optional Vector3d position = 4;  // in meters
  
  // Euler angles (intrinsic sequence z-y-x).
  // Yaw is 0 when the car points to east, and is pi/2 when the car points to north.
  optional Vector3d roll_pitch_yaw = 5;  // in rad
  
  optional Vector3d velocity_enu = 6;  // in m/s
  
  optional Vector3d velocity_flu = 7;  // in m/s
  
  optional Vector3d angular_velocity_flu = 8;  // in rad/s
  
  optional Vector3d acceleration_flu = 9;  // in m/s^2
  
  // Standard deviation estimates.
  optional Vector3d position_std = 10;  // in meters
  
  optional Vector3d roll_pitch_yaw_std = 11;  // in rad
  
  optional Vector3d velocity_enu_std = 12;  // in m/s
  
  enum PoseType {
    // Invalid solution. Do NOT use.
    TYPE_INVALID = 0;
    // High-variance solution, in which the covariance matrix may be incorrect. Use with caution.
    TYPE_CONVERGING = 1;
    // Fully converged solution. Safe to use.
    TYPE_GOOD = 2;
  };  

  optional PoseType type = 16;
  
  optional Vector3d wgs84_deg = 17; // Longitude [degree], latitude [degree], and altitude [m].

  optional uint64 curr_hd_lane_id = 18;
}

