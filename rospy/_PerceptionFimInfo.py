# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/PerceptionFimInfo.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import rospy_message_converter.msg

class PerceptionFimInfo(genpy.Message):
  _md5sum = "d487535be27f8890ba8732090ff48392"
  _type = "rospy_message_converter/PerceptionFimInfo"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """bool FIM_IMU_Data_Error
bool FIM_Lidar_Data_Error
bool FIM_CAN_Data_Error
bool FIM_FW_Camera_Data_Error
bool FIM_FN_Camera_Data_Error
bool FIM_FL_Camera_Data_Error
bool FIM_FR_Camera_Data_Error
bool FIM_RL_Camera_Data_Error
bool FIM_RR_Camera_Data_Error
bool FIM_SVCLeft_Camera_Data_Error
bool FIM_SVCRight_Camera_Data_Error
bool FIM_SVCFront_Camera_Data_Error
bool FIM_SVCRear_Camera_Data_Error
bool FIM_RN_Camera_Data_Error
bool FIM_RTK_Data_Error
bool FIM_HDMAP_ERROR
FimInternalFaultResult FIM_NOP_Plus_Internal_Error
FimInternalFaultResult FIM_DA_Internal_Error
FimInternalFaultResult FIM_AEB_Internal_Error
FimInternalFaultResult FIM_ELK_Internal_Error
FimInternalFaultResult FIM_LKA_Internal_Error
FimInternalFaultResult FIM_EAS_Internal_Error
FimInternalFaultResult FIM_PASP_Internal_Error
FimInternalFaultResult FIM_SAPA_Internal_Error
uint64 publish_ptp_ts
string publisher_id
uint64 counter
uint64 publish_ts

================================================================================
MSG: rospy_message_converter/FimInternalFaultResult
bool Stop_Vehicle_Standstil
bool Deactivate_Function
bool Lateral_Control_Suppression
bool Longitudinal_Control_Suppression
bool Lane_Change_Suppression
bool Takeover_Warning
bool Attention_Warning
bool Insignificant
"""
  __slots__ = ['FIM_IMU_Data_Error','FIM_Lidar_Data_Error','FIM_CAN_Data_Error','FIM_FW_Camera_Data_Error','FIM_FN_Camera_Data_Error','FIM_FL_Camera_Data_Error','FIM_FR_Camera_Data_Error','FIM_RL_Camera_Data_Error','FIM_RR_Camera_Data_Error','FIM_SVCLeft_Camera_Data_Error','FIM_SVCRight_Camera_Data_Error','FIM_SVCFront_Camera_Data_Error','FIM_SVCRear_Camera_Data_Error','FIM_RN_Camera_Data_Error','FIM_RTK_Data_Error','FIM_HDMAP_ERROR','FIM_NOP_Plus_Internal_Error','FIM_DA_Internal_Error','FIM_AEB_Internal_Error','FIM_ELK_Internal_Error','FIM_LKA_Internal_Error','FIM_EAS_Internal_Error','FIM_PASP_Internal_Error','FIM_SAPA_Internal_Error','publish_ptp_ts','publisher_id','counter','publish_ts']
  _slot_types = ['bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','rospy_message_converter/FimInternalFaultResult','uint64','string','uint64','uint64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       FIM_IMU_Data_Error,FIM_Lidar_Data_Error,FIM_CAN_Data_Error,FIM_FW_Camera_Data_Error,FIM_FN_Camera_Data_Error,FIM_FL_Camera_Data_Error,FIM_FR_Camera_Data_Error,FIM_RL_Camera_Data_Error,FIM_RR_Camera_Data_Error,FIM_SVCLeft_Camera_Data_Error,FIM_SVCRight_Camera_Data_Error,FIM_SVCFront_Camera_Data_Error,FIM_SVCRear_Camera_Data_Error,FIM_RN_Camera_Data_Error,FIM_RTK_Data_Error,FIM_HDMAP_ERROR,FIM_NOP_Plus_Internal_Error,FIM_DA_Internal_Error,FIM_AEB_Internal_Error,FIM_ELK_Internal_Error,FIM_LKA_Internal_Error,FIM_EAS_Internal_Error,FIM_PASP_Internal_Error,FIM_SAPA_Internal_Error,publish_ptp_ts,publisher_id,counter,publish_ts

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(PerceptionFimInfo, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.FIM_IMU_Data_Error is None:
        self.FIM_IMU_Data_Error = False
      if self.FIM_Lidar_Data_Error is None:
        self.FIM_Lidar_Data_Error = False
      if self.FIM_CAN_Data_Error is None:
        self.FIM_CAN_Data_Error = False
      if self.FIM_FW_Camera_Data_Error is None:
        self.FIM_FW_Camera_Data_Error = False
      if self.FIM_FN_Camera_Data_Error is None:
        self.FIM_FN_Camera_Data_Error = False
      if self.FIM_FL_Camera_Data_Error is None:
        self.FIM_FL_Camera_Data_Error = False
      if self.FIM_FR_Camera_Data_Error is None:
        self.FIM_FR_Camera_Data_Error = False
      if self.FIM_RL_Camera_Data_Error is None:
        self.FIM_RL_Camera_Data_Error = False
      if self.FIM_RR_Camera_Data_Error is None:
        self.FIM_RR_Camera_Data_Error = False
      if self.FIM_SVCLeft_Camera_Data_Error is None:
        self.FIM_SVCLeft_Camera_Data_Error = False
      if self.FIM_SVCRight_Camera_Data_Error is None:
        self.FIM_SVCRight_Camera_Data_Error = False
      if self.FIM_SVCFront_Camera_Data_Error is None:
        self.FIM_SVCFront_Camera_Data_Error = False
      if self.FIM_SVCRear_Camera_Data_Error is None:
        self.FIM_SVCRear_Camera_Data_Error = False
      if self.FIM_RN_Camera_Data_Error is None:
        self.FIM_RN_Camera_Data_Error = False
      if self.FIM_RTK_Data_Error is None:
        self.FIM_RTK_Data_Error = False
      if self.FIM_HDMAP_ERROR is None:
        self.FIM_HDMAP_ERROR = False
      if self.FIM_NOP_Plus_Internal_Error is None:
        self.FIM_NOP_Plus_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_DA_Internal_Error is None:
        self.FIM_DA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_AEB_Internal_Error is None:
        self.FIM_AEB_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_ELK_Internal_Error is None:
        self.FIM_ELK_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_LKA_Internal_Error is None:
        self.FIM_LKA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_EAS_Internal_Error is None:
        self.FIM_EAS_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_PASP_Internal_Error is None:
        self.FIM_PASP_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_SAPA_Internal_Error is None:
        self.FIM_SAPA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.publish_ptp_ts is None:
        self.publish_ptp_ts = 0
      if self.publisher_id is None:
        self.publisher_id = ''
      if self.counter is None:
        self.counter = 0
      if self.publish_ts is None:
        self.publish_ts = 0
    else:
      self.FIM_IMU_Data_Error = False
      self.FIM_Lidar_Data_Error = False
      self.FIM_CAN_Data_Error = False
      self.FIM_FW_Camera_Data_Error = False
      self.FIM_FN_Camera_Data_Error = False
      self.FIM_FL_Camera_Data_Error = False
      self.FIM_FR_Camera_Data_Error = False
      self.FIM_RL_Camera_Data_Error = False
      self.FIM_RR_Camera_Data_Error = False
      self.FIM_SVCLeft_Camera_Data_Error = False
      self.FIM_SVCRight_Camera_Data_Error = False
      self.FIM_SVCFront_Camera_Data_Error = False
      self.FIM_SVCRear_Camera_Data_Error = False
      self.FIM_RN_Camera_Data_Error = False
      self.FIM_RTK_Data_Error = False
      self.FIM_HDMAP_ERROR = False
      self.FIM_NOP_Plus_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_DA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_AEB_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_ELK_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_LKA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_EAS_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_PASP_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.FIM_SAPA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      self.publish_ptp_ts = 0
      self.publisher_id = ''
      self.counter = 0
      self.publish_ts = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_80BQ().pack(_x.FIM_IMU_Data_Error, _x.FIM_Lidar_Data_Error, _x.FIM_CAN_Data_Error, _x.FIM_FW_Camera_Data_Error, _x.FIM_FN_Camera_Data_Error, _x.FIM_FL_Camera_Data_Error, _x.FIM_FR_Camera_Data_Error, _x.FIM_RL_Camera_Data_Error, _x.FIM_RR_Camera_Data_Error, _x.FIM_SVCLeft_Camera_Data_Error, _x.FIM_SVCRight_Camera_Data_Error, _x.FIM_SVCFront_Camera_Data_Error, _x.FIM_SVCRear_Camera_Data_Error, _x.FIM_RN_Camera_Data_Error, _x.FIM_RTK_Data_Error, _x.FIM_HDMAP_ERROR, _x.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_NOP_Plus_Internal_Error.Deactivate_Function, _x.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression, _x.FIM_NOP_Plus_Internal_Error.Takeover_Warning, _x.FIM_NOP_Plus_Internal_Error.Attention_Warning, _x.FIM_NOP_Plus_Internal_Error.Insignificant, _x.FIM_DA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_DA_Internal_Error.Deactivate_Function, _x.FIM_DA_Internal_Error.Lateral_Control_Suppression, _x.FIM_DA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_DA_Internal_Error.Lane_Change_Suppression, _x.FIM_DA_Internal_Error.Takeover_Warning, _x.FIM_DA_Internal_Error.Attention_Warning, _x.FIM_DA_Internal_Error.Insignificant, _x.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_AEB_Internal_Error.Deactivate_Function, _x.FIM_AEB_Internal_Error.Lateral_Control_Suppression, _x.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_AEB_Internal_Error.Lane_Change_Suppression, _x.FIM_AEB_Internal_Error.Takeover_Warning, _x.FIM_AEB_Internal_Error.Attention_Warning, _x.FIM_AEB_Internal_Error.Insignificant, _x.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_ELK_Internal_Error.Deactivate_Function, _x.FIM_ELK_Internal_Error.Lateral_Control_Suppression, _x.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_ELK_Internal_Error.Lane_Change_Suppression, _x.FIM_ELK_Internal_Error.Takeover_Warning, _x.FIM_ELK_Internal_Error.Attention_Warning, _x.FIM_ELK_Internal_Error.Insignificant, _x.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_LKA_Internal_Error.Deactivate_Function, _x.FIM_LKA_Internal_Error.Lateral_Control_Suppression, _x.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_LKA_Internal_Error.Lane_Change_Suppression, _x.FIM_LKA_Internal_Error.Takeover_Warning, _x.FIM_LKA_Internal_Error.Attention_Warning, _x.FIM_LKA_Internal_Error.Insignificant, _x.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_EAS_Internal_Error.Deactivate_Function, _x.FIM_EAS_Internal_Error.Lateral_Control_Suppression, _x.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_EAS_Internal_Error.Lane_Change_Suppression, _x.FIM_EAS_Internal_Error.Takeover_Warning, _x.FIM_EAS_Internal_Error.Attention_Warning, _x.FIM_EAS_Internal_Error.Insignificant, _x.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_PASP_Internal_Error.Deactivate_Function, _x.FIM_PASP_Internal_Error.Lateral_Control_Suppression, _x.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_PASP_Internal_Error.Lane_Change_Suppression, _x.FIM_PASP_Internal_Error.Takeover_Warning, _x.FIM_PASP_Internal_Error.Attention_Warning, _x.FIM_PASP_Internal_Error.Insignificant, _x.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_SAPA_Internal_Error.Deactivate_Function, _x.FIM_SAPA_Internal_Error.Lateral_Control_Suppression, _x.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_SAPA_Internal_Error.Lane_Change_Suppression, _x.FIM_SAPA_Internal_Error.Takeover_Warning, _x.FIM_SAPA_Internal_Error.Attention_Warning, _x.FIM_SAPA_Internal_Error.Insignificant, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.FIM_NOP_Plus_Internal_Error is None:
        self.FIM_NOP_Plus_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_DA_Internal_Error is None:
        self.FIM_DA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_AEB_Internal_Error is None:
        self.FIM_AEB_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_ELK_Internal_Error is None:
        self.FIM_ELK_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_LKA_Internal_Error is None:
        self.FIM_LKA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_EAS_Internal_Error is None:
        self.FIM_EAS_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_PASP_Internal_Error is None:
        self.FIM_PASP_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_SAPA_Internal_Error is None:
        self.FIM_SAPA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      end = 0
      _x = self
      start = end
      end += 88
      (_x.FIM_IMU_Data_Error, _x.FIM_Lidar_Data_Error, _x.FIM_CAN_Data_Error, _x.FIM_FW_Camera_Data_Error, _x.FIM_FN_Camera_Data_Error, _x.FIM_FL_Camera_Data_Error, _x.FIM_FR_Camera_Data_Error, _x.FIM_RL_Camera_Data_Error, _x.FIM_RR_Camera_Data_Error, _x.FIM_SVCLeft_Camera_Data_Error, _x.FIM_SVCRight_Camera_Data_Error, _x.FIM_SVCFront_Camera_Data_Error, _x.FIM_SVCRear_Camera_Data_Error, _x.FIM_RN_Camera_Data_Error, _x.FIM_RTK_Data_Error, _x.FIM_HDMAP_ERROR, _x.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_NOP_Plus_Internal_Error.Deactivate_Function, _x.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression, _x.FIM_NOP_Plus_Internal_Error.Takeover_Warning, _x.FIM_NOP_Plus_Internal_Error.Attention_Warning, _x.FIM_NOP_Plus_Internal_Error.Insignificant, _x.FIM_DA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_DA_Internal_Error.Deactivate_Function, _x.FIM_DA_Internal_Error.Lateral_Control_Suppression, _x.FIM_DA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_DA_Internal_Error.Lane_Change_Suppression, _x.FIM_DA_Internal_Error.Takeover_Warning, _x.FIM_DA_Internal_Error.Attention_Warning, _x.FIM_DA_Internal_Error.Insignificant, _x.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_AEB_Internal_Error.Deactivate_Function, _x.FIM_AEB_Internal_Error.Lateral_Control_Suppression, _x.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_AEB_Internal_Error.Lane_Change_Suppression, _x.FIM_AEB_Internal_Error.Takeover_Warning, _x.FIM_AEB_Internal_Error.Attention_Warning, _x.FIM_AEB_Internal_Error.Insignificant, _x.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_ELK_Internal_Error.Deactivate_Function, _x.FIM_ELK_Internal_Error.Lateral_Control_Suppression, _x.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_ELK_Internal_Error.Lane_Change_Suppression, _x.FIM_ELK_Internal_Error.Takeover_Warning, _x.FIM_ELK_Internal_Error.Attention_Warning, _x.FIM_ELK_Internal_Error.Insignificant, _x.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_LKA_Internal_Error.Deactivate_Function, _x.FIM_LKA_Internal_Error.Lateral_Control_Suppression, _x.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_LKA_Internal_Error.Lane_Change_Suppression, _x.FIM_LKA_Internal_Error.Takeover_Warning, _x.FIM_LKA_Internal_Error.Attention_Warning, _x.FIM_LKA_Internal_Error.Insignificant, _x.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_EAS_Internal_Error.Deactivate_Function, _x.FIM_EAS_Internal_Error.Lateral_Control_Suppression, _x.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_EAS_Internal_Error.Lane_Change_Suppression, _x.FIM_EAS_Internal_Error.Takeover_Warning, _x.FIM_EAS_Internal_Error.Attention_Warning, _x.FIM_EAS_Internal_Error.Insignificant, _x.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_PASP_Internal_Error.Deactivate_Function, _x.FIM_PASP_Internal_Error.Lateral_Control_Suppression, _x.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_PASP_Internal_Error.Lane_Change_Suppression, _x.FIM_PASP_Internal_Error.Takeover_Warning, _x.FIM_PASP_Internal_Error.Attention_Warning, _x.FIM_PASP_Internal_Error.Insignificant, _x.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_SAPA_Internal_Error.Deactivate_Function, _x.FIM_SAPA_Internal_Error.Lateral_Control_Suppression, _x.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_SAPA_Internal_Error.Lane_Change_Suppression, _x.FIM_SAPA_Internal_Error.Takeover_Warning, _x.FIM_SAPA_Internal_Error.Attention_Warning, _x.FIM_SAPA_Internal_Error.Insignificant, _x.publish_ptp_ts,) = _get_struct_80BQ().unpack(str[start:end])
      self.FIM_IMU_Data_Error = bool(self.FIM_IMU_Data_Error)
      self.FIM_Lidar_Data_Error = bool(self.FIM_Lidar_Data_Error)
      self.FIM_CAN_Data_Error = bool(self.FIM_CAN_Data_Error)
      self.FIM_FW_Camera_Data_Error = bool(self.FIM_FW_Camera_Data_Error)
      self.FIM_FN_Camera_Data_Error = bool(self.FIM_FN_Camera_Data_Error)
      self.FIM_FL_Camera_Data_Error = bool(self.FIM_FL_Camera_Data_Error)
      self.FIM_FR_Camera_Data_Error = bool(self.FIM_FR_Camera_Data_Error)
      self.FIM_RL_Camera_Data_Error = bool(self.FIM_RL_Camera_Data_Error)
      self.FIM_RR_Camera_Data_Error = bool(self.FIM_RR_Camera_Data_Error)
      self.FIM_SVCLeft_Camera_Data_Error = bool(self.FIM_SVCLeft_Camera_Data_Error)
      self.FIM_SVCRight_Camera_Data_Error = bool(self.FIM_SVCRight_Camera_Data_Error)
      self.FIM_SVCFront_Camera_Data_Error = bool(self.FIM_SVCFront_Camera_Data_Error)
      self.FIM_SVCRear_Camera_Data_Error = bool(self.FIM_SVCRear_Camera_Data_Error)
      self.FIM_RN_Camera_Data_Error = bool(self.FIM_RN_Camera_Data_Error)
      self.FIM_RTK_Data_Error = bool(self.FIM_RTK_Data_Error)
      self.FIM_HDMAP_ERROR = bool(self.FIM_HDMAP_ERROR)
      self.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_NOP_Plus_Internal_Error.Deactivate_Function = bool(self.FIM_NOP_Plus_Internal_Error.Deactivate_Function)
      self.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression)
      self.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression = bool(self.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression)
      self.FIM_NOP_Plus_Internal_Error.Takeover_Warning = bool(self.FIM_NOP_Plus_Internal_Error.Takeover_Warning)
      self.FIM_NOP_Plus_Internal_Error.Attention_Warning = bool(self.FIM_NOP_Plus_Internal_Error.Attention_Warning)
      self.FIM_NOP_Plus_Internal_Error.Insignificant = bool(self.FIM_NOP_Plus_Internal_Error.Insignificant)
      self.FIM_DA_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_DA_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_DA_Internal_Error.Deactivate_Function = bool(self.FIM_DA_Internal_Error.Deactivate_Function)
      self.FIM_DA_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_DA_Internal_Error.Lateral_Control_Suppression)
      self.FIM_DA_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_DA_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_DA_Internal_Error.Lane_Change_Suppression = bool(self.FIM_DA_Internal_Error.Lane_Change_Suppression)
      self.FIM_DA_Internal_Error.Takeover_Warning = bool(self.FIM_DA_Internal_Error.Takeover_Warning)
      self.FIM_DA_Internal_Error.Attention_Warning = bool(self.FIM_DA_Internal_Error.Attention_Warning)
      self.FIM_DA_Internal_Error.Insignificant = bool(self.FIM_DA_Internal_Error.Insignificant)
      self.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_AEB_Internal_Error.Deactivate_Function = bool(self.FIM_AEB_Internal_Error.Deactivate_Function)
      self.FIM_AEB_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_AEB_Internal_Error.Lateral_Control_Suppression)
      self.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_AEB_Internal_Error.Lane_Change_Suppression = bool(self.FIM_AEB_Internal_Error.Lane_Change_Suppression)
      self.FIM_AEB_Internal_Error.Takeover_Warning = bool(self.FIM_AEB_Internal_Error.Takeover_Warning)
      self.FIM_AEB_Internal_Error.Attention_Warning = bool(self.FIM_AEB_Internal_Error.Attention_Warning)
      self.FIM_AEB_Internal_Error.Insignificant = bool(self.FIM_AEB_Internal_Error.Insignificant)
      self.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_ELK_Internal_Error.Deactivate_Function = bool(self.FIM_ELK_Internal_Error.Deactivate_Function)
      self.FIM_ELK_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_ELK_Internal_Error.Lateral_Control_Suppression)
      self.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_ELK_Internal_Error.Lane_Change_Suppression = bool(self.FIM_ELK_Internal_Error.Lane_Change_Suppression)
      self.FIM_ELK_Internal_Error.Takeover_Warning = bool(self.FIM_ELK_Internal_Error.Takeover_Warning)
      self.FIM_ELK_Internal_Error.Attention_Warning = bool(self.FIM_ELK_Internal_Error.Attention_Warning)
      self.FIM_ELK_Internal_Error.Insignificant = bool(self.FIM_ELK_Internal_Error.Insignificant)
      self.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_LKA_Internal_Error.Deactivate_Function = bool(self.FIM_LKA_Internal_Error.Deactivate_Function)
      self.FIM_LKA_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_LKA_Internal_Error.Lateral_Control_Suppression)
      self.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_LKA_Internal_Error.Lane_Change_Suppression = bool(self.FIM_LKA_Internal_Error.Lane_Change_Suppression)
      self.FIM_LKA_Internal_Error.Takeover_Warning = bool(self.FIM_LKA_Internal_Error.Takeover_Warning)
      self.FIM_LKA_Internal_Error.Attention_Warning = bool(self.FIM_LKA_Internal_Error.Attention_Warning)
      self.FIM_LKA_Internal_Error.Insignificant = bool(self.FIM_LKA_Internal_Error.Insignificant)
      self.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_EAS_Internal_Error.Deactivate_Function = bool(self.FIM_EAS_Internal_Error.Deactivate_Function)
      self.FIM_EAS_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_EAS_Internal_Error.Lateral_Control_Suppression)
      self.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_EAS_Internal_Error.Lane_Change_Suppression = bool(self.FIM_EAS_Internal_Error.Lane_Change_Suppression)
      self.FIM_EAS_Internal_Error.Takeover_Warning = bool(self.FIM_EAS_Internal_Error.Takeover_Warning)
      self.FIM_EAS_Internal_Error.Attention_Warning = bool(self.FIM_EAS_Internal_Error.Attention_Warning)
      self.FIM_EAS_Internal_Error.Insignificant = bool(self.FIM_EAS_Internal_Error.Insignificant)
      self.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_PASP_Internal_Error.Deactivate_Function = bool(self.FIM_PASP_Internal_Error.Deactivate_Function)
      self.FIM_PASP_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_PASP_Internal_Error.Lateral_Control_Suppression)
      self.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_PASP_Internal_Error.Lane_Change_Suppression = bool(self.FIM_PASP_Internal_Error.Lane_Change_Suppression)
      self.FIM_PASP_Internal_Error.Takeover_Warning = bool(self.FIM_PASP_Internal_Error.Takeover_Warning)
      self.FIM_PASP_Internal_Error.Attention_Warning = bool(self.FIM_PASP_Internal_Error.Attention_Warning)
      self.FIM_PASP_Internal_Error.Insignificant = bool(self.FIM_PASP_Internal_Error.Insignificant)
      self.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_SAPA_Internal_Error.Deactivate_Function = bool(self.FIM_SAPA_Internal_Error.Deactivate_Function)
      self.FIM_SAPA_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_SAPA_Internal_Error.Lateral_Control_Suppression)
      self.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_SAPA_Internal_Error.Lane_Change_Suppression = bool(self.FIM_SAPA_Internal_Error.Lane_Change_Suppression)
      self.FIM_SAPA_Internal_Error.Takeover_Warning = bool(self.FIM_SAPA_Internal_Error.Takeover_Warning)
      self.FIM_SAPA_Internal_Error.Attention_Warning = bool(self.FIM_SAPA_Internal_Error.Attention_Warning)
      self.FIM_SAPA_Internal_Error.Insignificant = bool(self.FIM_SAPA_Internal_Error.Insignificant)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_80BQ().pack(_x.FIM_IMU_Data_Error, _x.FIM_Lidar_Data_Error, _x.FIM_CAN_Data_Error, _x.FIM_FW_Camera_Data_Error, _x.FIM_FN_Camera_Data_Error, _x.FIM_FL_Camera_Data_Error, _x.FIM_FR_Camera_Data_Error, _x.FIM_RL_Camera_Data_Error, _x.FIM_RR_Camera_Data_Error, _x.FIM_SVCLeft_Camera_Data_Error, _x.FIM_SVCRight_Camera_Data_Error, _x.FIM_SVCFront_Camera_Data_Error, _x.FIM_SVCRear_Camera_Data_Error, _x.FIM_RN_Camera_Data_Error, _x.FIM_RTK_Data_Error, _x.FIM_HDMAP_ERROR, _x.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_NOP_Plus_Internal_Error.Deactivate_Function, _x.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression, _x.FIM_NOP_Plus_Internal_Error.Takeover_Warning, _x.FIM_NOP_Plus_Internal_Error.Attention_Warning, _x.FIM_NOP_Plus_Internal_Error.Insignificant, _x.FIM_DA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_DA_Internal_Error.Deactivate_Function, _x.FIM_DA_Internal_Error.Lateral_Control_Suppression, _x.FIM_DA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_DA_Internal_Error.Lane_Change_Suppression, _x.FIM_DA_Internal_Error.Takeover_Warning, _x.FIM_DA_Internal_Error.Attention_Warning, _x.FIM_DA_Internal_Error.Insignificant, _x.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_AEB_Internal_Error.Deactivate_Function, _x.FIM_AEB_Internal_Error.Lateral_Control_Suppression, _x.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_AEB_Internal_Error.Lane_Change_Suppression, _x.FIM_AEB_Internal_Error.Takeover_Warning, _x.FIM_AEB_Internal_Error.Attention_Warning, _x.FIM_AEB_Internal_Error.Insignificant, _x.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_ELK_Internal_Error.Deactivate_Function, _x.FIM_ELK_Internal_Error.Lateral_Control_Suppression, _x.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_ELK_Internal_Error.Lane_Change_Suppression, _x.FIM_ELK_Internal_Error.Takeover_Warning, _x.FIM_ELK_Internal_Error.Attention_Warning, _x.FIM_ELK_Internal_Error.Insignificant, _x.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_LKA_Internal_Error.Deactivate_Function, _x.FIM_LKA_Internal_Error.Lateral_Control_Suppression, _x.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_LKA_Internal_Error.Lane_Change_Suppression, _x.FIM_LKA_Internal_Error.Takeover_Warning, _x.FIM_LKA_Internal_Error.Attention_Warning, _x.FIM_LKA_Internal_Error.Insignificant, _x.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_EAS_Internal_Error.Deactivate_Function, _x.FIM_EAS_Internal_Error.Lateral_Control_Suppression, _x.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_EAS_Internal_Error.Lane_Change_Suppression, _x.FIM_EAS_Internal_Error.Takeover_Warning, _x.FIM_EAS_Internal_Error.Attention_Warning, _x.FIM_EAS_Internal_Error.Insignificant, _x.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_PASP_Internal_Error.Deactivate_Function, _x.FIM_PASP_Internal_Error.Lateral_Control_Suppression, _x.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_PASP_Internal_Error.Lane_Change_Suppression, _x.FIM_PASP_Internal_Error.Takeover_Warning, _x.FIM_PASP_Internal_Error.Attention_Warning, _x.FIM_PASP_Internal_Error.Insignificant, _x.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_SAPA_Internal_Error.Deactivate_Function, _x.FIM_SAPA_Internal_Error.Lateral_Control_Suppression, _x.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_SAPA_Internal_Error.Lane_Change_Suppression, _x.FIM_SAPA_Internal_Error.Takeover_Warning, _x.FIM_SAPA_Internal_Error.Attention_Warning, _x.FIM_SAPA_Internal_Error.Insignificant, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.FIM_NOP_Plus_Internal_Error is None:
        self.FIM_NOP_Plus_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_DA_Internal_Error is None:
        self.FIM_DA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_AEB_Internal_Error is None:
        self.FIM_AEB_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_ELK_Internal_Error is None:
        self.FIM_ELK_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_LKA_Internal_Error is None:
        self.FIM_LKA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_EAS_Internal_Error is None:
        self.FIM_EAS_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_PASP_Internal_Error is None:
        self.FIM_PASP_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      if self.FIM_SAPA_Internal_Error is None:
        self.FIM_SAPA_Internal_Error = rospy_message_converter.msg.FimInternalFaultResult()
      end = 0
      _x = self
      start = end
      end += 88
      (_x.FIM_IMU_Data_Error, _x.FIM_Lidar_Data_Error, _x.FIM_CAN_Data_Error, _x.FIM_FW_Camera_Data_Error, _x.FIM_FN_Camera_Data_Error, _x.FIM_FL_Camera_Data_Error, _x.FIM_FR_Camera_Data_Error, _x.FIM_RL_Camera_Data_Error, _x.FIM_RR_Camera_Data_Error, _x.FIM_SVCLeft_Camera_Data_Error, _x.FIM_SVCRight_Camera_Data_Error, _x.FIM_SVCFront_Camera_Data_Error, _x.FIM_SVCRear_Camera_Data_Error, _x.FIM_RN_Camera_Data_Error, _x.FIM_RTK_Data_Error, _x.FIM_HDMAP_ERROR, _x.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_NOP_Plus_Internal_Error.Deactivate_Function, _x.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression, _x.FIM_NOP_Plus_Internal_Error.Takeover_Warning, _x.FIM_NOP_Plus_Internal_Error.Attention_Warning, _x.FIM_NOP_Plus_Internal_Error.Insignificant, _x.FIM_DA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_DA_Internal_Error.Deactivate_Function, _x.FIM_DA_Internal_Error.Lateral_Control_Suppression, _x.FIM_DA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_DA_Internal_Error.Lane_Change_Suppression, _x.FIM_DA_Internal_Error.Takeover_Warning, _x.FIM_DA_Internal_Error.Attention_Warning, _x.FIM_DA_Internal_Error.Insignificant, _x.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_AEB_Internal_Error.Deactivate_Function, _x.FIM_AEB_Internal_Error.Lateral_Control_Suppression, _x.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_AEB_Internal_Error.Lane_Change_Suppression, _x.FIM_AEB_Internal_Error.Takeover_Warning, _x.FIM_AEB_Internal_Error.Attention_Warning, _x.FIM_AEB_Internal_Error.Insignificant, _x.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_ELK_Internal_Error.Deactivate_Function, _x.FIM_ELK_Internal_Error.Lateral_Control_Suppression, _x.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_ELK_Internal_Error.Lane_Change_Suppression, _x.FIM_ELK_Internal_Error.Takeover_Warning, _x.FIM_ELK_Internal_Error.Attention_Warning, _x.FIM_ELK_Internal_Error.Insignificant, _x.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_LKA_Internal_Error.Deactivate_Function, _x.FIM_LKA_Internal_Error.Lateral_Control_Suppression, _x.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_LKA_Internal_Error.Lane_Change_Suppression, _x.FIM_LKA_Internal_Error.Takeover_Warning, _x.FIM_LKA_Internal_Error.Attention_Warning, _x.FIM_LKA_Internal_Error.Insignificant, _x.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_EAS_Internal_Error.Deactivate_Function, _x.FIM_EAS_Internal_Error.Lateral_Control_Suppression, _x.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_EAS_Internal_Error.Lane_Change_Suppression, _x.FIM_EAS_Internal_Error.Takeover_Warning, _x.FIM_EAS_Internal_Error.Attention_Warning, _x.FIM_EAS_Internal_Error.Insignificant, _x.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_PASP_Internal_Error.Deactivate_Function, _x.FIM_PASP_Internal_Error.Lateral_Control_Suppression, _x.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_PASP_Internal_Error.Lane_Change_Suppression, _x.FIM_PASP_Internal_Error.Takeover_Warning, _x.FIM_PASP_Internal_Error.Attention_Warning, _x.FIM_PASP_Internal_Error.Insignificant, _x.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil, _x.FIM_SAPA_Internal_Error.Deactivate_Function, _x.FIM_SAPA_Internal_Error.Lateral_Control_Suppression, _x.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression, _x.FIM_SAPA_Internal_Error.Lane_Change_Suppression, _x.FIM_SAPA_Internal_Error.Takeover_Warning, _x.FIM_SAPA_Internal_Error.Attention_Warning, _x.FIM_SAPA_Internal_Error.Insignificant, _x.publish_ptp_ts,) = _get_struct_80BQ().unpack(str[start:end])
      self.FIM_IMU_Data_Error = bool(self.FIM_IMU_Data_Error)
      self.FIM_Lidar_Data_Error = bool(self.FIM_Lidar_Data_Error)
      self.FIM_CAN_Data_Error = bool(self.FIM_CAN_Data_Error)
      self.FIM_FW_Camera_Data_Error = bool(self.FIM_FW_Camera_Data_Error)
      self.FIM_FN_Camera_Data_Error = bool(self.FIM_FN_Camera_Data_Error)
      self.FIM_FL_Camera_Data_Error = bool(self.FIM_FL_Camera_Data_Error)
      self.FIM_FR_Camera_Data_Error = bool(self.FIM_FR_Camera_Data_Error)
      self.FIM_RL_Camera_Data_Error = bool(self.FIM_RL_Camera_Data_Error)
      self.FIM_RR_Camera_Data_Error = bool(self.FIM_RR_Camera_Data_Error)
      self.FIM_SVCLeft_Camera_Data_Error = bool(self.FIM_SVCLeft_Camera_Data_Error)
      self.FIM_SVCRight_Camera_Data_Error = bool(self.FIM_SVCRight_Camera_Data_Error)
      self.FIM_SVCFront_Camera_Data_Error = bool(self.FIM_SVCFront_Camera_Data_Error)
      self.FIM_SVCRear_Camera_Data_Error = bool(self.FIM_SVCRear_Camera_Data_Error)
      self.FIM_RN_Camera_Data_Error = bool(self.FIM_RN_Camera_Data_Error)
      self.FIM_RTK_Data_Error = bool(self.FIM_RTK_Data_Error)
      self.FIM_HDMAP_ERROR = bool(self.FIM_HDMAP_ERROR)
      self.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_NOP_Plus_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_NOP_Plus_Internal_Error.Deactivate_Function = bool(self.FIM_NOP_Plus_Internal_Error.Deactivate_Function)
      self.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_NOP_Plus_Internal_Error.Lateral_Control_Suppression)
      self.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_NOP_Plus_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression = bool(self.FIM_NOP_Plus_Internal_Error.Lane_Change_Suppression)
      self.FIM_NOP_Plus_Internal_Error.Takeover_Warning = bool(self.FIM_NOP_Plus_Internal_Error.Takeover_Warning)
      self.FIM_NOP_Plus_Internal_Error.Attention_Warning = bool(self.FIM_NOP_Plus_Internal_Error.Attention_Warning)
      self.FIM_NOP_Plus_Internal_Error.Insignificant = bool(self.FIM_NOP_Plus_Internal_Error.Insignificant)
      self.FIM_DA_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_DA_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_DA_Internal_Error.Deactivate_Function = bool(self.FIM_DA_Internal_Error.Deactivate_Function)
      self.FIM_DA_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_DA_Internal_Error.Lateral_Control_Suppression)
      self.FIM_DA_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_DA_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_DA_Internal_Error.Lane_Change_Suppression = bool(self.FIM_DA_Internal_Error.Lane_Change_Suppression)
      self.FIM_DA_Internal_Error.Takeover_Warning = bool(self.FIM_DA_Internal_Error.Takeover_Warning)
      self.FIM_DA_Internal_Error.Attention_Warning = bool(self.FIM_DA_Internal_Error.Attention_Warning)
      self.FIM_DA_Internal_Error.Insignificant = bool(self.FIM_DA_Internal_Error.Insignificant)
      self.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_AEB_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_AEB_Internal_Error.Deactivate_Function = bool(self.FIM_AEB_Internal_Error.Deactivate_Function)
      self.FIM_AEB_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_AEB_Internal_Error.Lateral_Control_Suppression)
      self.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_AEB_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_AEB_Internal_Error.Lane_Change_Suppression = bool(self.FIM_AEB_Internal_Error.Lane_Change_Suppression)
      self.FIM_AEB_Internal_Error.Takeover_Warning = bool(self.FIM_AEB_Internal_Error.Takeover_Warning)
      self.FIM_AEB_Internal_Error.Attention_Warning = bool(self.FIM_AEB_Internal_Error.Attention_Warning)
      self.FIM_AEB_Internal_Error.Insignificant = bool(self.FIM_AEB_Internal_Error.Insignificant)
      self.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_ELK_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_ELK_Internal_Error.Deactivate_Function = bool(self.FIM_ELK_Internal_Error.Deactivate_Function)
      self.FIM_ELK_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_ELK_Internal_Error.Lateral_Control_Suppression)
      self.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_ELK_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_ELK_Internal_Error.Lane_Change_Suppression = bool(self.FIM_ELK_Internal_Error.Lane_Change_Suppression)
      self.FIM_ELK_Internal_Error.Takeover_Warning = bool(self.FIM_ELK_Internal_Error.Takeover_Warning)
      self.FIM_ELK_Internal_Error.Attention_Warning = bool(self.FIM_ELK_Internal_Error.Attention_Warning)
      self.FIM_ELK_Internal_Error.Insignificant = bool(self.FIM_ELK_Internal_Error.Insignificant)
      self.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_LKA_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_LKA_Internal_Error.Deactivate_Function = bool(self.FIM_LKA_Internal_Error.Deactivate_Function)
      self.FIM_LKA_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_LKA_Internal_Error.Lateral_Control_Suppression)
      self.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_LKA_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_LKA_Internal_Error.Lane_Change_Suppression = bool(self.FIM_LKA_Internal_Error.Lane_Change_Suppression)
      self.FIM_LKA_Internal_Error.Takeover_Warning = bool(self.FIM_LKA_Internal_Error.Takeover_Warning)
      self.FIM_LKA_Internal_Error.Attention_Warning = bool(self.FIM_LKA_Internal_Error.Attention_Warning)
      self.FIM_LKA_Internal_Error.Insignificant = bool(self.FIM_LKA_Internal_Error.Insignificant)
      self.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_EAS_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_EAS_Internal_Error.Deactivate_Function = bool(self.FIM_EAS_Internal_Error.Deactivate_Function)
      self.FIM_EAS_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_EAS_Internal_Error.Lateral_Control_Suppression)
      self.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_EAS_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_EAS_Internal_Error.Lane_Change_Suppression = bool(self.FIM_EAS_Internal_Error.Lane_Change_Suppression)
      self.FIM_EAS_Internal_Error.Takeover_Warning = bool(self.FIM_EAS_Internal_Error.Takeover_Warning)
      self.FIM_EAS_Internal_Error.Attention_Warning = bool(self.FIM_EAS_Internal_Error.Attention_Warning)
      self.FIM_EAS_Internal_Error.Insignificant = bool(self.FIM_EAS_Internal_Error.Insignificant)
      self.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_PASP_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_PASP_Internal_Error.Deactivate_Function = bool(self.FIM_PASP_Internal_Error.Deactivate_Function)
      self.FIM_PASP_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_PASP_Internal_Error.Lateral_Control_Suppression)
      self.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_PASP_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_PASP_Internal_Error.Lane_Change_Suppression = bool(self.FIM_PASP_Internal_Error.Lane_Change_Suppression)
      self.FIM_PASP_Internal_Error.Takeover_Warning = bool(self.FIM_PASP_Internal_Error.Takeover_Warning)
      self.FIM_PASP_Internal_Error.Attention_Warning = bool(self.FIM_PASP_Internal_Error.Attention_Warning)
      self.FIM_PASP_Internal_Error.Insignificant = bool(self.FIM_PASP_Internal_Error.Insignificant)
      self.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil = bool(self.FIM_SAPA_Internal_Error.Stop_Vehicle_Standstil)
      self.FIM_SAPA_Internal_Error.Deactivate_Function = bool(self.FIM_SAPA_Internal_Error.Deactivate_Function)
      self.FIM_SAPA_Internal_Error.Lateral_Control_Suppression = bool(self.FIM_SAPA_Internal_Error.Lateral_Control_Suppression)
      self.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression = bool(self.FIM_SAPA_Internal_Error.Longitudinal_Control_Suppression)
      self.FIM_SAPA_Internal_Error.Lane_Change_Suppression = bool(self.FIM_SAPA_Internal_Error.Lane_Change_Suppression)
      self.FIM_SAPA_Internal_Error.Takeover_Warning = bool(self.FIM_SAPA_Internal_Error.Takeover_Warning)
      self.FIM_SAPA_Internal_Error.Attention_Warning = bool(self.FIM_SAPA_Internal_Error.Attention_Warning)
      self.FIM_SAPA_Internal_Error.Insignificant = bool(self.FIM_SAPA_Internal_Error.Insignificant)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_2Q = None
def _get_struct_2Q():
    global _struct_2Q
    if _struct_2Q is None:
        _struct_2Q = struct.Struct("<2Q")
    return _struct_2Q
_struct_80BQ = None
def _get_struct_80BQ():
    global _struct_80BQ
    if _struct_80BQ is None:
        _struct_80BQ = struct.Struct("<80BQ")
    return _struct_80BQ
