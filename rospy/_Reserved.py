# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/Reserved.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class Reserved(genpy.Message):
  _md5sum = "dcd72efdb0a5bd5f8a894fb1c015ce5b"
  _type = "rospy_message_converter/Reserved"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """float64 reserved_0
float64 reserved_1
float64 reserved_2
float64 reserved_3
float64 reserved_4
float64 reserved_5
float64 reserved_6
float64 reserved_7
float64 reserved_8
float64 reserved_9
float64 reserved_10
float64 reserved_11
float64 reserved_12
float64 reserved_13
float64 reserved_14
float64 reserved_15
float64 reserved_16
float64 reserved_17
float64 reserved_18
float64 reserved_19
float64 reserved_20
float64 reserved_21
float64 reserved_22
float64 reserved_23
float64 reserved_24
float64 reserved_25
float64 reserved_26
float64 reserved_27
float64 reserved_28
float64 reserved_29
float64 reserved_30
float64 reserved_31
float64 reserved_32
float64 reserved_33
float64 reserved_34
float64 reserved_35
float64 reserved_36
float64 reserved_37
float64 reserved_38
float64 reserved_39
float64 reserved_40
float64 reserved_41
float64 reserved_42
float64 reserved_43
float64 reserved_44
float64 reserved_45
float64 reserved_46
float64 reserved_47
float64 reserved_48
float64 reserved_49
float64 reserved_50
float64 reserved_51
float64 reserved_52
float64 reserved_53
float64 reserved_54
float64 reserved_55
float64 reserved_56
float64 reserved_57
float64 reserved_58
float64 reserved_59
float64 reserved_60
float64 reserved_61
float64 reserved_62
float64 reserved_63
float64 reserved_64
float64 reserved_65
float64 reserved_66
float64 reserved_67
float64 reserved_68
float64 reserved_69
float64 reserved_70
float64 reserved_71
float64 reserved_72
float64 reserved_73
float64 reserved_74
float64 reserved_75
float64 reserved_76
float64 reserved_77
float64 reserved_78
float64 reserved_79
float64 reserved_80
float64 reserved_81
float64 reserved_82
float64 reserved_83
float64 reserved_84
float64 reserved_85
float64 reserved_86
float64 reserved_87
float64 reserved_88
float64 reserved_89
float64 reserved_90
float64 reserved_91
float64 reserved_92
float64 reserved_93
float64 reserved_94
float64 reserved_95
float64 reserved_96
float64 reserved_97
float64 reserved_98
float64 reserved_99
"""
  __slots__ = ['reserved_0','reserved_1','reserved_2','reserved_3','reserved_4','reserved_5','reserved_6','reserved_7','reserved_8','reserved_9','reserved_10','reserved_11','reserved_12','reserved_13','reserved_14','reserved_15','reserved_16','reserved_17','reserved_18','reserved_19','reserved_20','reserved_21','reserved_22','reserved_23','reserved_24','reserved_25','reserved_26','reserved_27','reserved_28','reserved_29','reserved_30','reserved_31','reserved_32','reserved_33','reserved_34','reserved_35','reserved_36','reserved_37','reserved_38','reserved_39','reserved_40','reserved_41','reserved_42','reserved_43','reserved_44','reserved_45','reserved_46','reserved_47','reserved_48','reserved_49','reserved_50','reserved_51','reserved_52','reserved_53','reserved_54','reserved_55','reserved_56','reserved_57','reserved_58','reserved_59','reserved_60','reserved_61','reserved_62','reserved_63','reserved_64','reserved_65','reserved_66','reserved_67','reserved_68','reserved_69','reserved_70','reserved_71','reserved_72','reserved_73','reserved_74','reserved_75','reserved_76','reserved_77','reserved_78','reserved_79','reserved_80','reserved_81','reserved_82','reserved_83','reserved_84','reserved_85','reserved_86','reserved_87','reserved_88','reserved_89','reserved_90','reserved_91','reserved_92','reserved_93','reserved_94','reserved_95','reserved_96','reserved_97','reserved_98','reserved_99']
  _slot_types = ['float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       reserved_0,reserved_1,reserved_2,reserved_3,reserved_4,reserved_5,reserved_6,reserved_7,reserved_8,reserved_9,reserved_10,reserved_11,reserved_12,reserved_13,reserved_14,reserved_15,reserved_16,reserved_17,reserved_18,reserved_19,reserved_20,reserved_21,reserved_22,reserved_23,reserved_24,reserved_25,reserved_26,reserved_27,reserved_28,reserved_29,reserved_30,reserved_31,reserved_32,reserved_33,reserved_34,reserved_35,reserved_36,reserved_37,reserved_38,reserved_39,reserved_40,reserved_41,reserved_42,reserved_43,reserved_44,reserved_45,reserved_46,reserved_47,reserved_48,reserved_49,reserved_50,reserved_51,reserved_52,reserved_53,reserved_54,reserved_55,reserved_56,reserved_57,reserved_58,reserved_59,reserved_60,reserved_61,reserved_62,reserved_63,reserved_64,reserved_65,reserved_66,reserved_67,reserved_68,reserved_69,reserved_70,reserved_71,reserved_72,reserved_73,reserved_74,reserved_75,reserved_76,reserved_77,reserved_78,reserved_79,reserved_80,reserved_81,reserved_82,reserved_83,reserved_84,reserved_85,reserved_86,reserved_87,reserved_88,reserved_89,reserved_90,reserved_91,reserved_92,reserved_93,reserved_94,reserved_95,reserved_96,reserved_97,reserved_98,reserved_99

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(Reserved, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.reserved_0 is None:
        self.reserved_0 = 0.
      if self.reserved_1 is None:
        self.reserved_1 = 0.
      if self.reserved_2 is None:
        self.reserved_2 = 0.
      if self.reserved_3 is None:
        self.reserved_3 = 0.
      if self.reserved_4 is None:
        self.reserved_4 = 0.
      if self.reserved_5 is None:
        self.reserved_5 = 0.
      if self.reserved_6 is None:
        self.reserved_6 = 0.
      if self.reserved_7 is None:
        self.reserved_7 = 0.
      if self.reserved_8 is None:
        self.reserved_8 = 0.
      if self.reserved_9 is None:
        self.reserved_9 = 0.
      if self.reserved_10 is None:
        self.reserved_10 = 0.
      if self.reserved_11 is None:
        self.reserved_11 = 0.
      if self.reserved_12 is None:
        self.reserved_12 = 0.
      if self.reserved_13 is None:
        self.reserved_13 = 0.
      if self.reserved_14 is None:
        self.reserved_14 = 0.
      if self.reserved_15 is None:
        self.reserved_15 = 0.
      if self.reserved_16 is None:
        self.reserved_16 = 0.
      if self.reserved_17 is None:
        self.reserved_17 = 0.
      if self.reserved_18 is None:
        self.reserved_18 = 0.
      if self.reserved_19 is None:
        self.reserved_19 = 0.
      if self.reserved_20 is None:
        self.reserved_20 = 0.
      if self.reserved_21 is None:
        self.reserved_21 = 0.
      if self.reserved_22 is None:
        self.reserved_22 = 0.
      if self.reserved_23 is None:
        self.reserved_23 = 0.
      if self.reserved_24 is None:
        self.reserved_24 = 0.
      if self.reserved_25 is None:
        self.reserved_25 = 0.
      if self.reserved_26 is None:
        self.reserved_26 = 0.
      if self.reserved_27 is None:
        self.reserved_27 = 0.
      if self.reserved_28 is None:
        self.reserved_28 = 0.
      if self.reserved_29 is None:
        self.reserved_29 = 0.
      if self.reserved_30 is None:
        self.reserved_30 = 0.
      if self.reserved_31 is None:
        self.reserved_31 = 0.
      if self.reserved_32 is None:
        self.reserved_32 = 0.
      if self.reserved_33 is None:
        self.reserved_33 = 0.
      if self.reserved_34 is None:
        self.reserved_34 = 0.
      if self.reserved_35 is None:
        self.reserved_35 = 0.
      if self.reserved_36 is None:
        self.reserved_36 = 0.
      if self.reserved_37 is None:
        self.reserved_37 = 0.
      if self.reserved_38 is None:
        self.reserved_38 = 0.
      if self.reserved_39 is None:
        self.reserved_39 = 0.
      if self.reserved_40 is None:
        self.reserved_40 = 0.
      if self.reserved_41 is None:
        self.reserved_41 = 0.
      if self.reserved_42 is None:
        self.reserved_42 = 0.
      if self.reserved_43 is None:
        self.reserved_43 = 0.
      if self.reserved_44 is None:
        self.reserved_44 = 0.
      if self.reserved_45 is None:
        self.reserved_45 = 0.
      if self.reserved_46 is None:
        self.reserved_46 = 0.
      if self.reserved_47 is None:
        self.reserved_47 = 0.
      if self.reserved_48 is None:
        self.reserved_48 = 0.
      if self.reserved_49 is None:
        self.reserved_49 = 0.
      if self.reserved_50 is None:
        self.reserved_50 = 0.
      if self.reserved_51 is None:
        self.reserved_51 = 0.
      if self.reserved_52 is None:
        self.reserved_52 = 0.
      if self.reserved_53 is None:
        self.reserved_53 = 0.
      if self.reserved_54 is None:
        self.reserved_54 = 0.
      if self.reserved_55 is None:
        self.reserved_55 = 0.
      if self.reserved_56 is None:
        self.reserved_56 = 0.
      if self.reserved_57 is None:
        self.reserved_57 = 0.
      if self.reserved_58 is None:
        self.reserved_58 = 0.
      if self.reserved_59 is None:
        self.reserved_59 = 0.
      if self.reserved_60 is None:
        self.reserved_60 = 0.
      if self.reserved_61 is None:
        self.reserved_61 = 0.
      if self.reserved_62 is None:
        self.reserved_62 = 0.
      if self.reserved_63 is None:
        self.reserved_63 = 0.
      if self.reserved_64 is None:
        self.reserved_64 = 0.
      if self.reserved_65 is None:
        self.reserved_65 = 0.
      if self.reserved_66 is None:
        self.reserved_66 = 0.
      if self.reserved_67 is None:
        self.reserved_67 = 0.
      if self.reserved_68 is None:
        self.reserved_68 = 0.
      if self.reserved_69 is None:
        self.reserved_69 = 0.
      if self.reserved_70 is None:
        self.reserved_70 = 0.
      if self.reserved_71 is None:
        self.reserved_71 = 0.
      if self.reserved_72 is None:
        self.reserved_72 = 0.
      if self.reserved_73 is None:
        self.reserved_73 = 0.
      if self.reserved_74 is None:
        self.reserved_74 = 0.
      if self.reserved_75 is None:
        self.reserved_75 = 0.
      if self.reserved_76 is None:
        self.reserved_76 = 0.
      if self.reserved_77 is None:
        self.reserved_77 = 0.
      if self.reserved_78 is None:
        self.reserved_78 = 0.
      if self.reserved_79 is None:
        self.reserved_79 = 0.
      if self.reserved_80 is None:
        self.reserved_80 = 0.
      if self.reserved_81 is None:
        self.reserved_81 = 0.
      if self.reserved_82 is None:
        self.reserved_82 = 0.
      if self.reserved_83 is None:
        self.reserved_83 = 0.
      if self.reserved_84 is None:
        self.reserved_84 = 0.
      if self.reserved_85 is None:
        self.reserved_85 = 0.
      if self.reserved_86 is None:
        self.reserved_86 = 0.
      if self.reserved_87 is None:
        self.reserved_87 = 0.
      if self.reserved_88 is None:
        self.reserved_88 = 0.
      if self.reserved_89 is None:
        self.reserved_89 = 0.
      if self.reserved_90 is None:
        self.reserved_90 = 0.
      if self.reserved_91 is None:
        self.reserved_91 = 0.
      if self.reserved_92 is None:
        self.reserved_92 = 0.
      if self.reserved_93 is None:
        self.reserved_93 = 0.
      if self.reserved_94 is None:
        self.reserved_94 = 0.
      if self.reserved_95 is None:
        self.reserved_95 = 0.
      if self.reserved_96 is None:
        self.reserved_96 = 0.
      if self.reserved_97 is None:
        self.reserved_97 = 0.
      if self.reserved_98 is None:
        self.reserved_98 = 0.
      if self.reserved_99 is None:
        self.reserved_99 = 0.
    else:
      self.reserved_0 = 0.
      self.reserved_1 = 0.
      self.reserved_2 = 0.
      self.reserved_3 = 0.
      self.reserved_4 = 0.
      self.reserved_5 = 0.
      self.reserved_6 = 0.
      self.reserved_7 = 0.
      self.reserved_8 = 0.
      self.reserved_9 = 0.
      self.reserved_10 = 0.
      self.reserved_11 = 0.
      self.reserved_12 = 0.
      self.reserved_13 = 0.
      self.reserved_14 = 0.
      self.reserved_15 = 0.
      self.reserved_16 = 0.
      self.reserved_17 = 0.
      self.reserved_18 = 0.
      self.reserved_19 = 0.
      self.reserved_20 = 0.
      self.reserved_21 = 0.
      self.reserved_22 = 0.
      self.reserved_23 = 0.
      self.reserved_24 = 0.
      self.reserved_25 = 0.
      self.reserved_26 = 0.
      self.reserved_27 = 0.
      self.reserved_28 = 0.
      self.reserved_29 = 0.
      self.reserved_30 = 0.
      self.reserved_31 = 0.
      self.reserved_32 = 0.
      self.reserved_33 = 0.
      self.reserved_34 = 0.
      self.reserved_35 = 0.
      self.reserved_36 = 0.
      self.reserved_37 = 0.
      self.reserved_38 = 0.
      self.reserved_39 = 0.
      self.reserved_40 = 0.
      self.reserved_41 = 0.
      self.reserved_42 = 0.
      self.reserved_43 = 0.
      self.reserved_44 = 0.
      self.reserved_45 = 0.
      self.reserved_46 = 0.
      self.reserved_47 = 0.
      self.reserved_48 = 0.
      self.reserved_49 = 0.
      self.reserved_50 = 0.
      self.reserved_51 = 0.
      self.reserved_52 = 0.
      self.reserved_53 = 0.
      self.reserved_54 = 0.
      self.reserved_55 = 0.
      self.reserved_56 = 0.
      self.reserved_57 = 0.
      self.reserved_58 = 0.
      self.reserved_59 = 0.
      self.reserved_60 = 0.
      self.reserved_61 = 0.
      self.reserved_62 = 0.
      self.reserved_63 = 0.
      self.reserved_64 = 0.
      self.reserved_65 = 0.
      self.reserved_66 = 0.
      self.reserved_67 = 0.
      self.reserved_68 = 0.
      self.reserved_69 = 0.
      self.reserved_70 = 0.
      self.reserved_71 = 0.
      self.reserved_72 = 0.
      self.reserved_73 = 0.
      self.reserved_74 = 0.
      self.reserved_75 = 0.
      self.reserved_76 = 0.
      self.reserved_77 = 0.
      self.reserved_78 = 0.
      self.reserved_79 = 0.
      self.reserved_80 = 0.
      self.reserved_81 = 0.
      self.reserved_82 = 0.
      self.reserved_83 = 0.
      self.reserved_84 = 0.
      self.reserved_85 = 0.
      self.reserved_86 = 0.
      self.reserved_87 = 0.
      self.reserved_88 = 0.
      self.reserved_89 = 0.
      self.reserved_90 = 0.
      self.reserved_91 = 0.
      self.reserved_92 = 0.
      self.reserved_93 = 0.
      self.reserved_94 = 0.
      self.reserved_95 = 0.
      self.reserved_96 = 0.
      self.reserved_97 = 0.
      self.reserved_98 = 0.
      self.reserved_99 = 0.

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_100d().pack(_x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9, _x.reserved_10, _x.reserved_11, _x.reserved_12, _x.reserved_13, _x.reserved_14, _x.reserved_15, _x.reserved_16, _x.reserved_17, _x.reserved_18, _x.reserved_19, _x.reserved_20, _x.reserved_21, _x.reserved_22, _x.reserved_23, _x.reserved_24, _x.reserved_25, _x.reserved_26, _x.reserved_27, _x.reserved_28, _x.reserved_29, _x.reserved_30, _x.reserved_31, _x.reserved_32, _x.reserved_33, _x.reserved_34, _x.reserved_35, _x.reserved_36, _x.reserved_37, _x.reserved_38, _x.reserved_39, _x.reserved_40, _x.reserved_41, _x.reserved_42, _x.reserved_43, _x.reserved_44, _x.reserved_45, _x.reserved_46, _x.reserved_47, _x.reserved_48, _x.reserved_49, _x.reserved_50, _x.reserved_51, _x.reserved_52, _x.reserved_53, _x.reserved_54, _x.reserved_55, _x.reserved_56, _x.reserved_57, _x.reserved_58, _x.reserved_59, _x.reserved_60, _x.reserved_61, _x.reserved_62, _x.reserved_63, _x.reserved_64, _x.reserved_65, _x.reserved_66, _x.reserved_67, _x.reserved_68, _x.reserved_69, _x.reserved_70, _x.reserved_71, _x.reserved_72, _x.reserved_73, _x.reserved_74, _x.reserved_75, _x.reserved_76, _x.reserved_77, _x.reserved_78, _x.reserved_79, _x.reserved_80, _x.reserved_81, _x.reserved_82, _x.reserved_83, _x.reserved_84, _x.reserved_85, _x.reserved_86, _x.reserved_87, _x.reserved_88, _x.reserved_89, _x.reserved_90, _x.reserved_91, _x.reserved_92, _x.reserved_93, _x.reserved_94, _x.reserved_95, _x.reserved_96, _x.reserved_97, _x.reserved_98, _x.reserved_99))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 800
      (_x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9, _x.reserved_10, _x.reserved_11, _x.reserved_12, _x.reserved_13, _x.reserved_14, _x.reserved_15, _x.reserved_16, _x.reserved_17, _x.reserved_18, _x.reserved_19, _x.reserved_20, _x.reserved_21, _x.reserved_22, _x.reserved_23, _x.reserved_24, _x.reserved_25, _x.reserved_26, _x.reserved_27, _x.reserved_28, _x.reserved_29, _x.reserved_30, _x.reserved_31, _x.reserved_32, _x.reserved_33, _x.reserved_34, _x.reserved_35, _x.reserved_36, _x.reserved_37, _x.reserved_38, _x.reserved_39, _x.reserved_40, _x.reserved_41, _x.reserved_42, _x.reserved_43, _x.reserved_44, _x.reserved_45, _x.reserved_46, _x.reserved_47, _x.reserved_48, _x.reserved_49, _x.reserved_50, _x.reserved_51, _x.reserved_52, _x.reserved_53, _x.reserved_54, _x.reserved_55, _x.reserved_56, _x.reserved_57, _x.reserved_58, _x.reserved_59, _x.reserved_60, _x.reserved_61, _x.reserved_62, _x.reserved_63, _x.reserved_64, _x.reserved_65, _x.reserved_66, _x.reserved_67, _x.reserved_68, _x.reserved_69, _x.reserved_70, _x.reserved_71, _x.reserved_72, _x.reserved_73, _x.reserved_74, _x.reserved_75, _x.reserved_76, _x.reserved_77, _x.reserved_78, _x.reserved_79, _x.reserved_80, _x.reserved_81, _x.reserved_82, _x.reserved_83, _x.reserved_84, _x.reserved_85, _x.reserved_86, _x.reserved_87, _x.reserved_88, _x.reserved_89, _x.reserved_90, _x.reserved_91, _x.reserved_92, _x.reserved_93, _x.reserved_94, _x.reserved_95, _x.reserved_96, _x.reserved_97, _x.reserved_98, _x.reserved_99,) = _get_struct_100d().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_100d().pack(_x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9, _x.reserved_10, _x.reserved_11, _x.reserved_12, _x.reserved_13, _x.reserved_14, _x.reserved_15, _x.reserved_16, _x.reserved_17, _x.reserved_18, _x.reserved_19, _x.reserved_20, _x.reserved_21, _x.reserved_22, _x.reserved_23, _x.reserved_24, _x.reserved_25, _x.reserved_26, _x.reserved_27, _x.reserved_28, _x.reserved_29, _x.reserved_30, _x.reserved_31, _x.reserved_32, _x.reserved_33, _x.reserved_34, _x.reserved_35, _x.reserved_36, _x.reserved_37, _x.reserved_38, _x.reserved_39, _x.reserved_40, _x.reserved_41, _x.reserved_42, _x.reserved_43, _x.reserved_44, _x.reserved_45, _x.reserved_46, _x.reserved_47, _x.reserved_48, _x.reserved_49, _x.reserved_50, _x.reserved_51, _x.reserved_52, _x.reserved_53, _x.reserved_54, _x.reserved_55, _x.reserved_56, _x.reserved_57, _x.reserved_58, _x.reserved_59, _x.reserved_60, _x.reserved_61, _x.reserved_62, _x.reserved_63, _x.reserved_64, _x.reserved_65, _x.reserved_66, _x.reserved_67, _x.reserved_68, _x.reserved_69, _x.reserved_70, _x.reserved_71, _x.reserved_72, _x.reserved_73, _x.reserved_74, _x.reserved_75, _x.reserved_76, _x.reserved_77, _x.reserved_78, _x.reserved_79, _x.reserved_80, _x.reserved_81, _x.reserved_82, _x.reserved_83, _x.reserved_84, _x.reserved_85, _x.reserved_86, _x.reserved_87, _x.reserved_88, _x.reserved_89, _x.reserved_90, _x.reserved_91, _x.reserved_92, _x.reserved_93, _x.reserved_94, _x.reserved_95, _x.reserved_96, _x.reserved_97, _x.reserved_98, _x.reserved_99))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 800
      (_x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9, _x.reserved_10, _x.reserved_11, _x.reserved_12, _x.reserved_13, _x.reserved_14, _x.reserved_15, _x.reserved_16, _x.reserved_17, _x.reserved_18, _x.reserved_19, _x.reserved_20, _x.reserved_21, _x.reserved_22, _x.reserved_23, _x.reserved_24, _x.reserved_25, _x.reserved_26, _x.reserved_27, _x.reserved_28, _x.reserved_29, _x.reserved_30, _x.reserved_31, _x.reserved_32, _x.reserved_33, _x.reserved_34, _x.reserved_35, _x.reserved_36, _x.reserved_37, _x.reserved_38, _x.reserved_39, _x.reserved_40, _x.reserved_41, _x.reserved_42, _x.reserved_43, _x.reserved_44, _x.reserved_45, _x.reserved_46, _x.reserved_47, _x.reserved_48, _x.reserved_49, _x.reserved_50, _x.reserved_51, _x.reserved_52, _x.reserved_53, _x.reserved_54, _x.reserved_55, _x.reserved_56, _x.reserved_57, _x.reserved_58, _x.reserved_59, _x.reserved_60, _x.reserved_61, _x.reserved_62, _x.reserved_63, _x.reserved_64, _x.reserved_65, _x.reserved_66, _x.reserved_67, _x.reserved_68, _x.reserved_69, _x.reserved_70, _x.reserved_71, _x.reserved_72, _x.reserved_73, _x.reserved_74, _x.reserved_75, _x.reserved_76, _x.reserved_77, _x.reserved_78, _x.reserved_79, _x.reserved_80, _x.reserved_81, _x.reserved_82, _x.reserved_83, _x.reserved_84, _x.reserved_85, _x.reserved_86, _x.reserved_87, _x.reserved_88, _x.reserved_89, _x.reserved_90, _x.reserved_91, _x.reserved_92, _x.reserved_93, _x.reserved_94, _x.reserved_95, _x.reserved_96, _x.reserved_97, _x.reserved_98, _x.reserved_99,) = _get_struct_100d().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_100d = None
def _get_struct_100d():
    global _struct_100d
    if _struct_100d is None:
        _struct_100d = struct.Struct("<100d")
    return _struct_100d
