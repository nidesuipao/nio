# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/ParEnvSlotsGenerateDebug.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import rospy_message_converter.msg

class ParEnvSlotsGenerateDebug(genpy.Message):
  _md5sum = "a571ceef227f8de2c8569a27cf233429"
  _type = "rospy_message_converter/ParEnvSlotsGenerateDebug"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """float32 ego_x
float32 ego_y
float32 ego_yaw
uint32 uss_slots_size
uint32 svc_slots_size
uint32 planning_return_slots_size
uint32 planning_slots_size
uint32 bind_slots_size
uint32 hmi_slots_size
ParkSlot psap_slot
psapMapObject psap_hmi
float32 psap_ad_pose_x
float32 psap_ad_pose_y
float32 psap_ad_pose_yaw
uint32 planning_ok_slots_size
uint32 track_slot_index
ParkSlot sapa_guidance_slot
bool guidance_slot_planning_ok
float32 guidance_slot_size_x
float32 guidance_slot_size_y
bool is_guidance_slot_narrow
uint64 reserved_0
uint64 reserved_1
uint64 reserved_2
uint64 reserved_3
float32 reserved_4
float32 reserved_5
float32 reserved_6
float32 reserved_7
bool reserved_8
bool reserved_9
string reserved_10

================================================================================
MSG: rospy_message_converter/ParkSlot
SlotBase slot
bool left_corner_exist
ParPoint left_corner_pt1
ParPoint left_corner_pt2
bool right_corner_exist
ParPoint right_corner_pt1
ParPoint right_corner_pt2
bool curb_exist
ParPoint curb_pt1
ParPoint curb_pt2
bool slot_bumper
ParPoint slot_bumper_pt1
ParPoint slot_bumper_pt2
ParPoint left_corner_pt3
ParPoint right_corner_pt3
bool corner_pt3_exist
ParPoint virtual_channel_pt1
ParPoint virtual_channel_pt2
bool virtual_channel_exist
int32 left_corner_type
int32 right_corner_type
uint32 slot_update_count
bool replan_suggest

================================================================================
MSG: rospy_message_converter/SlotBase
int32 hmi_index
int32 svc_index
int32 uss_index
ParPoint pt1
ParPoint pt2
ParPoint pt3
ParPoint pt4
int32 type
int32 source
float32 size_x
float32 size_y
ParPoint VehPos
float32 VehPsi
int32 status
int32 fov
int32 planning_result
float32 slot_angle

================================================================================
MSG: rospy_message_converter/ParPoint
float32 x
float32 y
float32 z

================================================================================
MSG: rospy_message_converter/psapMapObject
int32 psapMapObjectType
bool psapMapObjectValid
float32 psapMapObjectPointX1
float32 psapMapObjectPointY1
float32 psapMapObjectPointX2
float32 psapMapObjectPointY2
float32 psapMapObjectPointX3
float32 psapMapObjectPointY3
float32 psapMapObjectPointX4
float32 psapMapObjectPointY4
"""
  __slots__ = ['ego_x','ego_y','ego_yaw','uss_slots_size','svc_slots_size','planning_return_slots_size','planning_slots_size','bind_slots_size','hmi_slots_size','psap_slot','psap_hmi','psap_ad_pose_x','psap_ad_pose_y','psap_ad_pose_yaw','planning_ok_slots_size','track_slot_index','sapa_guidance_slot','guidance_slot_planning_ok','guidance_slot_size_x','guidance_slot_size_y','is_guidance_slot_narrow','reserved_0','reserved_1','reserved_2','reserved_3','reserved_4','reserved_5','reserved_6','reserved_7','reserved_8','reserved_9','reserved_10']
  _slot_types = ['float32','float32','float32','uint32','uint32','uint32','uint32','uint32','uint32','rospy_message_converter/ParkSlot','rospy_message_converter/psapMapObject','float32','float32','float32','uint32','uint32','rospy_message_converter/ParkSlot','bool','float32','float32','bool','uint64','uint64','uint64','uint64','float32','float32','float32','float32','bool','bool','string']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       ego_x,ego_y,ego_yaw,uss_slots_size,svc_slots_size,planning_return_slots_size,planning_slots_size,bind_slots_size,hmi_slots_size,psap_slot,psap_hmi,psap_ad_pose_x,psap_ad_pose_y,psap_ad_pose_yaw,planning_ok_slots_size,track_slot_index,sapa_guidance_slot,guidance_slot_planning_ok,guidance_slot_size_x,guidance_slot_size_y,is_guidance_slot_narrow,reserved_0,reserved_1,reserved_2,reserved_3,reserved_4,reserved_5,reserved_6,reserved_7,reserved_8,reserved_9,reserved_10

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(ParEnvSlotsGenerateDebug, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.ego_x is None:
        self.ego_x = 0.
      if self.ego_y is None:
        self.ego_y = 0.
      if self.ego_yaw is None:
        self.ego_yaw = 0.
      if self.uss_slots_size is None:
        self.uss_slots_size = 0
      if self.svc_slots_size is None:
        self.svc_slots_size = 0
      if self.planning_return_slots_size is None:
        self.planning_return_slots_size = 0
      if self.planning_slots_size is None:
        self.planning_slots_size = 0
      if self.bind_slots_size is None:
        self.bind_slots_size = 0
      if self.hmi_slots_size is None:
        self.hmi_slots_size = 0
      if self.psap_slot is None:
        self.psap_slot = rospy_message_converter.msg.ParkSlot()
      if self.psap_hmi is None:
        self.psap_hmi = rospy_message_converter.msg.psapMapObject()
      if self.psap_ad_pose_x is None:
        self.psap_ad_pose_x = 0.
      if self.psap_ad_pose_y is None:
        self.psap_ad_pose_y = 0.
      if self.psap_ad_pose_yaw is None:
        self.psap_ad_pose_yaw = 0.
      if self.planning_ok_slots_size is None:
        self.planning_ok_slots_size = 0
      if self.track_slot_index is None:
        self.track_slot_index = 0
      if self.sapa_guidance_slot is None:
        self.sapa_guidance_slot = rospy_message_converter.msg.ParkSlot()
      if self.guidance_slot_planning_ok is None:
        self.guidance_slot_planning_ok = False
      if self.guidance_slot_size_x is None:
        self.guidance_slot_size_x = 0.
      if self.guidance_slot_size_y is None:
        self.guidance_slot_size_y = 0.
      if self.is_guidance_slot_narrow is None:
        self.is_guidance_slot_narrow = False
      if self.reserved_0 is None:
        self.reserved_0 = 0
      if self.reserved_1 is None:
        self.reserved_1 = 0
      if self.reserved_2 is None:
        self.reserved_2 = 0
      if self.reserved_3 is None:
        self.reserved_3 = 0
      if self.reserved_4 is None:
        self.reserved_4 = 0.
      if self.reserved_5 is None:
        self.reserved_5 = 0.
      if self.reserved_6 is None:
        self.reserved_6 = 0.
      if self.reserved_7 is None:
        self.reserved_7 = 0.
      if self.reserved_8 is None:
        self.reserved_8 = False
      if self.reserved_9 is None:
        self.reserved_9 = False
      if self.reserved_10 is None:
        self.reserved_10 = ''
    else:
      self.ego_x = 0.
      self.ego_y = 0.
      self.ego_yaw = 0.
      self.uss_slots_size = 0
      self.svc_slots_size = 0
      self.planning_return_slots_size = 0
      self.planning_slots_size = 0
      self.bind_slots_size = 0
      self.hmi_slots_size = 0
      self.psap_slot = rospy_message_converter.msg.ParkSlot()
      self.psap_hmi = rospy_message_converter.msg.psapMapObject()
      self.psap_ad_pose_x = 0.
      self.psap_ad_pose_y = 0.
      self.psap_ad_pose_yaw = 0.
      self.planning_ok_slots_size = 0
      self.track_slot_index = 0
      self.sapa_guidance_slot = rospy_message_converter.msg.ParkSlot()
      self.guidance_slot_planning_ok = False
      self.guidance_slot_size_x = 0.
      self.guidance_slot_size_y = 0.
      self.is_guidance_slot_narrow = False
      self.reserved_0 = 0
      self.reserved_1 = 0
      self.reserved_2 = 0
      self.reserved_3 = 0
      self.reserved_4 = 0.
      self.reserved_5 = 0.
      self.reserved_6 = 0.
      self.reserved_7 = 0.
      self.reserved_8 = False
      self.reserved_9 = False
      self.reserved_10 = ''

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B().pack(_x.ego_x, _x.ego_y, _x.ego_yaw, _x.uss_slots_size, _x.svc_slots_size, _x.planning_return_slots_size, _x.planning_slots_size, _x.bind_slots_size, _x.hmi_slots_size, _x.psap_slot.slot.hmi_index, _x.psap_slot.slot.svc_index, _x.psap_slot.slot.uss_index, _x.psap_slot.slot.pt1.x, _x.psap_slot.slot.pt1.y, _x.psap_slot.slot.pt1.z, _x.psap_slot.slot.pt2.x, _x.psap_slot.slot.pt2.y, _x.psap_slot.slot.pt2.z, _x.psap_slot.slot.pt3.x, _x.psap_slot.slot.pt3.y, _x.psap_slot.slot.pt3.z, _x.psap_slot.slot.pt4.x, _x.psap_slot.slot.pt4.y, _x.psap_slot.slot.pt4.z, _x.psap_slot.slot.type, _x.psap_slot.slot.source, _x.psap_slot.slot.size_x, _x.psap_slot.slot.size_y, _x.psap_slot.slot.VehPos.x, _x.psap_slot.slot.VehPos.y, _x.psap_slot.slot.VehPos.z, _x.psap_slot.slot.VehPsi, _x.psap_slot.slot.status, _x.psap_slot.slot.fov, _x.psap_slot.slot.planning_result, _x.psap_slot.slot.slot_angle, _x.psap_slot.left_corner_exist, _x.psap_slot.left_corner_pt1.x, _x.psap_slot.left_corner_pt1.y, _x.psap_slot.left_corner_pt1.z, _x.psap_slot.left_corner_pt2.x, _x.psap_slot.left_corner_pt2.y, _x.psap_slot.left_corner_pt2.z, _x.psap_slot.right_corner_exist, _x.psap_slot.right_corner_pt1.x, _x.psap_slot.right_corner_pt1.y, _x.psap_slot.right_corner_pt1.z, _x.psap_slot.right_corner_pt2.x, _x.psap_slot.right_corner_pt2.y, _x.psap_slot.right_corner_pt2.z, _x.psap_slot.curb_exist, _x.psap_slot.curb_pt1.x, _x.psap_slot.curb_pt1.y, _x.psap_slot.curb_pt1.z, _x.psap_slot.curb_pt2.x, _x.psap_slot.curb_pt2.y, _x.psap_slot.curb_pt2.z, _x.psap_slot.slot_bumper, _x.psap_slot.slot_bumper_pt1.x, _x.psap_slot.slot_bumper_pt1.y, _x.psap_slot.slot_bumper_pt1.z, _x.psap_slot.slot_bumper_pt2.x, _x.psap_slot.slot_bumper_pt2.y, _x.psap_slot.slot_bumper_pt2.z, _x.psap_slot.left_corner_pt3.x, _x.psap_slot.left_corner_pt3.y, _x.psap_slot.left_corner_pt3.z, _x.psap_slot.right_corner_pt3.x, _x.psap_slot.right_corner_pt3.y, _x.psap_slot.right_corner_pt3.z, _x.psap_slot.corner_pt3_exist, _x.psap_slot.virtual_channel_pt1.x, _x.psap_slot.virtual_channel_pt1.y, _x.psap_slot.virtual_channel_pt1.z, _x.psap_slot.virtual_channel_pt2.x, _x.psap_slot.virtual_channel_pt2.y, _x.psap_slot.virtual_channel_pt2.z, _x.psap_slot.virtual_channel_exist, _x.psap_slot.left_corner_type, _x.psap_slot.right_corner_type, _x.psap_slot.slot_update_count, _x.psap_slot.replan_suggest, _x.psap_hmi.psapMapObjectType, _x.psap_hmi.psapMapObjectValid, _x.psap_hmi.psapMapObjectPointX1, _x.psap_hmi.psapMapObjectPointY1, _x.psap_hmi.psapMapObjectPointX2, _x.psap_hmi.psapMapObjectPointY2, _x.psap_hmi.psapMapObjectPointX3, _x.psap_hmi.psapMapObjectPointY3, _x.psap_hmi.psapMapObjectPointX4, _x.psap_hmi.psapMapObjectPointY4, _x.psap_ad_pose_x, _x.psap_ad_pose_y, _x.psap_ad_pose_yaw, _x.planning_ok_slots_size, _x.track_slot_index, _x.sapa_guidance_slot.slot.hmi_index, _x.sapa_guidance_slot.slot.svc_index, _x.sapa_guidance_slot.slot.uss_index, _x.sapa_guidance_slot.slot.pt1.x, _x.sapa_guidance_slot.slot.pt1.y, _x.sapa_guidance_slot.slot.pt1.z, _x.sapa_guidance_slot.slot.pt2.x, _x.sapa_guidance_slot.slot.pt2.y, _x.sapa_guidance_slot.slot.pt2.z, _x.sapa_guidance_slot.slot.pt3.x, _x.sapa_guidance_slot.slot.pt3.y, _x.sapa_guidance_slot.slot.pt3.z, _x.sapa_guidance_slot.slot.pt4.x, _x.sapa_guidance_slot.slot.pt4.y, _x.sapa_guidance_slot.slot.pt4.z, _x.sapa_guidance_slot.slot.type, _x.sapa_guidance_slot.slot.source, _x.sapa_guidance_slot.slot.size_x, _x.sapa_guidance_slot.slot.size_y, _x.sapa_guidance_slot.slot.VehPos.x, _x.sapa_guidance_slot.slot.VehPos.y, _x.sapa_guidance_slot.slot.VehPos.z, _x.sapa_guidance_slot.slot.VehPsi, _x.sapa_guidance_slot.slot.status, _x.sapa_guidance_slot.slot.fov, _x.sapa_guidance_slot.slot.planning_result, _x.sapa_guidance_slot.slot.slot_angle, _x.sapa_guidance_slot.left_corner_exist, _x.sapa_guidance_slot.left_corner_pt1.x, _x.sapa_guidance_slot.left_corner_pt1.y, _x.sapa_guidance_slot.left_corner_pt1.z, _x.sapa_guidance_slot.left_corner_pt2.x, _x.sapa_guidance_slot.left_corner_pt2.y, _x.sapa_guidance_slot.left_corner_pt2.z, _x.sapa_guidance_slot.right_corner_exist, _x.sapa_guidance_slot.right_corner_pt1.x, _x.sapa_guidance_slot.right_corner_pt1.y, _x.sapa_guidance_slot.right_corner_pt1.z, _x.sapa_guidance_slot.right_corner_pt2.x, _x.sapa_guidance_slot.right_corner_pt2.y, _x.sapa_guidance_slot.right_corner_pt2.z, _x.sapa_guidance_slot.curb_exist, _x.sapa_guidance_slot.curb_pt1.x, _x.sapa_guidance_slot.curb_pt1.y, _x.sapa_guidance_slot.curb_pt1.z, _x.sapa_guidance_slot.curb_pt2.x, _x.sapa_guidance_slot.curb_pt2.y, _x.sapa_guidance_slot.curb_pt2.z, _x.sapa_guidance_slot.slot_bumper, _x.sapa_guidance_slot.slot_bumper_pt1.x, _x.sapa_guidance_slot.slot_bumper_pt1.y, _x.sapa_guidance_slot.slot_bumper_pt1.z, _x.sapa_guidance_slot.slot_bumper_pt2.x, _x.sapa_guidance_slot.slot_bumper_pt2.y, _x.sapa_guidance_slot.slot_bumper_pt2.z, _x.sapa_guidance_slot.left_corner_pt3.x, _x.sapa_guidance_slot.left_corner_pt3.y, _x.sapa_guidance_slot.left_corner_pt3.z, _x.sapa_guidance_slot.right_corner_pt3.x, _x.sapa_guidance_slot.right_corner_pt3.y, _x.sapa_guidance_slot.right_corner_pt3.z, _x.sapa_guidance_slot.corner_pt3_exist, _x.sapa_guidance_slot.virtual_channel_pt1.x, _x.sapa_guidance_slot.virtual_channel_pt1.y, _x.sapa_guidance_slot.virtual_channel_pt1.z, _x.sapa_guidance_slot.virtual_channel_pt2.x, _x.sapa_guidance_slot.virtual_channel_pt2.y, _x.sapa_guidance_slot.virtual_channel_pt2.z, _x.sapa_guidance_slot.virtual_channel_exist, _x.sapa_guidance_slot.left_corner_type, _x.sapa_guidance_slot.right_corner_type, _x.sapa_guidance_slot.slot_update_count, _x.sapa_guidance_slot.replan_suggest, _x.guidance_slot_planning_ok, _x.guidance_slot_size_x, _x.guidance_slot_size_y, _x.is_guidance_slot_narrow, _x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9))
      _x = self.reserved_10
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.psap_slot is None:
        self.psap_slot = rospy_message_converter.msg.ParkSlot()
      if self.psap_hmi is None:
        self.psap_hmi = rospy_message_converter.msg.psapMapObject()
      if self.sapa_guidance_slot is None:
        self.sapa_guidance_slot = rospy_message_converter.msg.ParkSlot()
      end = 0
      _x = self
      start = end
      end += 695
      (_x.ego_x, _x.ego_y, _x.ego_yaw, _x.uss_slots_size, _x.svc_slots_size, _x.planning_return_slots_size, _x.planning_slots_size, _x.bind_slots_size, _x.hmi_slots_size, _x.psap_slot.slot.hmi_index, _x.psap_slot.slot.svc_index, _x.psap_slot.slot.uss_index, _x.psap_slot.slot.pt1.x, _x.psap_slot.slot.pt1.y, _x.psap_slot.slot.pt1.z, _x.psap_slot.slot.pt2.x, _x.psap_slot.slot.pt2.y, _x.psap_slot.slot.pt2.z, _x.psap_slot.slot.pt3.x, _x.psap_slot.slot.pt3.y, _x.psap_slot.slot.pt3.z, _x.psap_slot.slot.pt4.x, _x.psap_slot.slot.pt4.y, _x.psap_slot.slot.pt4.z, _x.psap_slot.slot.type, _x.psap_slot.slot.source, _x.psap_slot.slot.size_x, _x.psap_slot.slot.size_y, _x.psap_slot.slot.VehPos.x, _x.psap_slot.slot.VehPos.y, _x.psap_slot.slot.VehPos.z, _x.psap_slot.slot.VehPsi, _x.psap_slot.slot.status, _x.psap_slot.slot.fov, _x.psap_slot.slot.planning_result, _x.psap_slot.slot.slot_angle, _x.psap_slot.left_corner_exist, _x.psap_slot.left_corner_pt1.x, _x.psap_slot.left_corner_pt1.y, _x.psap_slot.left_corner_pt1.z, _x.psap_slot.left_corner_pt2.x, _x.psap_slot.left_corner_pt2.y, _x.psap_slot.left_corner_pt2.z, _x.psap_slot.right_corner_exist, _x.psap_slot.right_corner_pt1.x, _x.psap_slot.right_corner_pt1.y, _x.psap_slot.right_corner_pt1.z, _x.psap_slot.right_corner_pt2.x, _x.psap_slot.right_corner_pt2.y, _x.psap_slot.right_corner_pt2.z, _x.psap_slot.curb_exist, _x.psap_slot.curb_pt1.x, _x.psap_slot.curb_pt1.y, _x.psap_slot.curb_pt1.z, _x.psap_slot.curb_pt2.x, _x.psap_slot.curb_pt2.y, _x.psap_slot.curb_pt2.z, _x.psap_slot.slot_bumper, _x.psap_slot.slot_bumper_pt1.x, _x.psap_slot.slot_bumper_pt1.y, _x.psap_slot.slot_bumper_pt1.z, _x.psap_slot.slot_bumper_pt2.x, _x.psap_slot.slot_bumper_pt2.y, _x.psap_slot.slot_bumper_pt2.z, _x.psap_slot.left_corner_pt3.x, _x.psap_slot.left_corner_pt3.y, _x.psap_slot.left_corner_pt3.z, _x.psap_slot.right_corner_pt3.x, _x.psap_slot.right_corner_pt3.y, _x.psap_slot.right_corner_pt3.z, _x.psap_slot.corner_pt3_exist, _x.psap_slot.virtual_channel_pt1.x, _x.psap_slot.virtual_channel_pt1.y, _x.psap_slot.virtual_channel_pt1.z, _x.psap_slot.virtual_channel_pt2.x, _x.psap_slot.virtual_channel_pt2.y, _x.psap_slot.virtual_channel_pt2.z, _x.psap_slot.virtual_channel_exist, _x.psap_slot.left_corner_type, _x.psap_slot.right_corner_type, _x.psap_slot.slot_update_count, _x.psap_slot.replan_suggest, _x.psap_hmi.psapMapObjectType, _x.psap_hmi.psapMapObjectValid, _x.psap_hmi.psapMapObjectPointX1, _x.psap_hmi.psapMapObjectPointY1, _x.psap_hmi.psapMapObjectPointX2, _x.psap_hmi.psapMapObjectPointY2, _x.psap_hmi.psapMapObjectPointX3, _x.psap_hmi.psapMapObjectPointY3, _x.psap_hmi.psapMapObjectPointX4, _x.psap_hmi.psapMapObjectPointY4, _x.psap_ad_pose_x, _x.psap_ad_pose_y, _x.psap_ad_pose_yaw, _x.planning_ok_slots_size, _x.track_slot_index, _x.sapa_guidance_slot.slot.hmi_index, _x.sapa_guidance_slot.slot.svc_index, _x.sapa_guidance_slot.slot.uss_index, _x.sapa_guidance_slot.slot.pt1.x, _x.sapa_guidance_slot.slot.pt1.y, _x.sapa_guidance_slot.slot.pt1.z, _x.sapa_guidance_slot.slot.pt2.x, _x.sapa_guidance_slot.slot.pt2.y, _x.sapa_guidance_slot.slot.pt2.z, _x.sapa_guidance_slot.slot.pt3.x, _x.sapa_guidance_slot.slot.pt3.y, _x.sapa_guidance_slot.slot.pt3.z, _x.sapa_guidance_slot.slot.pt4.x, _x.sapa_guidance_slot.slot.pt4.y, _x.sapa_guidance_slot.slot.pt4.z, _x.sapa_guidance_slot.slot.type, _x.sapa_guidance_slot.slot.source, _x.sapa_guidance_slot.slot.size_x, _x.sapa_guidance_slot.slot.size_y, _x.sapa_guidance_slot.slot.VehPos.x, _x.sapa_guidance_slot.slot.VehPos.y, _x.sapa_guidance_slot.slot.VehPos.z, _x.sapa_guidance_slot.slot.VehPsi, _x.sapa_guidance_slot.slot.status, _x.sapa_guidance_slot.slot.fov, _x.sapa_guidance_slot.slot.planning_result, _x.sapa_guidance_slot.slot.slot_angle, _x.sapa_guidance_slot.left_corner_exist, _x.sapa_guidance_slot.left_corner_pt1.x, _x.sapa_guidance_slot.left_corner_pt1.y, _x.sapa_guidance_slot.left_corner_pt1.z, _x.sapa_guidance_slot.left_corner_pt2.x, _x.sapa_guidance_slot.left_corner_pt2.y, _x.sapa_guidance_slot.left_corner_pt2.z, _x.sapa_guidance_slot.right_corner_exist, _x.sapa_guidance_slot.right_corner_pt1.x, _x.sapa_guidance_slot.right_corner_pt1.y, _x.sapa_guidance_slot.right_corner_pt1.z, _x.sapa_guidance_slot.right_corner_pt2.x, _x.sapa_guidance_slot.right_corner_pt2.y, _x.sapa_guidance_slot.right_corner_pt2.z, _x.sapa_guidance_slot.curb_exist, _x.sapa_guidance_slot.curb_pt1.x, _x.sapa_guidance_slot.curb_pt1.y, _x.sapa_guidance_slot.curb_pt1.z, _x.sapa_guidance_slot.curb_pt2.x, _x.sapa_guidance_slot.curb_pt2.y, _x.sapa_guidance_slot.curb_pt2.z, _x.sapa_guidance_slot.slot_bumper, _x.sapa_guidance_slot.slot_bumper_pt1.x, _x.sapa_guidance_slot.slot_bumper_pt1.y, _x.sapa_guidance_slot.slot_bumper_pt1.z, _x.sapa_guidance_slot.slot_bumper_pt2.x, _x.sapa_guidance_slot.slot_bumper_pt2.y, _x.sapa_guidance_slot.slot_bumper_pt2.z, _x.sapa_guidance_slot.left_corner_pt3.x, _x.sapa_guidance_slot.left_corner_pt3.y, _x.sapa_guidance_slot.left_corner_pt3.z, _x.sapa_guidance_slot.right_corner_pt3.x, _x.sapa_guidance_slot.right_corner_pt3.y, _x.sapa_guidance_slot.right_corner_pt3.z, _x.sapa_guidance_slot.corner_pt3_exist, _x.sapa_guidance_slot.virtual_channel_pt1.x, _x.sapa_guidance_slot.virtual_channel_pt1.y, _x.sapa_guidance_slot.virtual_channel_pt1.z, _x.sapa_guidance_slot.virtual_channel_pt2.x, _x.sapa_guidance_slot.virtual_channel_pt2.y, _x.sapa_guidance_slot.virtual_channel_pt2.z, _x.sapa_guidance_slot.virtual_channel_exist, _x.sapa_guidance_slot.left_corner_type, _x.sapa_guidance_slot.right_corner_type, _x.sapa_guidance_slot.slot_update_count, _x.sapa_guidance_slot.replan_suggest, _x.guidance_slot_planning_ok, _x.guidance_slot_size_x, _x.guidance_slot_size_y, _x.is_guidance_slot_narrow, _x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9,) = _get_struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B().unpack(str[start:end])
      self.psap_slot.left_corner_exist = bool(self.psap_slot.left_corner_exist)
      self.psap_slot.right_corner_exist = bool(self.psap_slot.right_corner_exist)
      self.psap_slot.curb_exist = bool(self.psap_slot.curb_exist)
      self.psap_slot.slot_bumper = bool(self.psap_slot.slot_bumper)
      self.psap_slot.corner_pt3_exist = bool(self.psap_slot.corner_pt3_exist)
      self.psap_slot.virtual_channel_exist = bool(self.psap_slot.virtual_channel_exist)
      self.psap_slot.replan_suggest = bool(self.psap_slot.replan_suggest)
      self.psap_hmi.psapMapObjectValid = bool(self.psap_hmi.psapMapObjectValid)
      self.sapa_guidance_slot.left_corner_exist = bool(self.sapa_guidance_slot.left_corner_exist)
      self.sapa_guidance_slot.right_corner_exist = bool(self.sapa_guidance_slot.right_corner_exist)
      self.sapa_guidance_slot.curb_exist = bool(self.sapa_guidance_slot.curb_exist)
      self.sapa_guidance_slot.slot_bumper = bool(self.sapa_guidance_slot.slot_bumper)
      self.sapa_guidance_slot.corner_pt3_exist = bool(self.sapa_guidance_slot.corner_pt3_exist)
      self.sapa_guidance_slot.virtual_channel_exist = bool(self.sapa_guidance_slot.virtual_channel_exist)
      self.sapa_guidance_slot.replan_suggest = bool(self.sapa_guidance_slot.replan_suggest)
      self.guidance_slot_planning_ok = bool(self.guidance_slot_planning_ok)
      self.is_guidance_slot_narrow = bool(self.is_guidance_slot_narrow)
      self.reserved_8 = bool(self.reserved_8)
      self.reserved_9 = bool(self.reserved_9)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.reserved_10 = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.reserved_10 = str[start:end]
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B().pack(_x.ego_x, _x.ego_y, _x.ego_yaw, _x.uss_slots_size, _x.svc_slots_size, _x.planning_return_slots_size, _x.planning_slots_size, _x.bind_slots_size, _x.hmi_slots_size, _x.psap_slot.slot.hmi_index, _x.psap_slot.slot.svc_index, _x.psap_slot.slot.uss_index, _x.psap_slot.slot.pt1.x, _x.psap_slot.slot.pt1.y, _x.psap_slot.slot.pt1.z, _x.psap_slot.slot.pt2.x, _x.psap_slot.slot.pt2.y, _x.psap_slot.slot.pt2.z, _x.psap_slot.slot.pt3.x, _x.psap_slot.slot.pt3.y, _x.psap_slot.slot.pt3.z, _x.psap_slot.slot.pt4.x, _x.psap_slot.slot.pt4.y, _x.psap_slot.slot.pt4.z, _x.psap_slot.slot.type, _x.psap_slot.slot.source, _x.psap_slot.slot.size_x, _x.psap_slot.slot.size_y, _x.psap_slot.slot.VehPos.x, _x.psap_slot.slot.VehPos.y, _x.psap_slot.slot.VehPos.z, _x.psap_slot.slot.VehPsi, _x.psap_slot.slot.status, _x.psap_slot.slot.fov, _x.psap_slot.slot.planning_result, _x.psap_slot.slot.slot_angle, _x.psap_slot.left_corner_exist, _x.psap_slot.left_corner_pt1.x, _x.psap_slot.left_corner_pt1.y, _x.psap_slot.left_corner_pt1.z, _x.psap_slot.left_corner_pt2.x, _x.psap_slot.left_corner_pt2.y, _x.psap_slot.left_corner_pt2.z, _x.psap_slot.right_corner_exist, _x.psap_slot.right_corner_pt1.x, _x.psap_slot.right_corner_pt1.y, _x.psap_slot.right_corner_pt1.z, _x.psap_slot.right_corner_pt2.x, _x.psap_slot.right_corner_pt2.y, _x.psap_slot.right_corner_pt2.z, _x.psap_slot.curb_exist, _x.psap_slot.curb_pt1.x, _x.psap_slot.curb_pt1.y, _x.psap_slot.curb_pt1.z, _x.psap_slot.curb_pt2.x, _x.psap_slot.curb_pt2.y, _x.psap_slot.curb_pt2.z, _x.psap_slot.slot_bumper, _x.psap_slot.slot_bumper_pt1.x, _x.psap_slot.slot_bumper_pt1.y, _x.psap_slot.slot_bumper_pt1.z, _x.psap_slot.slot_bumper_pt2.x, _x.psap_slot.slot_bumper_pt2.y, _x.psap_slot.slot_bumper_pt2.z, _x.psap_slot.left_corner_pt3.x, _x.psap_slot.left_corner_pt3.y, _x.psap_slot.left_corner_pt3.z, _x.psap_slot.right_corner_pt3.x, _x.psap_slot.right_corner_pt3.y, _x.psap_slot.right_corner_pt3.z, _x.psap_slot.corner_pt3_exist, _x.psap_slot.virtual_channel_pt1.x, _x.psap_slot.virtual_channel_pt1.y, _x.psap_slot.virtual_channel_pt1.z, _x.psap_slot.virtual_channel_pt2.x, _x.psap_slot.virtual_channel_pt2.y, _x.psap_slot.virtual_channel_pt2.z, _x.psap_slot.virtual_channel_exist, _x.psap_slot.left_corner_type, _x.psap_slot.right_corner_type, _x.psap_slot.slot_update_count, _x.psap_slot.replan_suggest, _x.psap_hmi.psapMapObjectType, _x.psap_hmi.psapMapObjectValid, _x.psap_hmi.psapMapObjectPointX1, _x.psap_hmi.psapMapObjectPointY1, _x.psap_hmi.psapMapObjectPointX2, _x.psap_hmi.psapMapObjectPointY2, _x.psap_hmi.psapMapObjectPointX3, _x.psap_hmi.psapMapObjectPointY3, _x.psap_hmi.psapMapObjectPointX4, _x.psap_hmi.psapMapObjectPointY4, _x.psap_ad_pose_x, _x.psap_ad_pose_y, _x.psap_ad_pose_yaw, _x.planning_ok_slots_size, _x.track_slot_index, _x.sapa_guidance_slot.slot.hmi_index, _x.sapa_guidance_slot.slot.svc_index, _x.sapa_guidance_slot.slot.uss_index, _x.sapa_guidance_slot.slot.pt1.x, _x.sapa_guidance_slot.slot.pt1.y, _x.sapa_guidance_slot.slot.pt1.z, _x.sapa_guidance_slot.slot.pt2.x, _x.sapa_guidance_slot.slot.pt2.y, _x.sapa_guidance_slot.slot.pt2.z, _x.sapa_guidance_slot.slot.pt3.x, _x.sapa_guidance_slot.slot.pt3.y, _x.sapa_guidance_slot.slot.pt3.z, _x.sapa_guidance_slot.slot.pt4.x, _x.sapa_guidance_slot.slot.pt4.y, _x.sapa_guidance_slot.slot.pt4.z, _x.sapa_guidance_slot.slot.type, _x.sapa_guidance_slot.slot.source, _x.sapa_guidance_slot.slot.size_x, _x.sapa_guidance_slot.slot.size_y, _x.sapa_guidance_slot.slot.VehPos.x, _x.sapa_guidance_slot.slot.VehPos.y, _x.sapa_guidance_slot.slot.VehPos.z, _x.sapa_guidance_slot.slot.VehPsi, _x.sapa_guidance_slot.slot.status, _x.sapa_guidance_slot.slot.fov, _x.sapa_guidance_slot.slot.planning_result, _x.sapa_guidance_slot.slot.slot_angle, _x.sapa_guidance_slot.left_corner_exist, _x.sapa_guidance_slot.left_corner_pt1.x, _x.sapa_guidance_slot.left_corner_pt1.y, _x.sapa_guidance_slot.left_corner_pt1.z, _x.sapa_guidance_slot.left_corner_pt2.x, _x.sapa_guidance_slot.left_corner_pt2.y, _x.sapa_guidance_slot.left_corner_pt2.z, _x.sapa_guidance_slot.right_corner_exist, _x.sapa_guidance_slot.right_corner_pt1.x, _x.sapa_guidance_slot.right_corner_pt1.y, _x.sapa_guidance_slot.right_corner_pt1.z, _x.sapa_guidance_slot.right_corner_pt2.x, _x.sapa_guidance_slot.right_corner_pt2.y, _x.sapa_guidance_slot.right_corner_pt2.z, _x.sapa_guidance_slot.curb_exist, _x.sapa_guidance_slot.curb_pt1.x, _x.sapa_guidance_slot.curb_pt1.y, _x.sapa_guidance_slot.curb_pt1.z, _x.sapa_guidance_slot.curb_pt2.x, _x.sapa_guidance_slot.curb_pt2.y, _x.sapa_guidance_slot.curb_pt2.z, _x.sapa_guidance_slot.slot_bumper, _x.sapa_guidance_slot.slot_bumper_pt1.x, _x.sapa_guidance_slot.slot_bumper_pt1.y, _x.sapa_guidance_slot.slot_bumper_pt1.z, _x.sapa_guidance_slot.slot_bumper_pt2.x, _x.sapa_guidance_slot.slot_bumper_pt2.y, _x.sapa_guidance_slot.slot_bumper_pt2.z, _x.sapa_guidance_slot.left_corner_pt3.x, _x.sapa_guidance_slot.left_corner_pt3.y, _x.sapa_guidance_slot.left_corner_pt3.z, _x.sapa_guidance_slot.right_corner_pt3.x, _x.sapa_guidance_slot.right_corner_pt3.y, _x.sapa_guidance_slot.right_corner_pt3.z, _x.sapa_guidance_slot.corner_pt3_exist, _x.sapa_guidance_slot.virtual_channel_pt1.x, _x.sapa_guidance_slot.virtual_channel_pt1.y, _x.sapa_guidance_slot.virtual_channel_pt1.z, _x.sapa_guidance_slot.virtual_channel_pt2.x, _x.sapa_guidance_slot.virtual_channel_pt2.y, _x.sapa_guidance_slot.virtual_channel_pt2.z, _x.sapa_guidance_slot.virtual_channel_exist, _x.sapa_guidance_slot.left_corner_type, _x.sapa_guidance_slot.right_corner_type, _x.sapa_guidance_slot.slot_update_count, _x.sapa_guidance_slot.replan_suggest, _x.guidance_slot_planning_ok, _x.guidance_slot_size_x, _x.guidance_slot_size_y, _x.is_guidance_slot_narrow, _x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9))
      _x = self.reserved_10
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.psap_slot is None:
        self.psap_slot = rospy_message_converter.msg.ParkSlot()
      if self.psap_hmi is None:
        self.psap_hmi = rospy_message_converter.msg.psapMapObject()
      if self.sapa_guidance_slot is None:
        self.sapa_guidance_slot = rospy_message_converter.msg.ParkSlot()
      end = 0
      _x = self
      start = end
      end += 695
      (_x.ego_x, _x.ego_y, _x.ego_yaw, _x.uss_slots_size, _x.svc_slots_size, _x.planning_return_slots_size, _x.planning_slots_size, _x.bind_slots_size, _x.hmi_slots_size, _x.psap_slot.slot.hmi_index, _x.psap_slot.slot.svc_index, _x.psap_slot.slot.uss_index, _x.psap_slot.slot.pt1.x, _x.psap_slot.slot.pt1.y, _x.psap_slot.slot.pt1.z, _x.psap_slot.slot.pt2.x, _x.psap_slot.slot.pt2.y, _x.psap_slot.slot.pt2.z, _x.psap_slot.slot.pt3.x, _x.psap_slot.slot.pt3.y, _x.psap_slot.slot.pt3.z, _x.psap_slot.slot.pt4.x, _x.psap_slot.slot.pt4.y, _x.psap_slot.slot.pt4.z, _x.psap_slot.slot.type, _x.psap_slot.slot.source, _x.psap_slot.slot.size_x, _x.psap_slot.slot.size_y, _x.psap_slot.slot.VehPos.x, _x.psap_slot.slot.VehPos.y, _x.psap_slot.slot.VehPos.z, _x.psap_slot.slot.VehPsi, _x.psap_slot.slot.status, _x.psap_slot.slot.fov, _x.psap_slot.slot.planning_result, _x.psap_slot.slot.slot_angle, _x.psap_slot.left_corner_exist, _x.psap_slot.left_corner_pt1.x, _x.psap_slot.left_corner_pt1.y, _x.psap_slot.left_corner_pt1.z, _x.psap_slot.left_corner_pt2.x, _x.psap_slot.left_corner_pt2.y, _x.psap_slot.left_corner_pt2.z, _x.psap_slot.right_corner_exist, _x.psap_slot.right_corner_pt1.x, _x.psap_slot.right_corner_pt1.y, _x.psap_slot.right_corner_pt1.z, _x.psap_slot.right_corner_pt2.x, _x.psap_slot.right_corner_pt2.y, _x.psap_slot.right_corner_pt2.z, _x.psap_slot.curb_exist, _x.psap_slot.curb_pt1.x, _x.psap_slot.curb_pt1.y, _x.psap_slot.curb_pt1.z, _x.psap_slot.curb_pt2.x, _x.psap_slot.curb_pt2.y, _x.psap_slot.curb_pt2.z, _x.psap_slot.slot_bumper, _x.psap_slot.slot_bumper_pt1.x, _x.psap_slot.slot_bumper_pt1.y, _x.psap_slot.slot_bumper_pt1.z, _x.psap_slot.slot_bumper_pt2.x, _x.psap_slot.slot_bumper_pt2.y, _x.psap_slot.slot_bumper_pt2.z, _x.psap_slot.left_corner_pt3.x, _x.psap_slot.left_corner_pt3.y, _x.psap_slot.left_corner_pt3.z, _x.psap_slot.right_corner_pt3.x, _x.psap_slot.right_corner_pt3.y, _x.psap_slot.right_corner_pt3.z, _x.psap_slot.corner_pt3_exist, _x.psap_slot.virtual_channel_pt1.x, _x.psap_slot.virtual_channel_pt1.y, _x.psap_slot.virtual_channel_pt1.z, _x.psap_slot.virtual_channel_pt2.x, _x.psap_slot.virtual_channel_pt2.y, _x.psap_slot.virtual_channel_pt2.z, _x.psap_slot.virtual_channel_exist, _x.psap_slot.left_corner_type, _x.psap_slot.right_corner_type, _x.psap_slot.slot_update_count, _x.psap_slot.replan_suggest, _x.psap_hmi.psapMapObjectType, _x.psap_hmi.psapMapObjectValid, _x.psap_hmi.psapMapObjectPointX1, _x.psap_hmi.psapMapObjectPointY1, _x.psap_hmi.psapMapObjectPointX2, _x.psap_hmi.psapMapObjectPointY2, _x.psap_hmi.psapMapObjectPointX3, _x.psap_hmi.psapMapObjectPointY3, _x.psap_hmi.psapMapObjectPointX4, _x.psap_hmi.psapMapObjectPointY4, _x.psap_ad_pose_x, _x.psap_ad_pose_y, _x.psap_ad_pose_yaw, _x.planning_ok_slots_size, _x.track_slot_index, _x.sapa_guidance_slot.slot.hmi_index, _x.sapa_guidance_slot.slot.svc_index, _x.sapa_guidance_slot.slot.uss_index, _x.sapa_guidance_slot.slot.pt1.x, _x.sapa_guidance_slot.slot.pt1.y, _x.sapa_guidance_slot.slot.pt1.z, _x.sapa_guidance_slot.slot.pt2.x, _x.sapa_guidance_slot.slot.pt2.y, _x.sapa_guidance_slot.slot.pt2.z, _x.sapa_guidance_slot.slot.pt3.x, _x.sapa_guidance_slot.slot.pt3.y, _x.sapa_guidance_slot.slot.pt3.z, _x.sapa_guidance_slot.slot.pt4.x, _x.sapa_guidance_slot.slot.pt4.y, _x.sapa_guidance_slot.slot.pt4.z, _x.sapa_guidance_slot.slot.type, _x.sapa_guidance_slot.slot.source, _x.sapa_guidance_slot.slot.size_x, _x.sapa_guidance_slot.slot.size_y, _x.sapa_guidance_slot.slot.VehPos.x, _x.sapa_guidance_slot.slot.VehPos.y, _x.sapa_guidance_slot.slot.VehPos.z, _x.sapa_guidance_slot.slot.VehPsi, _x.sapa_guidance_slot.slot.status, _x.sapa_guidance_slot.slot.fov, _x.sapa_guidance_slot.slot.planning_result, _x.sapa_guidance_slot.slot.slot_angle, _x.sapa_guidance_slot.left_corner_exist, _x.sapa_guidance_slot.left_corner_pt1.x, _x.sapa_guidance_slot.left_corner_pt1.y, _x.sapa_guidance_slot.left_corner_pt1.z, _x.sapa_guidance_slot.left_corner_pt2.x, _x.sapa_guidance_slot.left_corner_pt2.y, _x.sapa_guidance_slot.left_corner_pt2.z, _x.sapa_guidance_slot.right_corner_exist, _x.sapa_guidance_slot.right_corner_pt1.x, _x.sapa_guidance_slot.right_corner_pt1.y, _x.sapa_guidance_slot.right_corner_pt1.z, _x.sapa_guidance_slot.right_corner_pt2.x, _x.sapa_guidance_slot.right_corner_pt2.y, _x.sapa_guidance_slot.right_corner_pt2.z, _x.sapa_guidance_slot.curb_exist, _x.sapa_guidance_slot.curb_pt1.x, _x.sapa_guidance_slot.curb_pt1.y, _x.sapa_guidance_slot.curb_pt1.z, _x.sapa_guidance_slot.curb_pt2.x, _x.sapa_guidance_slot.curb_pt2.y, _x.sapa_guidance_slot.curb_pt2.z, _x.sapa_guidance_slot.slot_bumper, _x.sapa_guidance_slot.slot_bumper_pt1.x, _x.sapa_guidance_slot.slot_bumper_pt1.y, _x.sapa_guidance_slot.slot_bumper_pt1.z, _x.sapa_guidance_slot.slot_bumper_pt2.x, _x.sapa_guidance_slot.slot_bumper_pt2.y, _x.sapa_guidance_slot.slot_bumper_pt2.z, _x.sapa_guidance_slot.left_corner_pt3.x, _x.sapa_guidance_slot.left_corner_pt3.y, _x.sapa_guidance_slot.left_corner_pt3.z, _x.sapa_guidance_slot.right_corner_pt3.x, _x.sapa_guidance_slot.right_corner_pt3.y, _x.sapa_guidance_slot.right_corner_pt3.z, _x.sapa_guidance_slot.corner_pt3_exist, _x.sapa_guidance_slot.virtual_channel_pt1.x, _x.sapa_guidance_slot.virtual_channel_pt1.y, _x.sapa_guidance_slot.virtual_channel_pt1.z, _x.sapa_guidance_slot.virtual_channel_pt2.x, _x.sapa_guidance_slot.virtual_channel_pt2.y, _x.sapa_guidance_slot.virtual_channel_pt2.z, _x.sapa_guidance_slot.virtual_channel_exist, _x.sapa_guidance_slot.left_corner_type, _x.sapa_guidance_slot.right_corner_type, _x.sapa_guidance_slot.slot_update_count, _x.sapa_guidance_slot.replan_suggest, _x.guidance_slot_planning_ok, _x.guidance_slot_size_x, _x.guidance_slot_size_y, _x.is_guidance_slot_narrow, _x.reserved_0, _x.reserved_1, _x.reserved_2, _x.reserved_3, _x.reserved_4, _x.reserved_5, _x.reserved_6, _x.reserved_7, _x.reserved_8, _x.reserved_9,) = _get_struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B().unpack(str[start:end])
      self.psap_slot.left_corner_exist = bool(self.psap_slot.left_corner_exist)
      self.psap_slot.right_corner_exist = bool(self.psap_slot.right_corner_exist)
      self.psap_slot.curb_exist = bool(self.psap_slot.curb_exist)
      self.psap_slot.slot_bumper = bool(self.psap_slot.slot_bumper)
      self.psap_slot.corner_pt3_exist = bool(self.psap_slot.corner_pt3_exist)
      self.psap_slot.virtual_channel_exist = bool(self.psap_slot.virtual_channel_exist)
      self.psap_slot.replan_suggest = bool(self.psap_slot.replan_suggest)
      self.psap_hmi.psapMapObjectValid = bool(self.psap_hmi.psapMapObjectValid)
      self.sapa_guidance_slot.left_corner_exist = bool(self.sapa_guidance_slot.left_corner_exist)
      self.sapa_guidance_slot.right_corner_exist = bool(self.sapa_guidance_slot.right_corner_exist)
      self.sapa_guidance_slot.curb_exist = bool(self.sapa_guidance_slot.curb_exist)
      self.sapa_guidance_slot.slot_bumper = bool(self.sapa_guidance_slot.slot_bumper)
      self.sapa_guidance_slot.corner_pt3_exist = bool(self.sapa_guidance_slot.corner_pt3_exist)
      self.sapa_guidance_slot.virtual_channel_exist = bool(self.sapa_guidance_slot.virtual_channel_exist)
      self.sapa_guidance_slot.replan_suggest = bool(self.sapa_guidance_slot.replan_suggest)
      self.guidance_slot_planning_ok = bool(self.guidance_slot_planning_ok)
      self.is_guidance_slot_narrow = bool(self.is_guidance_slot_narrow)
      self.reserved_8 = bool(self.reserved_8)
      self.reserved_9 = bool(self.reserved_9)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.reserved_10 = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.reserved_10 = str[start:end]
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B = None
def _get_struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B():
    global _struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B
    if _struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B is None:
        _struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B = struct.Struct("<3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B")
    return _struct_3f6I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iIBiB11f2I3i12f2i6f3ifB6fB6fB6fB12fB6fB2iI2B2fB4Q4f2B
