# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/USSlotInfo.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class USSlotInfo(genpy.Message):
  _md5sum = "e8a7602bd51694a55e5f46f4b7679f14"
  _type = "rospy_message_converter/USSlotInfo"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """uint32 SlotSizeX
uint32 SlotSizeY
int32 SlotVehX
int32 SlotVehY
float32 SlotVehPsi
int32 SlotDepthRef
uint32 SlotIndex
int32 SlotType
int32 SlotSts
int32 SlotObj1Typ
int32 SlotObj1X
int32 SlotObj1Y
int32 SlotObj1Alpha
int32 SlotObj2Typ
int32 SlotObj2X
int32 SlotObj2Y
int32 SlotObj2Alpha
"""
  __slots__ = ['SlotSizeX','SlotSizeY','SlotVehX','SlotVehY','SlotVehPsi','SlotDepthRef','SlotIndex','SlotType','SlotSts','SlotObj1Typ','SlotObj1X','SlotObj1Y','SlotObj1Alpha','SlotObj2Typ','SlotObj2X','SlotObj2Y','SlotObj2Alpha']
  _slot_types = ['uint32','uint32','int32','int32','float32','int32','uint32','int32','int32','int32','int32','int32','int32','int32','int32','int32','int32']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       SlotSizeX,SlotSizeY,SlotVehX,SlotVehY,SlotVehPsi,SlotDepthRef,SlotIndex,SlotType,SlotSts,SlotObj1Typ,SlotObj1X,SlotObj1Y,SlotObj1Alpha,SlotObj2Typ,SlotObj2X,SlotObj2Y,SlotObj2Alpha

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(USSlotInfo, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.SlotSizeX is None:
        self.SlotSizeX = 0
      if self.SlotSizeY is None:
        self.SlotSizeY = 0
      if self.SlotVehX is None:
        self.SlotVehX = 0
      if self.SlotVehY is None:
        self.SlotVehY = 0
      if self.SlotVehPsi is None:
        self.SlotVehPsi = 0.
      if self.SlotDepthRef is None:
        self.SlotDepthRef = 0
      if self.SlotIndex is None:
        self.SlotIndex = 0
      if self.SlotType is None:
        self.SlotType = 0
      if self.SlotSts is None:
        self.SlotSts = 0
      if self.SlotObj1Typ is None:
        self.SlotObj1Typ = 0
      if self.SlotObj1X is None:
        self.SlotObj1X = 0
      if self.SlotObj1Y is None:
        self.SlotObj1Y = 0
      if self.SlotObj1Alpha is None:
        self.SlotObj1Alpha = 0
      if self.SlotObj2Typ is None:
        self.SlotObj2Typ = 0
      if self.SlotObj2X is None:
        self.SlotObj2X = 0
      if self.SlotObj2Y is None:
        self.SlotObj2Y = 0
      if self.SlotObj2Alpha is None:
        self.SlotObj2Alpha = 0
    else:
      self.SlotSizeX = 0
      self.SlotSizeY = 0
      self.SlotVehX = 0
      self.SlotVehY = 0
      self.SlotVehPsi = 0.
      self.SlotDepthRef = 0
      self.SlotIndex = 0
      self.SlotType = 0
      self.SlotSts = 0
      self.SlotObj1Typ = 0
      self.SlotObj1X = 0
      self.SlotObj1Y = 0
      self.SlotObj1Alpha = 0
      self.SlotObj2Typ = 0
      self.SlotObj2X = 0
      self.SlotObj2Y = 0
      self.SlotObj2Alpha = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_2I2ifiI10i().pack(_x.SlotSizeX, _x.SlotSizeY, _x.SlotVehX, _x.SlotVehY, _x.SlotVehPsi, _x.SlotDepthRef, _x.SlotIndex, _x.SlotType, _x.SlotSts, _x.SlotObj1Typ, _x.SlotObj1X, _x.SlotObj1Y, _x.SlotObj1Alpha, _x.SlotObj2Typ, _x.SlotObj2X, _x.SlotObj2Y, _x.SlotObj2Alpha))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 68
      (_x.SlotSizeX, _x.SlotSizeY, _x.SlotVehX, _x.SlotVehY, _x.SlotVehPsi, _x.SlotDepthRef, _x.SlotIndex, _x.SlotType, _x.SlotSts, _x.SlotObj1Typ, _x.SlotObj1X, _x.SlotObj1Y, _x.SlotObj1Alpha, _x.SlotObj2Typ, _x.SlotObj2X, _x.SlotObj2Y, _x.SlotObj2Alpha,) = _get_struct_2I2ifiI10i().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_2I2ifiI10i().pack(_x.SlotSizeX, _x.SlotSizeY, _x.SlotVehX, _x.SlotVehY, _x.SlotVehPsi, _x.SlotDepthRef, _x.SlotIndex, _x.SlotType, _x.SlotSts, _x.SlotObj1Typ, _x.SlotObj1X, _x.SlotObj1Y, _x.SlotObj1Alpha, _x.SlotObj2Typ, _x.SlotObj2X, _x.SlotObj2Y, _x.SlotObj2Alpha))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 68
      (_x.SlotSizeX, _x.SlotSizeY, _x.SlotVehX, _x.SlotVehY, _x.SlotVehPsi, _x.SlotDepthRef, _x.SlotIndex, _x.SlotType, _x.SlotSts, _x.SlotObj1Typ, _x.SlotObj1X, _x.SlotObj1Y, _x.SlotObj1Alpha, _x.SlotObj2Typ, _x.SlotObj2X, _x.SlotObj2Y, _x.SlotObj2Alpha,) = _get_struct_2I2ifiI10i().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_2I2ifiI10i = None
def _get_struct_2I2ifiI10i():
    global _struct_2I2ifiI10i
    if _struct_2I2ifiI10i is None:
        _struct_2I2ifiI10i = struct.Struct("<2I2ifiI10i")
    return _struct_2I2ifiI10i
