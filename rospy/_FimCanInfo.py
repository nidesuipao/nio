# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/FimCanInfo.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import rospy_message_converter.msg

class FimCanInfo(genpy.Message):
  _md5sum = "cab053f7120fdde810d1bada01b50313"
  _type = "rospy_message_converter/FimCanInfo"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """CANFimInfo can_fim_info
ACMFimInfo acm_fim_info
ASDMFimInfo asdm_fim_info
APAFimInfo apa_fim_info
BCUFimInfo bcu_fim_info
BCMFimInfo bcm_fim_info
BGWFimInfo bgw_fim_info
CCUFimInfo ccu_fim_info
CDCFimInfo cdc_fim_info
EPB1FimInfo epb1_fim_info
EPB2FimInfo epb2_fim_info
EPS1FimInfo eps1_fim_info
EPS2FimInfo eps2_fim_info
RADFimInfo radfc_fim_info
RADFimInfo radfl_fim_info
RADFimInfo radfr_fim_info
RADFimInfo radrl_fim_info
RADFimInfo radrr_fim_info
SCMFimInfo scm_fim_info
SWCFimInfo swc_fim_info
VCUFimInfo vcu_fim_info
uint64 publish_ptp_ts
string publisher_id
uint64 counter
uint64 publish_ts

================================================================================
MSG: rospy_message_converter/CANFimInfo
bool FIM_ADAS_CAN_Busoff
bool FIM_CHS1_CAN_Busoff
bool FIM_CHS2_CAN_Busoff
bool FIM_FrontRAD_CAN_Busoff
bool FIM_FrontSideRAD_CAN_Busoff
bool FIM_RearSideRAD_CAN_Busoff

================================================================================
MSG: rospy_message_converter/ACMFimInfo
bool FIM_CHS1_ACM_01_MsgError
bool FIM_CHS1_ACM_02_MsgError
bool FIM_CHS1_ACM_03_MsgError
bool FIM_CHS1_ACM_CAN_Error

================================================================================
MSG: rospy_message_converter/ASDMFimInfo
bool FIM_CHS1_ASDM_CAN_Error
bool FIM_CHS1_ASDM_MsgError

================================================================================
MSG: rospy_message_converter/APAFimInfo
bool FIM_ADAS_APA_CAN_Error
bool FIM_ADAS_APA_ADC_01_MsgError
bool FIM_ADAS_APA_ADC_02_MsgError
bool FIM_ADAS_APA_ADC_03_MsgError
bool FIM_ADAS_APA_ADC_04_MsgError
bool FIM_ADAS_APA_ADC_05_MsgError
bool FIM_ADAS_APA_ADC_06_MsgError
bool FIM_ADAS_APA_ADC_07_MsgError
bool FIM_ADAS_APA_ADC_08_MsgError
bool FIM_ADAS_APA_ADC_09_MsgError
bool FIM_ADAS_APA_ADC_10_MsgError
bool FIM_ADAS_APA_01_MsgError
bool FIM_ADAS_APA_02_MsgError
bool FIM_ADAS_APA_03_MsgError
bool FIM_ADAS_APA_04_MsgError
bool FIM_ADAS_APA_05_MsgError
bool FIM_ADAS_APA_Slot01_MsgError
bool FIM_ADAS_APA_Slot02_MsgError
bool FIM_ADAS_APA_Slot03_MsgError
bool FIM_ADAS_APA_Slot04_MsgError
bool FIM_ADAS_APA_Slot05_MsgError
bool FIM_ADAS_APA_Slot06_MsgError
bool FIM_ADAS_APA_Slot01Obj1_MsgError
bool FIM_ADAS_APA_Slot02Obj1_MsgError
bool FIM_ADAS_APA_Slot03Obj1_MsgError
bool FIM_ADAS_APA_Slot04Obj1_MsgError
bool FIM_ADAS_APA_Slot05Obj1_MsgError
bool FIM_ADAS_APA_Slot06Obj1_MsgError
bool FIM_ADAS_APA_Slot01Obj2_MsgError
bool FIM_ADAS_APA_Slot02Obj2_MsgError
bool FIM_ADAS_APA_Slot03Obj2_MsgError
bool FIM_ADAS_APA_Slot04Obj2_MsgError
bool FIM_ADAS_APA_Slot05Obj2_MsgError
bool FIM_ADAS_APA_Slot06Obj2_MsgError

================================================================================
MSG: rospy_message_converter/BCUFimInfo
bool FIM_CHS1_BCU_CAN_Error
bool FIM_CHS1_BCU_01_MsgError
bool FIM_CHS1_BCU_02_MsgError
bool FIM_CHS1_BCU_03_MsgError
bool FIM_CHS1_BCU_04_MsgError
bool FIM_CHS1_BCU_07_MsgError
bool FIM_CHS1_BCU_08_MsgError
bool FIM_CHS1_BCU_09_MsgError
bool FIM_CHS1_BCU_16_MsgError
bool FIM_CHS2_BCU_CAN_Error
bool FIM_CHS2_BCU_16_MsgError

================================================================================
MSG: rospy_message_converter/BCMFimInfo
bool FIM_CHS1_BCM_CAN_Error
bool FIM_ADAS_BCM_CAN_Error

================================================================================
MSG: rospy_message_converter/BGWFimInfo
bool FIM_CHS1_BGW_01_MsgError
bool FIM_CHS1_BGW_02_MsgError
bool FIM_CHS1_BGW_03_MsgError
bool FIM_CHS1_BGW_LI_MsgError
bool FIM_CHS1_BGW_TCU_01_MsgError
bool FIM_CHS1_BGW_WIPR_MsgError
bool FIM_ADAS_BGW_POWER_SWAP_MsgError
bool FIM_ADAS_BGW_SCU_D_02_MsgError
bool FIM_ADAS_BGW_SCU_P_01_MsgError
bool FIM_ADAS_BGW_SCU_P_02_MsgError
bool FIM_ADAS_BGW_SNSR_MsgError
bool FIM_ADAS_BGW_STEERWHL_CMD_MsgError
bool FIM_CHS1_BGW_CAN_Error
bool FIM_ADAS_BGW_CAN_Error

================================================================================
MSG: rospy_message_converter/CCUFimInfo
bool FIM_CHS1_CCU_CAN_Error

================================================================================
MSG: rospy_message_converter/CDCFimInfo
bool FIM_ADAS_CDC_CAN_Error
bool FIM_CHS1_CDC_CAN_Error
bool FIM_CHS1_CDC_ADC_01_MsgError
bool FIM_CHS1_CDC_HU_04_MsgError
bool FIM_CHS1_CDC_HU_09_MsgError
bool FIM_CHS1_CDC_HU_12_MsgError
bool FIM_CHS1_CDC_IC_01_MsgError
bool FIM_CHS1_CDC_IC_04_MsgError
bool FIM_ADAS_CDC_ADC_03_MsgError
bool FIM_ADAS_CDC_ADC_04_MsgError
bool FIM_ADAS_CDC_DMS_01_MsgError
bool FIM_ADAS_CDC_DMS_02_MsgError
bool FIM_ADAS_CDC_HU_03_MsgError
bool FIM_ADAS_CDC_HU_07_MsgError
bool FIM_ADAS_CDC_HU_08_MsgError
bool FIM_ADAS_CDC_HU_09_MsgError
bool FIM_ADAS_CDC_HU_19_MsgError
bool FIM_CHS2_CDC_HU_04_MsgError

================================================================================
MSG: rospy_message_converter/EPB1FimInfo
bool FIM_CHS1_EPB1_CAN_Error
bool FIM_CHS1_EPB1_01_MsgError

================================================================================
MSG: rospy_message_converter/EPB2FimInfo
bool FIM_CHS2_EPB2_CAN_Error
bool FIM_CHS2_EPB2_01_MsgError

================================================================================
MSG: rospy_message_converter/EPS1FimInfo
bool FIM_CHS1_EPS1_01_MsgError
bool FIM_CHS1_EPS1_02_MsgError
bool FIM_CHS1_EPS1_Error

================================================================================
MSG: rospy_message_converter/EPS2FimInfo
bool FIM_CHS2_EPS2_01_MsgError
bool FIM_CHS2_EPS2_02_MsgError
bool FIM_CHS2_EPS2_Error

================================================================================
MSG: rospy_message_converter/RADFimInfo
bool FIM_RAD_Error
bool FIM_RAD_Blindness
bool FIM_RAD_MRR_MsgError
bool FIM_RAD_MRR_Header_AlignmentState_MsgError
bool FIM_RAD_MRR_Header_SensorCoverage_MsgError
bool FIM_RAD_MRR_Header_Timestamps_MsgError
bool FIM_RAD_MRR_CANVersion_MsgError
bool FIM_RAD_MRR_Status_Radar_MsgError

================================================================================
MSG: rospy_message_converter/SCMFimInfo
bool FIM_CHS1_SCM_01_MsgError
bool FIM_CHS1_SCM_02_MsgError
bool FIM_CHS1_SCM_CAN_Error

================================================================================
MSG: rospy_message_converter/SWCFimInfo
bool FIM_CHS1_SWC_01_MsgError
bool FIM_CHS1_SWC_CAN_Error

================================================================================
MSG: rospy_message_converter/VCUFimInfo
bool FIM_CHS1_VCU_CAN_Error
bool FIM_CHS2_VCU_CAN_Error
bool FIM_CHS1_VCU_13_MsgError
bool FIM_CHS1_VCU_05_MsgError
bool FIM_CHS1_VCU_02_MsgError
bool FIM_CHS1_VCU_HealthMngt_MsgError
bool FIM_CHS2_VCU_13_MsgError
bool FIM_CHS2_VCU_HealthMngt_MsgError
bool FIM_CHS1_VCU_CDC_328_MsgError
"""
  __slots__ = ['can_fim_info','acm_fim_info','asdm_fim_info','apa_fim_info','bcu_fim_info','bcm_fim_info','bgw_fim_info','ccu_fim_info','cdc_fim_info','epb1_fim_info','epb2_fim_info','eps1_fim_info','eps2_fim_info','radfc_fim_info','radfl_fim_info','radfr_fim_info','radrl_fim_info','radrr_fim_info','scm_fim_info','swc_fim_info','vcu_fim_info','publish_ptp_ts','publisher_id','counter','publish_ts']
  _slot_types = ['rospy_message_converter/CANFimInfo','rospy_message_converter/ACMFimInfo','rospy_message_converter/ASDMFimInfo','rospy_message_converter/APAFimInfo','rospy_message_converter/BCUFimInfo','rospy_message_converter/BCMFimInfo','rospy_message_converter/BGWFimInfo','rospy_message_converter/CCUFimInfo','rospy_message_converter/CDCFimInfo','rospy_message_converter/EPB1FimInfo','rospy_message_converter/EPB2FimInfo','rospy_message_converter/EPS1FimInfo','rospy_message_converter/EPS2FimInfo','rospy_message_converter/RADFimInfo','rospy_message_converter/RADFimInfo','rospy_message_converter/RADFimInfo','rospy_message_converter/RADFimInfo','rospy_message_converter/RADFimInfo','rospy_message_converter/SCMFimInfo','rospy_message_converter/SWCFimInfo','rospy_message_converter/VCUFimInfo','uint64','string','uint64','uint64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       can_fim_info,acm_fim_info,asdm_fim_info,apa_fim_info,bcu_fim_info,bcm_fim_info,bgw_fim_info,ccu_fim_info,cdc_fim_info,epb1_fim_info,epb2_fim_info,eps1_fim_info,eps2_fim_info,radfc_fim_info,radfl_fim_info,radfr_fim_info,radrl_fim_info,radrr_fim_info,scm_fim_info,swc_fim_info,vcu_fim_info,publish_ptp_ts,publisher_id,counter,publish_ts

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(FimCanInfo, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.can_fim_info is None:
        self.can_fim_info = rospy_message_converter.msg.CANFimInfo()
      if self.acm_fim_info is None:
        self.acm_fim_info = rospy_message_converter.msg.ACMFimInfo()
      if self.asdm_fim_info is None:
        self.asdm_fim_info = rospy_message_converter.msg.ASDMFimInfo()
      if self.apa_fim_info is None:
        self.apa_fim_info = rospy_message_converter.msg.APAFimInfo()
      if self.bcu_fim_info is None:
        self.bcu_fim_info = rospy_message_converter.msg.BCUFimInfo()
      if self.bcm_fim_info is None:
        self.bcm_fim_info = rospy_message_converter.msg.BCMFimInfo()
      if self.bgw_fim_info is None:
        self.bgw_fim_info = rospy_message_converter.msg.BGWFimInfo()
      if self.ccu_fim_info is None:
        self.ccu_fim_info = rospy_message_converter.msg.CCUFimInfo()
      if self.cdc_fim_info is None:
        self.cdc_fim_info = rospy_message_converter.msg.CDCFimInfo()
      if self.epb1_fim_info is None:
        self.epb1_fim_info = rospy_message_converter.msg.EPB1FimInfo()
      if self.epb2_fim_info is None:
        self.epb2_fim_info = rospy_message_converter.msg.EPB2FimInfo()
      if self.eps1_fim_info is None:
        self.eps1_fim_info = rospy_message_converter.msg.EPS1FimInfo()
      if self.eps2_fim_info is None:
        self.eps2_fim_info = rospy_message_converter.msg.EPS2FimInfo()
      if self.radfc_fim_info is None:
        self.radfc_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radfl_fim_info is None:
        self.radfl_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radfr_fim_info is None:
        self.radfr_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radrl_fim_info is None:
        self.radrl_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radrr_fim_info is None:
        self.radrr_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.scm_fim_info is None:
        self.scm_fim_info = rospy_message_converter.msg.SCMFimInfo()
      if self.swc_fim_info is None:
        self.swc_fim_info = rospy_message_converter.msg.SWCFimInfo()
      if self.vcu_fim_info is None:
        self.vcu_fim_info = rospy_message_converter.msg.VCUFimInfo()
      if self.publish_ptp_ts is None:
        self.publish_ptp_ts = 0
      if self.publisher_id is None:
        self.publisher_id = ''
      if self.counter is None:
        self.counter = 0
      if self.publish_ts is None:
        self.publish_ts = 0
    else:
      self.can_fim_info = rospy_message_converter.msg.CANFimInfo()
      self.acm_fim_info = rospy_message_converter.msg.ACMFimInfo()
      self.asdm_fim_info = rospy_message_converter.msg.ASDMFimInfo()
      self.apa_fim_info = rospy_message_converter.msg.APAFimInfo()
      self.bcu_fim_info = rospy_message_converter.msg.BCUFimInfo()
      self.bcm_fim_info = rospy_message_converter.msg.BCMFimInfo()
      self.bgw_fim_info = rospy_message_converter.msg.BGWFimInfo()
      self.ccu_fim_info = rospy_message_converter.msg.CCUFimInfo()
      self.cdc_fim_info = rospy_message_converter.msg.CDCFimInfo()
      self.epb1_fim_info = rospy_message_converter.msg.EPB1FimInfo()
      self.epb2_fim_info = rospy_message_converter.msg.EPB2FimInfo()
      self.eps1_fim_info = rospy_message_converter.msg.EPS1FimInfo()
      self.eps2_fim_info = rospy_message_converter.msg.EPS2FimInfo()
      self.radfc_fim_info = rospy_message_converter.msg.RADFimInfo()
      self.radfl_fim_info = rospy_message_converter.msg.RADFimInfo()
      self.radfr_fim_info = rospy_message_converter.msg.RADFimInfo()
      self.radrl_fim_info = rospy_message_converter.msg.RADFimInfo()
      self.radrr_fim_info = rospy_message_converter.msg.RADFimInfo()
      self.scm_fim_info = rospy_message_converter.msg.SCMFimInfo()
      self.swc_fim_info = rospy_message_converter.msg.SWCFimInfo()
      self.vcu_fim_info = rospy_message_converter.msg.VCUFimInfo()
      self.publish_ptp_ts = 0
      self.publisher_id = ''
      self.counter = 0
      self.publish_ts = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_156BQ().pack(_x.can_fim_info.FIM_ADAS_CAN_Busoff, _x.can_fim_info.FIM_CHS1_CAN_Busoff, _x.can_fim_info.FIM_CHS2_CAN_Busoff, _x.can_fim_info.FIM_FrontRAD_CAN_Busoff, _x.can_fim_info.FIM_FrontSideRAD_CAN_Busoff, _x.can_fim_info.FIM_RearSideRAD_CAN_Busoff, _x.acm_fim_info.FIM_CHS1_ACM_01_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_02_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_03_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_MsgError, _x.apa_fim_info.FIM_ADAS_APA_CAN_Error, _x.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError, _x.apa_fim_info.FIM_ADAS_APA_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS1_BCU_01_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_02_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_03_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_04_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_07_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_08_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_09_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_16_MsgError, _x.bcu_fim_info.FIM_CHS2_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS2_BCU_16_MsgError, _x.bcm_fim_info.FIM_CHS1_BCM_CAN_Error, _x.bcm_fim_info.FIM_ADAS_BCM_CAN_Error, _x.bgw_fim_info.FIM_CHS1_BGW_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_02_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_03_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_CAN_Error, _x.bgw_fim_info.FIM_ADAS_BGW_CAN_Error, _x.ccu_fim_info.FIM_CHS1_CCU_CAN_Error, _x.cdc_fim_info.FIM_ADAS_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError, _x.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError, _x.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error, _x.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError, _x.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error, _x.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_Error, _x.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_Error, _x.radfc_fim_info.FIM_RAD_Error, _x.radfc_fim_info.FIM_RAD_Blindness, _x.radfc_fim_info.FIM_RAD_MRR_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfl_fim_info.FIM_RAD_Error, _x.radfl_fim_info.FIM_RAD_Blindness, _x.radfl_fim_info.FIM_RAD_MRR_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfr_fim_info.FIM_RAD_Error, _x.radfr_fim_info.FIM_RAD_Blindness, _x.radfr_fim_info.FIM_RAD_MRR_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrl_fim_info.FIM_RAD_Error, _x.radrl_fim_info.FIM_RAD_Blindness, _x.radrl_fim_info.FIM_RAD_MRR_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrr_fim_info.FIM_RAD_Error, _x.radrr_fim_info.FIM_RAD_Blindness, _x.radrr_fim_info.FIM_RAD_MRR_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_01_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_02_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_CAN_Error, _x.swc_fim_info.FIM_CHS1_SWC_01_MsgError, _x.swc_fim_info.FIM_CHS1_SWC_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS2_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_05_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_02_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.can_fim_info is None:
        self.can_fim_info = rospy_message_converter.msg.CANFimInfo()
      if self.acm_fim_info is None:
        self.acm_fim_info = rospy_message_converter.msg.ACMFimInfo()
      if self.asdm_fim_info is None:
        self.asdm_fim_info = rospy_message_converter.msg.ASDMFimInfo()
      if self.apa_fim_info is None:
        self.apa_fim_info = rospy_message_converter.msg.APAFimInfo()
      if self.bcu_fim_info is None:
        self.bcu_fim_info = rospy_message_converter.msg.BCUFimInfo()
      if self.bcm_fim_info is None:
        self.bcm_fim_info = rospy_message_converter.msg.BCMFimInfo()
      if self.bgw_fim_info is None:
        self.bgw_fim_info = rospy_message_converter.msg.BGWFimInfo()
      if self.ccu_fim_info is None:
        self.ccu_fim_info = rospy_message_converter.msg.CCUFimInfo()
      if self.cdc_fim_info is None:
        self.cdc_fim_info = rospy_message_converter.msg.CDCFimInfo()
      if self.epb1_fim_info is None:
        self.epb1_fim_info = rospy_message_converter.msg.EPB1FimInfo()
      if self.epb2_fim_info is None:
        self.epb2_fim_info = rospy_message_converter.msg.EPB2FimInfo()
      if self.eps1_fim_info is None:
        self.eps1_fim_info = rospy_message_converter.msg.EPS1FimInfo()
      if self.eps2_fim_info is None:
        self.eps2_fim_info = rospy_message_converter.msg.EPS2FimInfo()
      if self.radfc_fim_info is None:
        self.radfc_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radfl_fim_info is None:
        self.radfl_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radfr_fim_info is None:
        self.radfr_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radrl_fim_info is None:
        self.radrl_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radrr_fim_info is None:
        self.radrr_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.scm_fim_info is None:
        self.scm_fim_info = rospy_message_converter.msg.SCMFimInfo()
      if self.swc_fim_info is None:
        self.swc_fim_info = rospy_message_converter.msg.SWCFimInfo()
      if self.vcu_fim_info is None:
        self.vcu_fim_info = rospy_message_converter.msg.VCUFimInfo()
      end = 0
      _x = self
      start = end
      end += 164
      (_x.can_fim_info.FIM_ADAS_CAN_Busoff, _x.can_fim_info.FIM_CHS1_CAN_Busoff, _x.can_fim_info.FIM_CHS2_CAN_Busoff, _x.can_fim_info.FIM_FrontRAD_CAN_Busoff, _x.can_fim_info.FIM_FrontSideRAD_CAN_Busoff, _x.can_fim_info.FIM_RearSideRAD_CAN_Busoff, _x.acm_fim_info.FIM_CHS1_ACM_01_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_02_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_03_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_MsgError, _x.apa_fim_info.FIM_ADAS_APA_CAN_Error, _x.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError, _x.apa_fim_info.FIM_ADAS_APA_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS1_BCU_01_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_02_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_03_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_04_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_07_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_08_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_09_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_16_MsgError, _x.bcu_fim_info.FIM_CHS2_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS2_BCU_16_MsgError, _x.bcm_fim_info.FIM_CHS1_BCM_CAN_Error, _x.bcm_fim_info.FIM_ADAS_BCM_CAN_Error, _x.bgw_fim_info.FIM_CHS1_BGW_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_02_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_03_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_CAN_Error, _x.bgw_fim_info.FIM_ADAS_BGW_CAN_Error, _x.ccu_fim_info.FIM_CHS1_CCU_CAN_Error, _x.cdc_fim_info.FIM_ADAS_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError, _x.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError, _x.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error, _x.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError, _x.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error, _x.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_Error, _x.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_Error, _x.radfc_fim_info.FIM_RAD_Error, _x.radfc_fim_info.FIM_RAD_Blindness, _x.radfc_fim_info.FIM_RAD_MRR_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfl_fim_info.FIM_RAD_Error, _x.radfl_fim_info.FIM_RAD_Blindness, _x.radfl_fim_info.FIM_RAD_MRR_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfr_fim_info.FIM_RAD_Error, _x.radfr_fim_info.FIM_RAD_Blindness, _x.radfr_fim_info.FIM_RAD_MRR_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrl_fim_info.FIM_RAD_Error, _x.radrl_fim_info.FIM_RAD_Blindness, _x.radrl_fim_info.FIM_RAD_MRR_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrr_fim_info.FIM_RAD_Error, _x.radrr_fim_info.FIM_RAD_Blindness, _x.radrr_fim_info.FIM_RAD_MRR_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_01_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_02_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_CAN_Error, _x.swc_fim_info.FIM_CHS1_SWC_01_MsgError, _x.swc_fim_info.FIM_CHS1_SWC_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS2_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_05_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_02_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError, _x.publish_ptp_ts,) = _get_struct_156BQ().unpack(str[start:end])
      self.can_fim_info.FIM_ADAS_CAN_Busoff = bool(self.can_fim_info.FIM_ADAS_CAN_Busoff)
      self.can_fim_info.FIM_CHS1_CAN_Busoff = bool(self.can_fim_info.FIM_CHS1_CAN_Busoff)
      self.can_fim_info.FIM_CHS2_CAN_Busoff = bool(self.can_fim_info.FIM_CHS2_CAN_Busoff)
      self.can_fim_info.FIM_FrontRAD_CAN_Busoff = bool(self.can_fim_info.FIM_FrontRAD_CAN_Busoff)
      self.can_fim_info.FIM_FrontSideRAD_CAN_Busoff = bool(self.can_fim_info.FIM_FrontSideRAD_CAN_Busoff)
      self.can_fim_info.FIM_RearSideRAD_CAN_Busoff = bool(self.can_fim_info.FIM_RearSideRAD_CAN_Busoff)
      self.acm_fim_info.FIM_CHS1_ACM_01_MsgError = bool(self.acm_fim_info.FIM_CHS1_ACM_01_MsgError)
      self.acm_fim_info.FIM_CHS1_ACM_02_MsgError = bool(self.acm_fim_info.FIM_CHS1_ACM_02_MsgError)
      self.acm_fim_info.FIM_CHS1_ACM_03_MsgError = bool(self.acm_fim_info.FIM_CHS1_ACM_03_MsgError)
      self.acm_fim_info.FIM_CHS1_ACM_CAN_Error = bool(self.acm_fim_info.FIM_CHS1_ACM_CAN_Error)
      self.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error = bool(self.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error)
      self.asdm_fim_info.FIM_CHS1_ASDM_MsgError = bool(self.asdm_fim_info.FIM_CHS1_ASDM_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_CAN_Error = bool(self.apa_fim_info.FIM_ADAS_APA_CAN_Error)
      self.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_01_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_01_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_02_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_02_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_03_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_03_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_04_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_04_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_05_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_05_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_CAN_Error = bool(self.bcu_fim_info.FIM_CHS1_BCU_CAN_Error)
      self.bcu_fim_info.FIM_CHS1_BCU_01_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_01_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_02_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_02_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_03_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_03_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_04_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_04_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_07_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_07_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_08_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_08_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_09_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_09_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_16_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_16_MsgError)
      self.bcu_fim_info.FIM_CHS2_BCU_CAN_Error = bool(self.bcu_fim_info.FIM_CHS2_BCU_CAN_Error)
      self.bcu_fim_info.FIM_CHS2_BCU_16_MsgError = bool(self.bcu_fim_info.FIM_CHS2_BCU_16_MsgError)
      self.bcm_fim_info.FIM_CHS1_BCM_CAN_Error = bool(self.bcm_fim_info.FIM_CHS1_BCM_CAN_Error)
      self.bcm_fim_info.FIM_ADAS_BCM_CAN_Error = bool(self.bcm_fim_info.FIM_ADAS_BCM_CAN_Error)
      self.bgw_fim_info.FIM_CHS1_BGW_01_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_01_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_02_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_02_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_03_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_03_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_CAN_Error = bool(self.bgw_fim_info.FIM_CHS1_BGW_CAN_Error)
      self.bgw_fim_info.FIM_ADAS_BGW_CAN_Error = bool(self.bgw_fim_info.FIM_ADAS_BGW_CAN_Error)
      self.ccu_fim_info.FIM_CHS1_CCU_CAN_Error = bool(self.ccu_fim_info.FIM_CHS1_CCU_CAN_Error)
      self.cdc_fim_info.FIM_ADAS_CDC_CAN_Error = bool(self.cdc_fim_info.FIM_ADAS_CDC_CAN_Error)
      self.cdc_fim_info.FIM_CHS1_CDC_CAN_Error = bool(self.cdc_fim_info.FIM_CHS1_CDC_CAN_Error)
      self.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError)
      self.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError = bool(self.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError)
      self.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error = bool(self.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error)
      self.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError = bool(self.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError)
      self.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error = bool(self.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error)
      self.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError = bool(self.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError)
      self.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError = bool(self.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError)
      self.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError = bool(self.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError)
      self.eps1_fim_info.FIM_CHS1_EPS1_Error = bool(self.eps1_fim_info.FIM_CHS1_EPS1_Error)
      self.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError = bool(self.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError)
      self.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError = bool(self.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError)
      self.eps2_fim_info.FIM_CHS2_EPS2_Error = bool(self.eps2_fim_info.FIM_CHS2_EPS2_Error)
      self.radfc_fim_info.FIM_RAD_Error = bool(self.radfc_fim_info.FIM_RAD_Error)
      self.radfc_fim_info.FIM_RAD_Blindness = bool(self.radfc_fim_info.FIM_RAD_Blindness)
      self.radfc_fim_info.FIM_RAD_MRR_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radfl_fim_info.FIM_RAD_Error = bool(self.radfl_fim_info.FIM_RAD_Error)
      self.radfl_fim_info.FIM_RAD_Blindness = bool(self.radfl_fim_info.FIM_RAD_Blindness)
      self.radfl_fim_info.FIM_RAD_MRR_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radfr_fim_info.FIM_RAD_Error = bool(self.radfr_fim_info.FIM_RAD_Error)
      self.radfr_fim_info.FIM_RAD_Blindness = bool(self.radfr_fim_info.FIM_RAD_Blindness)
      self.radfr_fim_info.FIM_RAD_MRR_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radrl_fim_info.FIM_RAD_Error = bool(self.radrl_fim_info.FIM_RAD_Error)
      self.radrl_fim_info.FIM_RAD_Blindness = bool(self.radrl_fim_info.FIM_RAD_Blindness)
      self.radrl_fim_info.FIM_RAD_MRR_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radrr_fim_info.FIM_RAD_Error = bool(self.radrr_fim_info.FIM_RAD_Error)
      self.radrr_fim_info.FIM_RAD_Blindness = bool(self.radrr_fim_info.FIM_RAD_Blindness)
      self.radrr_fim_info.FIM_RAD_MRR_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.scm_fim_info.FIM_CHS1_SCM_01_MsgError = bool(self.scm_fim_info.FIM_CHS1_SCM_01_MsgError)
      self.scm_fim_info.FIM_CHS1_SCM_02_MsgError = bool(self.scm_fim_info.FIM_CHS1_SCM_02_MsgError)
      self.scm_fim_info.FIM_CHS1_SCM_CAN_Error = bool(self.scm_fim_info.FIM_CHS1_SCM_CAN_Error)
      self.swc_fim_info.FIM_CHS1_SWC_01_MsgError = bool(self.swc_fim_info.FIM_CHS1_SWC_01_MsgError)
      self.swc_fim_info.FIM_CHS1_SWC_CAN_Error = bool(self.swc_fim_info.FIM_CHS1_SWC_CAN_Error)
      self.vcu_fim_info.FIM_CHS1_VCU_CAN_Error = bool(self.vcu_fim_info.FIM_CHS1_VCU_CAN_Error)
      self.vcu_fim_info.FIM_CHS2_VCU_CAN_Error = bool(self.vcu_fim_info.FIM_CHS2_VCU_CAN_Error)
      self.vcu_fim_info.FIM_CHS1_VCU_13_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_13_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_05_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_05_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_02_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_02_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError)
      self.vcu_fim_info.FIM_CHS2_VCU_13_MsgError = bool(self.vcu_fim_info.FIM_CHS2_VCU_13_MsgError)
      self.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError = bool(self.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_156BQ().pack(_x.can_fim_info.FIM_ADAS_CAN_Busoff, _x.can_fim_info.FIM_CHS1_CAN_Busoff, _x.can_fim_info.FIM_CHS2_CAN_Busoff, _x.can_fim_info.FIM_FrontRAD_CAN_Busoff, _x.can_fim_info.FIM_FrontSideRAD_CAN_Busoff, _x.can_fim_info.FIM_RearSideRAD_CAN_Busoff, _x.acm_fim_info.FIM_CHS1_ACM_01_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_02_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_03_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_MsgError, _x.apa_fim_info.FIM_ADAS_APA_CAN_Error, _x.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError, _x.apa_fim_info.FIM_ADAS_APA_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS1_BCU_01_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_02_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_03_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_04_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_07_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_08_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_09_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_16_MsgError, _x.bcu_fim_info.FIM_CHS2_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS2_BCU_16_MsgError, _x.bcm_fim_info.FIM_CHS1_BCM_CAN_Error, _x.bcm_fim_info.FIM_ADAS_BCM_CAN_Error, _x.bgw_fim_info.FIM_CHS1_BGW_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_02_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_03_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_CAN_Error, _x.bgw_fim_info.FIM_ADAS_BGW_CAN_Error, _x.ccu_fim_info.FIM_CHS1_CCU_CAN_Error, _x.cdc_fim_info.FIM_ADAS_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError, _x.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError, _x.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error, _x.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError, _x.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error, _x.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_Error, _x.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_Error, _x.radfc_fim_info.FIM_RAD_Error, _x.radfc_fim_info.FIM_RAD_Blindness, _x.radfc_fim_info.FIM_RAD_MRR_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfl_fim_info.FIM_RAD_Error, _x.radfl_fim_info.FIM_RAD_Blindness, _x.radfl_fim_info.FIM_RAD_MRR_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfr_fim_info.FIM_RAD_Error, _x.radfr_fim_info.FIM_RAD_Blindness, _x.radfr_fim_info.FIM_RAD_MRR_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrl_fim_info.FIM_RAD_Error, _x.radrl_fim_info.FIM_RAD_Blindness, _x.radrl_fim_info.FIM_RAD_MRR_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrr_fim_info.FIM_RAD_Error, _x.radrr_fim_info.FIM_RAD_Blindness, _x.radrr_fim_info.FIM_RAD_MRR_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_01_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_02_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_CAN_Error, _x.swc_fim_info.FIM_CHS1_SWC_01_MsgError, _x.swc_fim_info.FIM_CHS1_SWC_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS2_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_05_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_02_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.can_fim_info is None:
        self.can_fim_info = rospy_message_converter.msg.CANFimInfo()
      if self.acm_fim_info is None:
        self.acm_fim_info = rospy_message_converter.msg.ACMFimInfo()
      if self.asdm_fim_info is None:
        self.asdm_fim_info = rospy_message_converter.msg.ASDMFimInfo()
      if self.apa_fim_info is None:
        self.apa_fim_info = rospy_message_converter.msg.APAFimInfo()
      if self.bcu_fim_info is None:
        self.bcu_fim_info = rospy_message_converter.msg.BCUFimInfo()
      if self.bcm_fim_info is None:
        self.bcm_fim_info = rospy_message_converter.msg.BCMFimInfo()
      if self.bgw_fim_info is None:
        self.bgw_fim_info = rospy_message_converter.msg.BGWFimInfo()
      if self.ccu_fim_info is None:
        self.ccu_fim_info = rospy_message_converter.msg.CCUFimInfo()
      if self.cdc_fim_info is None:
        self.cdc_fim_info = rospy_message_converter.msg.CDCFimInfo()
      if self.epb1_fim_info is None:
        self.epb1_fim_info = rospy_message_converter.msg.EPB1FimInfo()
      if self.epb2_fim_info is None:
        self.epb2_fim_info = rospy_message_converter.msg.EPB2FimInfo()
      if self.eps1_fim_info is None:
        self.eps1_fim_info = rospy_message_converter.msg.EPS1FimInfo()
      if self.eps2_fim_info is None:
        self.eps2_fim_info = rospy_message_converter.msg.EPS2FimInfo()
      if self.radfc_fim_info is None:
        self.radfc_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radfl_fim_info is None:
        self.radfl_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radfr_fim_info is None:
        self.radfr_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radrl_fim_info is None:
        self.radrl_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.radrr_fim_info is None:
        self.radrr_fim_info = rospy_message_converter.msg.RADFimInfo()
      if self.scm_fim_info is None:
        self.scm_fim_info = rospy_message_converter.msg.SCMFimInfo()
      if self.swc_fim_info is None:
        self.swc_fim_info = rospy_message_converter.msg.SWCFimInfo()
      if self.vcu_fim_info is None:
        self.vcu_fim_info = rospy_message_converter.msg.VCUFimInfo()
      end = 0
      _x = self
      start = end
      end += 164
      (_x.can_fim_info.FIM_ADAS_CAN_Busoff, _x.can_fim_info.FIM_CHS1_CAN_Busoff, _x.can_fim_info.FIM_CHS2_CAN_Busoff, _x.can_fim_info.FIM_FrontRAD_CAN_Busoff, _x.can_fim_info.FIM_FrontSideRAD_CAN_Busoff, _x.can_fim_info.FIM_RearSideRAD_CAN_Busoff, _x.acm_fim_info.FIM_CHS1_ACM_01_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_02_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_03_MsgError, _x.acm_fim_info.FIM_CHS1_ACM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error, _x.asdm_fim_info.FIM_CHS1_ASDM_MsgError, _x.apa_fim_info.FIM_ADAS_APA_CAN_Error, _x.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError, _x.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError, _x.apa_fim_info.FIM_ADAS_APA_01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError, _x.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS1_BCU_01_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_02_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_03_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_04_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_07_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_08_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_09_MsgError, _x.bcu_fim_info.FIM_CHS1_BCU_16_MsgError, _x.bcu_fim_info.FIM_CHS2_BCU_CAN_Error, _x.bcu_fim_info.FIM_CHS2_BCU_16_MsgError, _x.bcm_fim_info.FIM_CHS1_BCM_CAN_Error, _x.bcm_fim_info.FIM_ADAS_BCM_CAN_Error, _x.bgw_fim_info.FIM_CHS1_BGW_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_02_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_03_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError, _x.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError, _x.bgw_fim_info.FIM_CHS1_BGW_CAN_Error, _x.bgw_fim_info.FIM_ADAS_BGW_CAN_Error, _x.ccu_fim_info.FIM_CHS1_CCU_CAN_Error, _x.cdc_fim_info.FIM_ADAS_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_CAN_Error, _x.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError, _x.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError, _x.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError, _x.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError, _x.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error, _x.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError, _x.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error, _x.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError, _x.eps1_fim_info.FIM_CHS1_EPS1_Error, _x.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError, _x.eps2_fim_info.FIM_CHS2_EPS2_Error, _x.radfc_fim_info.FIM_RAD_Error, _x.radfc_fim_info.FIM_RAD_Blindness, _x.radfc_fim_info.FIM_RAD_MRR_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfl_fim_info.FIM_RAD_Error, _x.radfl_fim_info.FIM_RAD_Blindness, _x.radfl_fim_info.FIM_RAD_MRR_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radfr_fim_info.FIM_RAD_Error, _x.radfr_fim_info.FIM_RAD_Blindness, _x.radfr_fim_info.FIM_RAD_MRR_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrl_fim_info.FIM_RAD_Error, _x.radrl_fim_info.FIM_RAD_Blindness, _x.radrl_fim_info.FIM_RAD_MRR_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.radrr_fim_info.FIM_RAD_Error, _x.radrr_fim_info.FIM_RAD_Blindness, _x.radrr_fim_info.FIM_RAD_MRR_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError, _x.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_01_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_02_MsgError, _x.scm_fim_info.FIM_CHS1_SCM_CAN_Error, _x.swc_fim_info.FIM_CHS1_SWC_01_MsgError, _x.swc_fim_info.FIM_CHS1_SWC_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS2_VCU_CAN_Error, _x.vcu_fim_info.FIM_CHS1_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_05_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_02_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_13_MsgError, _x.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError, _x.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError, _x.publish_ptp_ts,) = _get_struct_156BQ().unpack(str[start:end])
      self.can_fim_info.FIM_ADAS_CAN_Busoff = bool(self.can_fim_info.FIM_ADAS_CAN_Busoff)
      self.can_fim_info.FIM_CHS1_CAN_Busoff = bool(self.can_fim_info.FIM_CHS1_CAN_Busoff)
      self.can_fim_info.FIM_CHS2_CAN_Busoff = bool(self.can_fim_info.FIM_CHS2_CAN_Busoff)
      self.can_fim_info.FIM_FrontRAD_CAN_Busoff = bool(self.can_fim_info.FIM_FrontRAD_CAN_Busoff)
      self.can_fim_info.FIM_FrontSideRAD_CAN_Busoff = bool(self.can_fim_info.FIM_FrontSideRAD_CAN_Busoff)
      self.can_fim_info.FIM_RearSideRAD_CAN_Busoff = bool(self.can_fim_info.FIM_RearSideRAD_CAN_Busoff)
      self.acm_fim_info.FIM_CHS1_ACM_01_MsgError = bool(self.acm_fim_info.FIM_CHS1_ACM_01_MsgError)
      self.acm_fim_info.FIM_CHS1_ACM_02_MsgError = bool(self.acm_fim_info.FIM_CHS1_ACM_02_MsgError)
      self.acm_fim_info.FIM_CHS1_ACM_03_MsgError = bool(self.acm_fim_info.FIM_CHS1_ACM_03_MsgError)
      self.acm_fim_info.FIM_CHS1_ACM_CAN_Error = bool(self.acm_fim_info.FIM_CHS1_ACM_CAN_Error)
      self.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error = bool(self.asdm_fim_info.FIM_CHS1_ASDM_CAN_Error)
      self.asdm_fim_info.FIM_CHS1_ASDM_MsgError = bool(self.asdm_fim_info.FIM_CHS1_ASDM_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_CAN_Error = bool(self.apa_fim_info.FIM_ADAS_APA_CAN_Error)
      self.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_01_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_02_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_03_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_04_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_05_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_06_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_07_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_08_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_09_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_ADC_10_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_01_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_01_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_02_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_02_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_03_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_03_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_04_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_04_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_05_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_05_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot01_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot02_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot03_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot04_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot05_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot06_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot01Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot02Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot03Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot04Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot05Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot06Obj1_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot01Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot02Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot03Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot04Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot05Obj2_MsgError)
      self.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError = bool(self.apa_fim_info.FIM_ADAS_APA_Slot06Obj2_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_CAN_Error = bool(self.bcu_fim_info.FIM_CHS1_BCU_CAN_Error)
      self.bcu_fim_info.FIM_CHS1_BCU_01_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_01_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_02_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_02_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_03_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_03_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_04_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_04_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_07_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_07_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_08_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_08_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_09_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_09_MsgError)
      self.bcu_fim_info.FIM_CHS1_BCU_16_MsgError = bool(self.bcu_fim_info.FIM_CHS1_BCU_16_MsgError)
      self.bcu_fim_info.FIM_CHS2_BCU_CAN_Error = bool(self.bcu_fim_info.FIM_CHS2_BCU_CAN_Error)
      self.bcu_fim_info.FIM_CHS2_BCU_16_MsgError = bool(self.bcu_fim_info.FIM_CHS2_BCU_16_MsgError)
      self.bcm_fim_info.FIM_CHS1_BCM_CAN_Error = bool(self.bcm_fim_info.FIM_CHS1_BCM_CAN_Error)
      self.bcm_fim_info.FIM_ADAS_BCM_CAN_Error = bool(self.bcm_fim_info.FIM_ADAS_BCM_CAN_Error)
      self.bgw_fim_info.FIM_CHS1_BGW_01_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_01_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_02_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_02_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_03_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_03_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_LI_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_TCU_01_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError = bool(self.bgw_fim_info.FIM_CHS1_BGW_WIPR_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_POWER_SWAP_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SCU_D_02_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_01_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SCU_P_02_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_SNSR_MsgError)
      self.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError = bool(self.bgw_fim_info.FIM_ADAS_BGW_STEERWHL_CMD_MsgError)
      self.bgw_fim_info.FIM_CHS1_BGW_CAN_Error = bool(self.bgw_fim_info.FIM_CHS1_BGW_CAN_Error)
      self.bgw_fim_info.FIM_ADAS_BGW_CAN_Error = bool(self.bgw_fim_info.FIM_ADAS_BGW_CAN_Error)
      self.ccu_fim_info.FIM_CHS1_CCU_CAN_Error = bool(self.ccu_fim_info.FIM_CHS1_CCU_CAN_Error)
      self.cdc_fim_info.FIM_ADAS_CDC_CAN_Error = bool(self.cdc_fim_info.FIM_ADAS_CDC_CAN_Error)
      self.cdc_fim_info.FIM_CHS1_CDC_CAN_Error = bool(self.cdc_fim_info.FIM_CHS1_CDC_CAN_Error)
      self.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_ADC_01_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_HU_04_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_HU_09_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_HU_12_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_IC_01_MsgError)
      self.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError = bool(self.cdc_fim_info.FIM_CHS1_CDC_IC_04_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_ADC_03_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_ADC_04_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_DMS_01_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_DMS_02_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_03_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_07_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_08_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_09_MsgError)
      self.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError = bool(self.cdc_fim_info.FIM_ADAS_CDC_HU_19_MsgError)
      self.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError = bool(self.cdc_fim_info.FIM_CHS2_CDC_HU_04_MsgError)
      self.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error = bool(self.epb1_fim_info.FIM_CHS1_EPB1_CAN_Error)
      self.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError = bool(self.epb1_fim_info.FIM_CHS1_EPB1_01_MsgError)
      self.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error = bool(self.epb2_fim_info.FIM_CHS2_EPB2_CAN_Error)
      self.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError = bool(self.epb2_fim_info.FIM_CHS2_EPB2_01_MsgError)
      self.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError = bool(self.eps1_fim_info.FIM_CHS1_EPS1_01_MsgError)
      self.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError = bool(self.eps1_fim_info.FIM_CHS1_EPS1_02_MsgError)
      self.eps1_fim_info.FIM_CHS1_EPS1_Error = bool(self.eps1_fim_info.FIM_CHS1_EPS1_Error)
      self.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError = bool(self.eps2_fim_info.FIM_CHS2_EPS2_01_MsgError)
      self.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError = bool(self.eps2_fim_info.FIM_CHS2_EPS2_02_MsgError)
      self.eps2_fim_info.FIM_CHS2_EPS2_Error = bool(self.eps2_fim_info.FIM_CHS2_EPS2_Error)
      self.radfc_fim_info.FIM_RAD_Error = bool(self.radfc_fim_info.FIM_RAD_Error)
      self.radfc_fim_info.FIM_RAD_Blindness = bool(self.radfc_fim_info.FIM_RAD_Blindness)
      self.radfc_fim_info.FIM_RAD_MRR_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radfc_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radfl_fim_info.FIM_RAD_Error = bool(self.radfl_fim_info.FIM_RAD_Error)
      self.radfl_fim_info.FIM_RAD_Blindness = bool(self.radfl_fim_info.FIM_RAD_Blindness)
      self.radfl_fim_info.FIM_RAD_MRR_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radfl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radfr_fim_info.FIM_RAD_Error = bool(self.radfr_fim_info.FIM_RAD_Error)
      self.radfr_fim_info.FIM_RAD_Blindness = bool(self.radfr_fim_info.FIM_RAD_Blindness)
      self.radfr_fim_info.FIM_RAD_MRR_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radfr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radrl_fim_info.FIM_RAD_Error = bool(self.radrl_fim_info.FIM_RAD_Error)
      self.radrl_fim_info.FIM_RAD_Blindness = bool(self.radrl_fim_info.FIM_RAD_Blindness)
      self.radrl_fim_info.FIM_RAD_MRR_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radrl_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.radrr_fim_info.FIM_RAD_Error = bool(self.radrr_fim_info.FIM_RAD_Error)
      self.radrr_fim_info.FIM_RAD_Blindness = bool(self.radrr_fim_info.FIM_RAD_Blindness)
      self.radrr_fim_info.FIM_RAD_MRR_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Header_AlignmentState_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Header_SensorCoverage_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Header_Timestamps_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_CANVersion_MsgError)
      self.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError = bool(self.radrr_fim_info.FIM_RAD_MRR_Status_Radar_MsgError)
      self.scm_fim_info.FIM_CHS1_SCM_01_MsgError = bool(self.scm_fim_info.FIM_CHS1_SCM_01_MsgError)
      self.scm_fim_info.FIM_CHS1_SCM_02_MsgError = bool(self.scm_fim_info.FIM_CHS1_SCM_02_MsgError)
      self.scm_fim_info.FIM_CHS1_SCM_CAN_Error = bool(self.scm_fim_info.FIM_CHS1_SCM_CAN_Error)
      self.swc_fim_info.FIM_CHS1_SWC_01_MsgError = bool(self.swc_fim_info.FIM_CHS1_SWC_01_MsgError)
      self.swc_fim_info.FIM_CHS1_SWC_CAN_Error = bool(self.swc_fim_info.FIM_CHS1_SWC_CAN_Error)
      self.vcu_fim_info.FIM_CHS1_VCU_CAN_Error = bool(self.vcu_fim_info.FIM_CHS1_VCU_CAN_Error)
      self.vcu_fim_info.FIM_CHS2_VCU_CAN_Error = bool(self.vcu_fim_info.FIM_CHS2_VCU_CAN_Error)
      self.vcu_fim_info.FIM_CHS1_VCU_13_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_13_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_05_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_05_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_02_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_02_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_HealthMngt_MsgError)
      self.vcu_fim_info.FIM_CHS2_VCU_13_MsgError = bool(self.vcu_fim_info.FIM_CHS2_VCU_13_MsgError)
      self.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError = bool(self.vcu_fim_info.FIM_CHS2_VCU_HealthMngt_MsgError)
      self.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError = bool(self.vcu_fim_info.FIM_CHS1_VCU_CDC_328_MsgError)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_156BQ = None
def _get_struct_156BQ():
    global _struct_156BQ
    if _struct_156BQ is None:
        _struct_156BQ = struct.Struct("<156BQ")
    return _struct_156BQ
_struct_2Q = None
def _get_struct_2Q():
    global _struct_2Q
    if _struct_2Q is None:
        _struct_2Q = struct.Struct("<2Q")
    return _struct_2Q
