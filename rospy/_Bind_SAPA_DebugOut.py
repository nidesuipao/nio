# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/Bind_SAPA_DebugOut.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class Bind_SAPA_DebugOut(genpy.Message):
  _md5sum = "4d66c49e5e49849929336c94609728e6"
  _type = "rospy_message_converter/Bind_SAPA_DebugOut"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """uint32 Bitmask_ParkIn_standby_to_search
uint32 Bitmask_ParkIn_search_to_standby
uint32 Bitmask_ParkIn_search_to_preguidance
uint32 Bitmask_ParkIn_preguidance_to_search
uint32 Bitmask_ParkIn_preguidance_to_guidance_active
uint32 Bitmask_ParkIn_guidance_active_to_suspend
uint32 Bitmask_ParkIn_suspend_to_guidance_active
uint32 Bitmask_ParkIn_guidance_active_to_finish
uint32 Bitmask_ParkIn_finish_to_standby
uint32 Bitmask_ParkIn_to_irr_abort
uint32 Bitmask_ParkIn_to_takeover_abort
uint32 Bitmask_ParkIn_irr_abort_to_takeover_abort
uint32 Bitmask_ParkIn_irr_abort_to_standby
uint32 Bitmask_ParkIn_takeover_abort_to_standby
uint32 Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available
uint32 Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance
uint32 Bitmask_RemoteParkIn_available_to_preguidance
uint32 Bitmask_RemoteParkIn_preguidance_to_guidance_active
uint32 Bitmask_RemoteParkIn_guidance_active_to_suspend
uint32 Bitmask_RemoteParkIn_suspend_to_guidance_active
uint32 Bitmask_RemoteParkIn_guidance_active_to_finish
uint32 Bitmask_ParkOut_standby_to_search
uint32 Bitmask_ParkOut_search_to_standby
uint32 Bitmask_ParkOut_search_to_preguidance
uint32 Bitmask_ParkOut_preguidance_to_search
uint32 Bitmask_ParkOut_preguidance_to_guidance_active
uint32 Bitmask_ParkOut_guidance_active_to_suspend
uint32 Bitmask_ParkOut_suspend_to_guidance_active
uint32 Bitmask_ParkOut_guidance_active_to_finish
uint32 Bitmask_ParkOut_finish_to_standby
uint32 Bitmask_ParkOut_to_irr_abort
uint32 Bitmask_ParkOut_to_takeover_abort
uint32 Bitmask_ParkOut_irr_abort_to_takeover_abort
uint32 Bitmask_ParkOut_irr_abort_to_standby
uint32 Bitmask_ParkOut_takeover_abort_to_standby
uint32 Bitmask_RemoteParkOut_standby_to_search
uint32 Bitmask_RemoteParkOut_search_to_standby
uint32 Bitmask_RemoteParkOut_search_to_preguidance
uint32 Bitmask_RemoteParkOut_preguidance_to_search
uint32 Bitmask_RemoteParkOut_preguidance_to_guidance_active
uint32 Bitmask_RemoteParkOut_guidance_active_to_suspend
uint32 Bitmask_RemoteParkOut_suspend_to_guidance_active
uint32 Bitmask_RemoteParkOut_guidance_active_to_finish
uint32 Bitmask_RemoteParkOut_finish_to_standby
uint32 Bitmask_RemoteParkOut_to_irr_abort
uint32 Bitmask_RemoteParkOut_to_takeover_abort
uint32 Bitmask_RemoteParkOut_irr_abort_to_takeover_abort
uint32 Bitmask_RemoteParkOut_irr_abort_to_standby
uint32 Bitmask_RemoteParkOut_takeover_abort_to_standby
uint32 Bitmask_IrrAbort_eps_fault
uint32 Bitmask_IrrAbort_service_system_fault
uint32 Bitmask_IrrAbort_none_fault
uint32 Bitmask_TakeoverAbort_eps_fault
uint32 Bitmask_TakeoverAbort_service_system_fault
uint32 Bitmask_TakeoverAbort_non_fault
uint32 abort_reason
uint64 Bitmask_fault1
uint64 Bitmask_fault2
uint64 Bitmask_fault3
uint64 Bitmask_fault4
uint64 Bitmask_fault5
uint64 Bitmask_fault6
uint64 Bitmask_fault7
uint64 Bitmask_fault8
uint64 Bitmask_fault9
"""
  __slots__ = ['Bitmask_ParkIn_standby_to_search','Bitmask_ParkIn_search_to_standby','Bitmask_ParkIn_search_to_preguidance','Bitmask_ParkIn_preguidance_to_search','Bitmask_ParkIn_preguidance_to_guidance_active','Bitmask_ParkIn_guidance_active_to_suspend','Bitmask_ParkIn_suspend_to_guidance_active','Bitmask_ParkIn_guidance_active_to_finish','Bitmask_ParkIn_finish_to_standby','Bitmask_ParkIn_to_irr_abort','Bitmask_ParkIn_to_takeover_abort','Bitmask_ParkIn_irr_abort_to_takeover_abort','Bitmask_ParkIn_irr_abort_to_standby','Bitmask_ParkIn_takeover_abort_to_standby','Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available','Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance','Bitmask_RemoteParkIn_available_to_preguidance','Bitmask_RemoteParkIn_preguidance_to_guidance_active','Bitmask_RemoteParkIn_guidance_active_to_suspend','Bitmask_RemoteParkIn_suspend_to_guidance_active','Bitmask_RemoteParkIn_guidance_active_to_finish','Bitmask_ParkOut_standby_to_search','Bitmask_ParkOut_search_to_standby','Bitmask_ParkOut_search_to_preguidance','Bitmask_ParkOut_preguidance_to_search','Bitmask_ParkOut_preguidance_to_guidance_active','Bitmask_ParkOut_guidance_active_to_suspend','Bitmask_ParkOut_suspend_to_guidance_active','Bitmask_ParkOut_guidance_active_to_finish','Bitmask_ParkOut_finish_to_standby','Bitmask_ParkOut_to_irr_abort','Bitmask_ParkOut_to_takeover_abort','Bitmask_ParkOut_irr_abort_to_takeover_abort','Bitmask_ParkOut_irr_abort_to_standby','Bitmask_ParkOut_takeover_abort_to_standby','Bitmask_RemoteParkOut_standby_to_search','Bitmask_RemoteParkOut_search_to_standby','Bitmask_RemoteParkOut_search_to_preguidance','Bitmask_RemoteParkOut_preguidance_to_search','Bitmask_RemoteParkOut_preguidance_to_guidance_active','Bitmask_RemoteParkOut_guidance_active_to_suspend','Bitmask_RemoteParkOut_suspend_to_guidance_active','Bitmask_RemoteParkOut_guidance_active_to_finish','Bitmask_RemoteParkOut_finish_to_standby','Bitmask_RemoteParkOut_to_irr_abort','Bitmask_RemoteParkOut_to_takeover_abort','Bitmask_RemoteParkOut_irr_abort_to_takeover_abort','Bitmask_RemoteParkOut_irr_abort_to_standby','Bitmask_RemoteParkOut_takeover_abort_to_standby','Bitmask_IrrAbort_eps_fault','Bitmask_IrrAbort_service_system_fault','Bitmask_IrrAbort_none_fault','Bitmask_TakeoverAbort_eps_fault','Bitmask_TakeoverAbort_service_system_fault','Bitmask_TakeoverAbort_non_fault','abort_reason','Bitmask_fault1','Bitmask_fault2','Bitmask_fault3','Bitmask_fault4','Bitmask_fault5','Bitmask_fault6','Bitmask_fault7','Bitmask_fault8','Bitmask_fault9']
  _slot_types = ['uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint32','uint64','uint64','uint64','uint64','uint64','uint64','uint64','uint64','uint64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       Bitmask_ParkIn_standby_to_search,Bitmask_ParkIn_search_to_standby,Bitmask_ParkIn_search_to_preguidance,Bitmask_ParkIn_preguidance_to_search,Bitmask_ParkIn_preguidance_to_guidance_active,Bitmask_ParkIn_guidance_active_to_suspend,Bitmask_ParkIn_suspend_to_guidance_active,Bitmask_ParkIn_guidance_active_to_finish,Bitmask_ParkIn_finish_to_standby,Bitmask_ParkIn_to_irr_abort,Bitmask_ParkIn_to_takeover_abort,Bitmask_ParkIn_irr_abort_to_takeover_abort,Bitmask_ParkIn_irr_abort_to_standby,Bitmask_ParkIn_takeover_abort_to_standby,Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available,Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance,Bitmask_RemoteParkIn_available_to_preguidance,Bitmask_RemoteParkIn_preguidance_to_guidance_active,Bitmask_RemoteParkIn_guidance_active_to_suspend,Bitmask_RemoteParkIn_suspend_to_guidance_active,Bitmask_RemoteParkIn_guidance_active_to_finish,Bitmask_ParkOut_standby_to_search,Bitmask_ParkOut_search_to_standby,Bitmask_ParkOut_search_to_preguidance,Bitmask_ParkOut_preguidance_to_search,Bitmask_ParkOut_preguidance_to_guidance_active,Bitmask_ParkOut_guidance_active_to_suspend,Bitmask_ParkOut_suspend_to_guidance_active,Bitmask_ParkOut_guidance_active_to_finish,Bitmask_ParkOut_finish_to_standby,Bitmask_ParkOut_to_irr_abort,Bitmask_ParkOut_to_takeover_abort,Bitmask_ParkOut_irr_abort_to_takeover_abort,Bitmask_ParkOut_irr_abort_to_standby,Bitmask_ParkOut_takeover_abort_to_standby,Bitmask_RemoteParkOut_standby_to_search,Bitmask_RemoteParkOut_search_to_standby,Bitmask_RemoteParkOut_search_to_preguidance,Bitmask_RemoteParkOut_preguidance_to_search,Bitmask_RemoteParkOut_preguidance_to_guidance_active,Bitmask_RemoteParkOut_guidance_active_to_suspend,Bitmask_RemoteParkOut_suspend_to_guidance_active,Bitmask_RemoteParkOut_guidance_active_to_finish,Bitmask_RemoteParkOut_finish_to_standby,Bitmask_RemoteParkOut_to_irr_abort,Bitmask_RemoteParkOut_to_takeover_abort,Bitmask_RemoteParkOut_irr_abort_to_takeover_abort,Bitmask_RemoteParkOut_irr_abort_to_standby,Bitmask_RemoteParkOut_takeover_abort_to_standby,Bitmask_IrrAbort_eps_fault,Bitmask_IrrAbort_service_system_fault,Bitmask_IrrAbort_none_fault,Bitmask_TakeoverAbort_eps_fault,Bitmask_TakeoverAbort_service_system_fault,Bitmask_TakeoverAbort_non_fault,abort_reason,Bitmask_fault1,Bitmask_fault2,Bitmask_fault3,Bitmask_fault4,Bitmask_fault5,Bitmask_fault6,Bitmask_fault7,Bitmask_fault8,Bitmask_fault9

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(Bind_SAPA_DebugOut, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.Bitmask_ParkIn_standby_to_search is None:
        self.Bitmask_ParkIn_standby_to_search = 0
      if self.Bitmask_ParkIn_search_to_standby is None:
        self.Bitmask_ParkIn_search_to_standby = 0
      if self.Bitmask_ParkIn_search_to_preguidance is None:
        self.Bitmask_ParkIn_search_to_preguidance = 0
      if self.Bitmask_ParkIn_preguidance_to_search is None:
        self.Bitmask_ParkIn_preguidance_to_search = 0
      if self.Bitmask_ParkIn_preguidance_to_guidance_active is None:
        self.Bitmask_ParkIn_preguidance_to_guidance_active = 0
      if self.Bitmask_ParkIn_guidance_active_to_suspend is None:
        self.Bitmask_ParkIn_guidance_active_to_suspend = 0
      if self.Bitmask_ParkIn_suspend_to_guidance_active is None:
        self.Bitmask_ParkIn_suspend_to_guidance_active = 0
      if self.Bitmask_ParkIn_guidance_active_to_finish is None:
        self.Bitmask_ParkIn_guidance_active_to_finish = 0
      if self.Bitmask_ParkIn_finish_to_standby is None:
        self.Bitmask_ParkIn_finish_to_standby = 0
      if self.Bitmask_ParkIn_to_irr_abort is None:
        self.Bitmask_ParkIn_to_irr_abort = 0
      if self.Bitmask_ParkIn_to_takeover_abort is None:
        self.Bitmask_ParkIn_to_takeover_abort = 0
      if self.Bitmask_ParkIn_irr_abort_to_takeover_abort is None:
        self.Bitmask_ParkIn_irr_abort_to_takeover_abort = 0
      if self.Bitmask_ParkIn_irr_abort_to_standby is None:
        self.Bitmask_ParkIn_irr_abort_to_standby = 0
      if self.Bitmask_ParkIn_takeover_abort_to_standby is None:
        self.Bitmask_ParkIn_takeover_abort_to_standby = 0
      if self.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available is None:
        self.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available = 0
      if self.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance is None:
        self.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance = 0
      if self.Bitmask_RemoteParkIn_available_to_preguidance is None:
        self.Bitmask_RemoteParkIn_available_to_preguidance = 0
      if self.Bitmask_RemoteParkIn_preguidance_to_guidance_active is None:
        self.Bitmask_RemoteParkIn_preguidance_to_guidance_active = 0
      if self.Bitmask_RemoteParkIn_guidance_active_to_suspend is None:
        self.Bitmask_RemoteParkIn_guidance_active_to_suspend = 0
      if self.Bitmask_RemoteParkIn_suspend_to_guidance_active is None:
        self.Bitmask_RemoteParkIn_suspend_to_guidance_active = 0
      if self.Bitmask_RemoteParkIn_guidance_active_to_finish is None:
        self.Bitmask_RemoteParkIn_guidance_active_to_finish = 0
      if self.Bitmask_ParkOut_standby_to_search is None:
        self.Bitmask_ParkOut_standby_to_search = 0
      if self.Bitmask_ParkOut_search_to_standby is None:
        self.Bitmask_ParkOut_search_to_standby = 0
      if self.Bitmask_ParkOut_search_to_preguidance is None:
        self.Bitmask_ParkOut_search_to_preguidance = 0
      if self.Bitmask_ParkOut_preguidance_to_search is None:
        self.Bitmask_ParkOut_preguidance_to_search = 0
      if self.Bitmask_ParkOut_preguidance_to_guidance_active is None:
        self.Bitmask_ParkOut_preguidance_to_guidance_active = 0
      if self.Bitmask_ParkOut_guidance_active_to_suspend is None:
        self.Bitmask_ParkOut_guidance_active_to_suspend = 0
      if self.Bitmask_ParkOut_suspend_to_guidance_active is None:
        self.Bitmask_ParkOut_suspend_to_guidance_active = 0
      if self.Bitmask_ParkOut_guidance_active_to_finish is None:
        self.Bitmask_ParkOut_guidance_active_to_finish = 0
      if self.Bitmask_ParkOut_finish_to_standby is None:
        self.Bitmask_ParkOut_finish_to_standby = 0
      if self.Bitmask_ParkOut_to_irr_abort is None:
        self.Bitmask_ParkOut_to_irr_abort = 0
      if self.Bitmask_ParkOut_to_takeover_abort is None:
        self.Bitmask_ParkOut_to_takeover_abort = 0
      if self.Bitmask_ParkOut_irr_abort_to_takeover_abort is None:
        self.Bitmask_ParkOut_irr_abort_to_takeover_abort = 0
      if self.Bitmask_ParkOut_irr_abort_to_standby is None:
        self.Bitmask_ParkOut_irr_abort_to_standby = 0
      if self.Bitmask_ParkOut_takeover_abort_to_standby is None:
        self.Bitmask_ParkOut_takeover_abort_to_standby = 0
      if self.Bitmask_RemoteParkOut_standby_to_search is None:
        self.Bitmask_RemoteParkOut_standby_to_search = 0
      if self.Bitmask_RemoteParkOut_search_to_standby is None:
        self.Bitmask_RemoteParkOut_search_to_standby = 0
      if self.Bitmask_RemoteParkOut_search_to_preguidance is None:
        self.Bitmask_RemoteParkOut_search_to_preguidance = 0
      if self.Bitmask_RemoteParkOut_preguidance_to_search is None:
        self.Bitmask_RemoteParkOut_preguidance_to_search = 0
      if self.Bitmask_RemoteParkOut_preguidance_to_guidance_active is None:
        self.Bitmask_RemoteParkOut_preguidance_to_guidance_active = 0
      if self.Bitmask_RemoteParkOut_guidance_active_to_suspend is None:
        self.Bitmask_RemoteParkOut_guidance_active_to_suspend = 0
      if self.Bitmask_RemoteParkOut_suspend_to_guidance_active is None:
        self.Bitmask_RemoteParkOut_suspend_to_guidance_active = 0
      if self.Bitmask_RemoteParkOut_guidance_active_to_finish is None:
        self.Bitmask_RemoteParkOut_guidance_active_to_finish = 0
      if self.Bitmask_RemoteParkOut_finish_to_standby is None:
        self.Bitmask_RemoteParkOut_finish_to_standby = 0
      if self.Bitmask_RemoteParkOut_to_irr_abort is None:
        self.Bitmask_RemoteParkOut_to_irr_abort = 0
      if self.Bitmask_RemoteParkOut_to_takeover_abort is None:
        self.Bitmask_RemoteParkOut_to_takeover_abort = 0
      if self.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort is None:
        self.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort = 0
      if self.Bitmask_RemoteParkOut_irr_abort_to_standby is None:
        self.Bitmask_RemoteParkOut_irr_abort_to_standby = 0
      if self.Bitmask_RemoteParkOut_takeover_abort_to_standby is None:
        self.Bitmask_RemoteParkOut_takeover_abort_to_standby = 0
      if self.Bitmask_IrrAbort_eps_fault is None:
        self.Bitmask_IrrAbort_eps_fault = 0
      if self.Bitmask_IrrAbort_service_system_fault is None:
        self.Bitmask_IrrAbort_service_system_fault = 0
      if self.Bitmask_IrrAbort_none_fault is None:
        self.Bitmask_IrrAbort_none_fault = 0
      if self.Bitmask_TakeoverAbort_eps_fault is None:
        self.Bitmask_TakeoverAbort_eps_fault = 0
      if self.Bitmask_TakeoverAbort_service_system_fault is None:
        self.Bitmask_TakeoverAbort_service_system_fault = 0
      if self.Bitmask_TakeoverAbort_non_fault is None:
        self.Bitmask_TakeoverAbort_non_fault = 0
      if self.abort_reason is None:
        self.abort_reason = 0
      if self.Bitmask_fault1 is None:
        self.Bitmask_fault1 = 0
      if self.Bitmask_fault2 is None:
        self.Bitmask_fault2 = 0
      if self.Bitmask_fault3 is None:
        self.Bitmask_fault3 = 0
      if self.Bitmask_fault4 is None:
        self.Bitmask_fault4 = 0
      if self.Bitmask_fault5 is None:
        self.Bitmask_fault5 = 0
      if self.Bitmask_fault6 is None:
        self.Bitmask_fault6 = 0
      if self.Bitmask_fault7 is None:
        self.Bitmask_fault7 = 0
      if self.Bitmask_fault8 is None:
        self.Bitmask_fault8 = 0
      if self.Bitmask_fault9 is None:
        self.Bitmask_fault9 = 0
    else:
      self.Bitmask_ParkIn_standby_to_search = 0
      self.Bitmask_ParkIn_search_to_standby = 0
      self.Bitmask_ParkIn_search_to_preguidance = 0
      self.Bitmask_ParkIn_preguidance_to_search = 0
      self.Bitmask_ParkIn_preguidance_to_guidance_active = 0
      self.Bitmask_ParkIn_guidance_active_to_suspend = 0
      self.Bitmask_ParkIn_suspend_to_guidance_active = 0
      self.Bitmask_ParkIn_guidance_active_to_finish = 0
      self.Bitmask_ParkIn_finish_to_standby = 0
      self.Bitmask_ParkIn_to_irr_abort = 0
      self.Bitmask_ParkIn_to_takeover_abort = 0
      self.Bitmask_ParkIn_irr_abort_to_takeover_abort = 0
      self.Bitmask_ParkIn_irr_abort_to_standby = 0
      self.Bitmask_ParkIn_takeover_abort_to_standby = 0
      self.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available = 0
      self.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance = 0
      self.Bitmask_RemoteParkIn_available_to_preguidance = 0
      self.Bitmask_RemoteParkIn_preguidance_to_guidance_active = 0
      self.Bitmask_RemoteParkIn_guidance_active_to_suspend = 0
      self.Bitmask_RemoteParkIn_suspend_to_guidance_active = 0
      self.Bitmask_RemoteParkIn_guidance_active_to_finish = 0
      self.Bitmask_ParkOut_standby_to_search = 0
      self.Bitmask_ParkOut_search_to_standby = 0
      self.Bitmask_ParkOut_search_to_preguidance = 0
      self.Bitmask_ParkOut_preguidance_to_search = 0
      self.Bitmask_ParkOut_preguidance_to_guidance_active = 0
      self.Bitmask_ParkOut_guidance_active_to_suspend = 0
      self.Bitmask_ParkOut_suspend_to_guidance_active = 0
      self.Bitmask_ParkOut_guidance_active_to_finish = 0
      self.Bitmask_ParkOut_finish_to_standby = 0
      self.Bitmask_ParkOut_to_irr_abort = 0
      self.Bitmask_ParkOut_to_takeover_abort = 0
      self.Bitmask_ParkOut_irr_abort_to_takeover_abort = 0
      self.Bitmask_ParkOut_irr_abort_to_standby = 0
      self.Bitmask_ParkOut_takeover_abort_to_standby = 0
      self.Bitmask_RemoteParkOut_standby_to_search = 0
      self.Bitmask_RemoteParkOut_search_to_standby = 0
      self.Bitmask_RemoteParkOut_search_to_preguidance = 0
      self.Bitmask_RemoteParkOut_preguidance_to_search = 0
      self.Bitmask_RemoteParkOut_preguidance_to_guidance_active = 0
      self.Bitmask_RemoteParkOut_guidance_active_to_suspend = 0
      self.Bitmask_RemoteParkOut_suspend_to_guidance_active = 0
      self.Bitmask_RemoteParkOut_guidance_active_to_finish = 0
      self.Bitmask_RemoteParkOut_finish_to_standby = 0
      self.Bitmask_RemoteParkOut_to_irr_abort = 0
      self.Bitmask_RemoteParkOut_to_takeover_abort = 0
      self.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort = 0
      self.Bitmask_RemoteParkOut_irr_abort_to_standby = 0
      self.Bitmask_RemoteParkOut_takeover_abort_to_standby = 0
      self.Bitmask_IrrAbort_eps_fault = 0
      self.Bitmask_IrrAbort_service_system_fault = 0
      self.Bitmask_IrrAbort_none_fault = 0
      self.Bitmask_TakeoverAbort_eps_fault = 0
      self.Bitmask_TakeoverAbort_service_system_fault = 0
      self.Bitmask_TakeoverAbort_non_fault = 0
      self.abort_reason = 0
      self.Bitmask_fault1 = 0
      self.Bitmask_fault2 = 0
      self.Bitmask_fault3 = 0
      self.Bitmask_fault4 = 0
      self.Bitmask_fault5 = 0
      self.Bitmask_fault6 = 0
      self.Bitmask_fault7 = 0
      self.Bitmask_fault8 = 0
      self.Bitmask_fault9 = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_56I9Q().pack(_x.Bitmask_ParkIn_standby_to_search, _x.Bitmask_ParkIn_search_to_standby, _x.Bitmask_ParkIn_search_to_preguidance, _x.Bitmask_ParkIn_preguidance_to_search, _x.Bitmask_ParkIn_preguidance_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_suspend, _x.Bitmask_ParkIn_suspend_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_finish, _x.Bitmask_ParkIn_finish_to_standby, _x.Bitmask_ParkIn_to_irr_abort, _x.Bitmask_ParkIn_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_standby, _x.Bitmask_ParkIn_takeover_abort_to_standby, _x.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available, _x.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance, _x.Bitmask_RemoteParkIn_available_to_preguidance, _x.Bitmask_RemoteParkIn_preguidance_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_suspend, _x.Bitmask_RemoteParkIn_suspend_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_finish, _x.Bitmask_ParkOut_standby_to_search, _x.Bitmask_ParkOut_search_to_standby, _x.Bitmask_ParkOut_search_to_preguidance, _x.Bitmask_ParkOut_preguidance_to_search, _x.Bitmask_ParkOut_preguidance_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_suspend, _x.Bitmask_ParkOut_suspend_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_finish, _x.Bitmask_ParkOut_finish_to_standby, _x.Bitmask_ParkOut_to_irr_abort, _x.Bitmask_ParkOut_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_standby, _x.Bitmask_ParkOut_takeover_abort_to_standby, _x.Bitmask_RemoteParkOut_standby_to_search, _x.Bitmask_RemoteParkOut_search_to_standby, _x.Bitmask_RemoteParkOut_search_to_preguidance, _x.Bitmask_RemoteParkOut_preguidance_to_search, _x.Bitmask_RemoteParkOut_preguidance_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_suspend, _x.Bitmask_RemoteParkOut_suspend_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_finish, _x.Bitmask_RemoteParkOut_finish_to_standby, _x.Bitmask_RemoteParkOut_to_irr_abort, _x.Bitmask_RemoteParkOut_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_standby, _x.Bitmask_RemoteParkOut_takeover_abort_to_standby, _x.Bitmask_IrrAbort_eps_fault, _x.Bitmask_IrrAbort_service_system_fault, _x.Bitmask_IrrAbort_none_fault, _x.Bitmask_TakeoverAbort_eps_fault, _x.Bitmask_TakeoverAbort_service_system_fault, _x.Bitmask_TakeoverAbort_non_fault, _x.abort_reason, _x.Bitmask_fault1, _x.Bitmask_fault2, _x.Bitmask_fault3, _x.Bitmask_fault4, _x.Bitmask_fault5, _x.Bitmask_fault6, _x.Bitmask_fault7, _x.Bitmask_fault8, _x.Bitmask_fault9))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 296
      (_x.Bitmask_ParkIn_standby_to_search, _x.Bitmask_ParkIn_search_to_standby, _x.Bitmask_ParkIn_search_to_preguidance, _x.Bitmask_ParkIn_preguidance_to_search, _x.Bitmask_ParkIn_preguidance_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_suspend, _x.Bitmask_ParkIn_suspend_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_finish, _x.Bitmask_ParkIn_finish_to_standby, _x.Bitmask_ParkIn_to_irr_abort, _x.Bitmask_ParkIn_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_standby, _x.Bitmask_ParkIn_takeover_abort_to_standby, _x.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available, _x.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance, _x.Bitmask_RemoteParkIn_available_to_preguidance, _x.Bitmask_RemoteParkIn_preguidance_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_suspend, _x.Bitmask_RemoteParkIn_suspend_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_finish, _x.Bitmask_ParkOut_standby_to_search, _x.Bitmask_ParkOut_search_to_standby, _x.Bitmask_ParkOut_search_to_preguidance, _x.Bitmask_ParkOut_preguidance_to_search, _x.Bitmask_ParkOut_preguidance_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_suspend, _x.Bitmask_ParkOut_suspend_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_finish, _x.Bitmask_ParkOut_finish_to_standby, _x.Bitmask_ParkOut_to_irr_abort, _x.Bitmask_ParkOut_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_standby, _x.Bitmask_ParkOut_takeover_abort_to_standby, _x.Bitmask_RemoteParkOut_standby_to_search, _x.Bitmask_RemoteParkOut_search_to_standby, _x.Bitmask_RemoteParkOut_search_to_preguidance, _x.Bitmask_RemoteParkOut_preguidance_to_search, _x.Bitmask_RemoteParkOut_preguidance_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_suspend, _x.Bitmask_RemoteParkOut_suspend_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_finish, _x.Bitmask_RemoteParkOut_finish_to_standby, _x.Bitmask_RemoteParkOut_to_irr_abort, _x.Bitmask_RemoteParkOut_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_standby, _x.Bitmask_RemoteParkOut_takeover_abort_to_standby, _x.Bitmask_IrrAbort_eps_fault, _x.Bitmask_IrrAbort_service_system_fault, _x.Bitmask_IrrAbort_none_fault, _x.Bitmask_TakeoverAbort_eps_fault, _x.Bitmask_TakeoverAbort_service_system_fault, _x.Bitmask_TakeoverAbort_non_fault, _x.abort_reason, _x.Bitmask_fault1, _x.Bitmask_fault2, _x.Bitmask_fault3, _x.Bitmask_fault4, _x.Bitmask_fault5, _x.Bitmask_fault6, _x.Bitmask_fault7, _x.Bitmask_fault8, _x.Bitmask_fault9,) = _get_struct_56I9Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_56I9Q().pack(_x.Bitmask_ParkIn_standby_to_search, _x.Bitmask_ParkIn_search_to_standby, _x.Bitmask_ParkIn_search_to_preguidance, _x.Bitmask_ParkIn_preguidance_to_search, _x.Bitmask_ParkIn_preguidance_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_suspend, _x.Bitmask_ParkIn_suspend_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_finish, _x.Bitmask_ParkIn_finish_to_standby, _x.Bitmask_ParkIn_to_irr_abort, _x.Bitmask_ParkIn_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_standby, _x.Bitmask_ParkIn_takeover_abort_to_standby, _x.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available, _x.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance, _x.Bitmask_RemoteParkIn_available_to_preguidance, _x.Bitmask_RemoteParkIn_preguidance_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_suspend, _x.Bitmask_RemoteParkIn_suspend_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_finish, _x.Bitmask_ParkOut_standby_to_search, _x.Bitmask_ParkOut_search_to_standby, _x.Bitmask_ParkOut_search_to_preguidance, _x.Bitmask_ParkOut_preguidance_to_search, _x.Bitmask_ParkOut_preguidance_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_suspend, _x.Bitmask_ParkOut_suspend_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_finish, _x.Bitmask_ParkOut_finish_to_standby, _x.Bitmask_ParkOut_to_irr_abort, _x.Bitmask_ParkOut_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_standby, _x.Bitmask_ParkOut_takeover_abort_to_standby, _x.Bitmask_RemoteParkOut_standby_to_search, _x.Bitmask_RemoteParkOut_search_to_standby, _x.Bitmask_RemoteParkOut_search_to_preguidance, _x.Bitmask_RemoteParkOut_preguidance_to_search, _x.Bitmask_RemoteParkOut_preguidance_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_suspend, _x.Bitmask_RemoteParkOut_suspend_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_finish, _x.Bitmask_RemoteParkOut_finish_to_standby, _x.Bitmask_RemoteParkOut_to_irr_abort, _x.Bitmask_RemoteParkOut_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_standby, _x.Bitmask_RemoteParkOut_takeover_abort_to_standby, _x.Bitmask_IrrAbort_eps_fault, _x.Bitmask_IrrAbort_service_system_fault, _x.Bitmask_IrrAbort_none_fault, _x.Bitmask_TakeoverAbort_eps_fault, _x.Bitmask_TakeoverAbort_service_system_fault, _x.Bitmask_TakeoverAbort_non_fault, _x.abort_reason, _x.Bitmask_fault1, _x.Bitmask_fault2, _x.Bitmask_fault3, _x.Bitmask_fault4, _x.Bitmask_fault5, _x.Bitmask_fault6, _x.Bitmask_fault7, _x.Bitmask_fault8, _x.Bitmask_fault9))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 296
      (_x.Bitmask_ParkIn_standby_to_search, _x.Bitmask_ParkIn_search_to_standby, _x.Bitmask_ParkIn_search_to_preguidance, _x.Bitmask_ParkIn_preguidance_to_search, _x.Bitmask_ParkIn_preguidance_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_suspend, _x.Bitmask_ParkIn_suspend_to_guidance_active, _x.Bitmask_ParkIn_guidance_active_to_finish, _x.Bitmask_ParkIn_finish_to_standby, _x.Bitmask_ParkIn_to_irr_abort, _x.Bitmask_ParkIn_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_takeover_abort, _x.Bitmask_ParkIn_irr_abort_to_standby, _x.Bitmask_ParkIn_takeover_abort_to_standby, _x.Bitmask_RemoteParkIn_parkin_preguidance_to_remote_available, _x.Bitmask_RemoteParkIn_remote_available_to_parkin_preguidance, _x.Bitmask_RemoteParkIn_available_to_preguidance, _x.Bitmask_RemoteParkIn_preguidance_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_suspend, _x.Bitmask_RemoteParkIn_suspend_to_guidance_active, _x.Bitmask_RemoteParkIn_guidance_active_to_finish, _x.Bitmask_ParkOut_standby_to_search, _x.Bitmask_ParkOut_search_to_standby, _x.Bitmask_ParkOut_search_to_preguidance, _x.Bitmask_ParkOut_preguidance_to_search, _x.Bitmask_ParkOut_preguidance_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_suspend, _x.Bitmask_ParkOut_suspend_to_guidance_active, _x.Bitmask_ParkOut_guidance_active_to_finish, _x.Bitmask_ParkOut_finish_to_standby, _x.Bitmask_ParkOut_to_irr_abort, _x.Bitmask_ParkOut_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_takeover_abort, _x.Bitmask_ParkOut_irr_abort_to_standby, _x.Bitmask_ParkOut_takeover_abort_to_standby, _x.Bitmask_RemoteParkOut_standby_to_search, _x.Bitmask_RemoteParkOut_search_to_standby, _x.Bitmask_RemoteParkOut_search_to_preguidance, _x.Bitmask_RemoteParkOut_preguidance_to_search, _x.Bitmask_RemoteParkOut_preguidance_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_suspend, _x.Bitmask_RemoteParkOut_suspend_to_guidance_active, _x.Bitmask_RemoteParkOut_guidance_active_to_finish, _x.Bitmask_RemoteParkOut_finish_to_standby, _x.Bitmask_RemoteParkOut_to_irr_abort, _x.Bitmask_RemoteParkOut_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_takeover_abort, _x.Bitmask_RemoteParkOut_irr_abort_to_standby, _x.Bitmask_RemoteParkOut_takeover_abort_to_standby, _x.Bitmask_IrrAbort_eps_fault, _x.Bitmask_IrrAbort_service_system_fault, _x.Bitmask_IrrAbort_none_fault, _x.Bitmask_TakeoverAbort_eps_fault, _x.Bitmask_TakeoverAbort_service_system_fault, _x.Bitmask_TakeoverAbort_non_fault, _x.abort_reason, _x.Bitmask_fault1, _x.Bitmask_fault2, _x.Bitmask_fault3, _x.Bitmask_fault4, _x.Bitmask_fault5, _x.Bitmask_fault6, _x.Bitmask_fault7, _x.Bitmask_fault8, _x.Bitmask_fault9,) = _get_struct_56I9Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_56I9Q = None
def _get_struct_56I9Q():
    global _struct_56I9Q
    if _struct_56I9Q is None:
        _struct_56I9Q = struct.Struct("<56I9Q")
    return _struct_56I9Q
