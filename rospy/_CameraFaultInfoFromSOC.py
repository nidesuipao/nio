# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/CameraFaultInfoFromSOC.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import rospy_message_converter.msg

class CameraFaultInfoFromSOC(genpy.Message):
  _md5sum = "e62eb66a64500a1dfa66afb4aa8ca62f"
  _type = "rospy_message_converter/CameraFaultInfoFromSOC"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """SOCCameraFaultType front120_fault_info
SOCCameraFaultType front30_fault_info
SOCCameraFaultType rear_fault_info
SOCCameraFaultType dms_fault_info
SOCCameraFaultType svc_front_fault_info
SOCCameraFaultType svc_rear_fault_info
SOCCameraFaultType svc_left_fault_info
SOCCameraFaultType svc_right_fault_info
SOCCameraFaultType side_fl_fault_info
SOCCameraFaultType side_fr_fault_info
SOCCameraFaultType side_rl_fault_info
SOCCameraFaultType side_rr_fault_info
SOCCameraFaultType oms_fault_info
bool fsync_get_error
uint64 publish_ptp_ts
string publisher_id
uint64 counter
uint64 publish_ts

================================================================================
MSG: rospy_message_converter/SOCCameraFaultType
bool CameraInitialFailed
bool SOCGetFrameError
bool CameraSerDesError
bool CameraOvertemperature
bool ProducerSenderTimeout
bool ProducerFrameDrop
bool CameraModuleError
bool SerError
bool DesError
bool PipelineError
"""
  __slots__ = ['front120_fault_info','front30_fault_info','rear_fault_info','dms_fault_info','svc_front_fault_info','svc_rear_fault_info','svc_left_fault_info','svc_right_fault_info','side_fl_fault_info','side_fr_fault_info','side_rl_fault_info','side_rr_fault_info','oms_fault_info','fsync_get_error','publish_ptp_ts','publisher_id','counter','publish_ts']
  _slot_types = ['rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','rospy_message_converter/SOCCameraFaultType','bool','uint64','string','uint64','uint64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       front120_fault_info,front30_fault_info,rear_fault_info,dms_fault_info,svc_front_fault_info,svc_rear_fault_info,svc_left_fault_info,svc_right_fault_info,side_fl_fault_info,side_fr_fault_info,side_rl_fault_info,side_rr_fault_info,oms_fault_info,fsync_get_error,publish_ptp_ts,publisher_id,counter,publish_ts

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(CameraFaultInfoFromSOC, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.front120_fault_info is None:
        self.front120_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.front30_fault_info is None:
        self.front30_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.rear_fault_info is None:
        self.rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.dms_fault_info is None:
        self.dms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_front_fault_info is None:
        self.svc_front_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_rear_fault_info is None:
        self.svc_rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_left_fault_info is None:
        self.svc_left_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_right_fault_info is None:
        self.svc_right_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_fl_fault_info is None:
        self.side_fl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_fr_fault_info is None:
        self.side_fr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_rl_fault_info is None:
        self.side_rl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_rr_fault_info is None:
        self.side_rr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.oms_fault_info is None:
        self.oms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.fsync_get_error is None:
        self.fsync_get_error = False
      if self.publish_ptp_ts is None:
        self.publish_ptp_ts = 0
      if self.publisher_id is None:
        self.publisher_id = ''
      if self.counter is None:
        self.counter = 0
      if self.publish_ts is None:
        self.publish_ts = 0
    else:
      self.front120_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.front30_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.dms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.svc_front_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.svc_rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.svc_left_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.svc_right_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.side_fl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.side_fr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.side_rl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.side_rr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.oms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      self.fsync_get_error = False
      self.publish_ptp_ts = 0
      self.publisher_id = ''
      self.counter = 0
      self.publish_ts = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_131BQ().pack(_x.front120_fault_info.CameraInitialFailed, _x.front120_fault_info.SOCGetFrameError, _x.front120_fault_info.CameraSerDesError, _x.front120_fault_info.CameraOvertemperature, _x.front120_fault_info.ProducerSenderTimeout, _x.front120_fault_info.ProducerFrameDrop, _x.front120_fault_info.CameraModuleError, _x.front120_fault_info.SerError, _x.front120_fault_info.DesError, _x.front120_fault_info.PipelineError, _x.front30_fault_info.CameraInitialFailed, _x.front30_fault_info.SOCGetFrameError, _x.front30_fault_info.CameraSerDesError, _x.front30_fault_info.CameraOvertemperature, _x.front30_fault_info.ProducerSenderTimeout, _x.front30_fault_info.ProducerFrameDrop, _x.front30_fault_info.CameraModuleError, _x.front30_fault_info.SerError, _x.front30_fault_info.DesError, _x.front30_fault_info.PipelineError, _x.rear_fault_info.CameraInitialFailed, _x.rear_fault_info.SOCGetFrameError, _x.rear_fault_info.CameraSerDesError, _x.rear_fault_info.CameraOvertemperature, _x.rear_fault_info.ProducerSenderTimeout, _x.rear_fault_info.ProducerFrameDrop, _x.rear_fault_info.CameraModuleError, _x.rear_fault_info.SerError, _x.rear_fault_info.DesError, _x.rear_fault_info.PipelineError, _x.dms_fault_info.CameraInitialFailed, _x.dms_fault_info.SOCGetFrameError, _x.dms_fault_info.CameraSerDesError, _x.dms_fault_info.CameraOvertemperature, _x.dms_fault_info.ProducerSenderTimeout, _x.dms_fault_info.ProducerFrameDrop, _x.dms_fault_info.CameraModuleError, _x.dms_fault_info.SerError, _x.dms_fault_info.DesError, _x.dms_fault_info.PipelineError, _x.svc_front_fault_info.CameraInitialFailed, _x.svc_front_fault_info.SOCGetFrameError, _x.svc_front_fault_info.CameraSerDesError, _x.svc_front_fault_info.CameraOvertemperature, _x.svc_front_fault_info.ProducerSenderTimeout, _x.svc_front_fault_info.ProducerFrameDrop, _x.svc_front_fault_info.CameraModuleError, _x.svc_front_fault_info.SerError, _x.svc_front_fault_info.DesError, _x.svc_front_fault_info.PipelineError, _x.svc_rear_fault_info.CameraInitialFailed, _x.svc_rear_fault_info.SOCGetFrameError, _x.svc_rear_fault_info.CameraSerDesError, _x.svc_rear_fault_info.CameraOvertemperature, _x.svc_rear_fault_info.ProducerSenderTimeout, _x.svc_rear_fault_info.ProducerFrameDrop, _x.svc_rear_fault_info.CameraModuleError, _x.svc_rear_fault_info.SerError, _x.svc_rear_fault_info.DesError, _x.svc_rear_fault_info.PipelineError, _x.svc_left_fault_info.CameraInitialFailed, _x.svc_left_fault_info.SOCGetFrameError, _x.svc_left_fault_info.CameraSerDesError, _x.svc_left_fault_info.CameraOvertemperature, _x.svc_left_fault_info.ProducerSenderTimeout, _x.svc_left_fault_info.ProducerFrameDrop, _x.svc_left_fault_info.CameraModuleError, _x.svc_left_fault_info.SerError, _x.svc_left_fault_info.DesError, _x.svc_left_fault_info.PipelineError, _x.svc_right_fault_info.CameraInitialFailed, _x.svc_right_fault_info.SOCGetFrameError, _x.svc_right_fault_info.CameraSerDesError, _x.svc_right_fault_info.CameraOvertemperature, _x.svc_right_fault_info.ProducerSenderTimeout, _x.svc_right_fault_info.ProducerFrameDrop, _x.svc_right_fault_info.CameraModuleError, _x.svc_right_fault_info.SerError, _x.svc_right_fault_info.DesError, _x.svc_right_fault_info.PipelineError, _x.side_fl_fault_info.CameraInitialFailed, _x.side_fl_fault_info.SOCGetFrameError, _x.side_fl_fault_info.CameraSerDesError, _x.side_fl_fault_info.CameraOvertemperature, _x.side_fl_fault_info.ProducerSenderTimeout, _x.side_fl_fault_info.ProducerFrameDrop, _x.side_fl_fault_info.CameraModuleError, _x.side_fl_fault_info.SerError, _x.side_fl_fault_info.DesError, _x.side_fl_fault_info.PipelineError, _x.side_fr_fault_info.CameraInitialFailed, _x.side_fr_fault_info.SOCGetFrameError, _x.side_fr_fault_info.CameraSerDesError, _x.side_fr_fault_info.CameraOvertemperature, _x.side_fr_fault_info.ProducerSenderTimeout, _x.side_fr_fault_info.ProducerFrameDrop, _x.side_fr_fault_info.CameraModuleError, _x.side_fr_fault_info.SerError, _x.side_fr_fault_info.DesError, _x.side_fr_fault_info.PipelineError, _x.side_rl_fault_info.CameraInitialFailed, _x.side_rl_fault_info.SOCGetFrameError, _x.side_rl_fault_info.CameraSerDesError, _x.side_rl_fault_info.CameraOvertemperature, _x.side_rl_fault_info.ProducerSenderTimeout, _x.side_rl_fault_info.ProducerFrameDrop, _x.side_rl_fault_info.CameraModuleError, _x.side_rl_fault_info.SerError, _x.side_rl_fault_info.DesError, _x.side_rl_fault_info.PipelineError, _x.side_rr_fault_info.CameraInitialFailed, _x.side_rr_fault_info.SOCGetFrameError, _x.side_rr_fault_info.CameraSerDesError, _x.side_rr_fault_info.CameraOvertemperature, _x.side_rr_fault_info.ProducerSenderTimeout, _x.side_rr_fault_info.ProducerFrameDrop, _x.side_rr_fault_info.CameraModuleError, _x.side_rr_fault_info.SerError, _x.side_rr_fault_info.DesError, _x.side_rr_fault_info.PipelineError, _x.oms_fault_info.CameraInitialFailed, _x.oms_fault_info.SOCGetFrameError, _x.oms_fault_info.CameraSerDesError, _x.oms_fault_info.CameraOvertemperature, _x.oms_fault_info.ProducerSenderTimeout, _x.oms_fault_info.ProducerFrameDrop, _x.oms_fault_info.CameraModuleError, _x.oms_fault_info.SerError, _x.oms_fault_info.DesError, _x.oms_fault_info.PipelineError, _x.fsync_get_error, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.front120_fault_info is None:
        self.front120_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.front30_fault_info is None:
        self.front30_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.rear_fault_info is None:
        self.rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.dms_fault_info is None:
        self.dms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_front_fault_info is None:
        self.svc_front_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_rear_fault_info is None:
        self.svc_rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_left_fault_info is None:
        self.svc_left_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_right_fault_info is None:
        self.svc_right_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_fl_fault_info is None:
        self.side_fl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_fr_fault_info is None:
        self.side_fr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_rl_fault_info is None:
        self.side_rl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_rr_fault_info is None:
        self.side_rr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.oms_fault_info is None:
        self.oms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      end = 0
      _x = self
      start = end
      end += 139
      (_x.front120_fault_info.CameraInitialFailed, _x.front120_fault_info.SOCGetFrameError, _x.front120_fault_info.CameraSerDesError, _x.front120_fault_info.CameraOvertemperature, _x.front120_fault_info.ProducerSenderTimeout, _x.front120_fault_info.ProducerFrameDrop, _x.front120_fault_info.CameraModuleError, _x.front120_fault_info.SerError, _x.front120_fault_info.DesError, _x.front120_fault_info.PipelineError, _x.front30_fault_info.CameraInitialFailed, _x.front30_fault_info.SOCGetFrameError, _x.front30_fault_info.CameraSerDesError, _x.front30_fault_info.CameraOvertemperature, _x.front30_fault_info.ProducerSenderTimeout, _x.front30_fault_info.ProducerFrameDrop, _x.front30_fault_info.CameraModuleError, _x.front30_fault_info.SerError, _x.front30_fault_info.DesError, _x.front30_fault_info.PipelineError, _x.rear_fault_info.CameraInitialFailed, _x.rear_fault_info.SOCGetFrameError, _x.rear_fault_info.CameraSerDesError, _x.rear_fault_info.CameraOvertemperature, _x.rear_fault_info.ProducerSenderTimeout, _x.rear_fault_info.ProducerFrameDrop, _x.rear_fault_info.CameraModuleError, _x.rear_fault_info.SerError, _x.rear_fault_info.DesError, _x.rear_fault_info.PipelineError, _x.dms_fault_info.CameraInitialFailed, _x.dms_fault_info.SOCGetFrameError, _x.dms_fault_info.CameraSerDesError, _x.dms_fault_info.CameraOvertemperature, _x.dms_fault_info.ProducerSenderTimeout, _x.dms_fault_info.ProducerFrameDrop, _x.dms_fault_info.CameraModuleError, _x.dms_fault_info.SerError, _x.dms_fault_info.DesError, _x.dms_fault_info.PipelineError, _x.svc_front_fault_info.CameraInitialFailed, _x.svc_front_fault_info.SOCGetFrameError, _x.svc_front_fault_info.CameraSerDesError, _x.svc_front_fault_info.CameraOvertemperature, _x.svc_front_fault_info.ProducerSenderTimeout, _x.svc_front_fault_info.ProducerFrameDrop, _x.svc_front_fault_info.CameraModuleError, _x.svc_front_fault_info.SerError, _x.svc_front_fault_info.DesError, _x.svc_front_fault_info.PipelineError, _x.svc_rear_fault_info.CameraInitialFailed, _x.svc_rear_fault_info.SOCGetFrameError, _x.svc_rear_fault_info.CameraSerDesError, _x.svc_rear_fault_info.CameraOvertemperature, _x.svc_rear_fault_info.ProducerSenderTimeout, _x.svc_rear_fault_info.ProducerFrameDrop, _x.svc_rear_fault_info.CameraModuleError, _x.svc_rear_fault_info.SerError, _x.svc_rear_fault_info.DesError, _x.svc_rear_fault_info.PipelineError, _x.svc_left_fault_info.CameraInitialFailed, _x.svc_left_fault_info.SOCGetFrameError, _x.svc_left_fault_info.CameraSerDesError, _x.svc_left_fault_info.CameraOvertemperature, _x.svc_left_fault_info.ProducerSenderTimeout, _x.svc_left_fault_info.ProducerFrameDrop, _x.svc_left_fault_info.CameraModuleError, _x.svc_left_fault_info.SerError, _x.svc_left_fault_info.DesError, _x.svc_left_fault_info.PipelineError, _x.svc_right_fault_info.CameraInitialFailed, _x.svc_right_fault_info.SOCGetFrameError, _x.svc_right_fault_info.CameraSerDesError, _x.svc_right_fault_info.CameraOvertemperature, _x.svc_right_fault_info.ProducerSenderTimeout, _x.svc_right_fault_info.ProducerFrameDrop, _x.svc_right_fault_info.CameraModuleError, _x.svc_right_fault_info.SerError, _x.svc_right_fault_info.DesError, _x.svc_right_fault_info.PipelineError, _x.side_fl_fault_info.CameraInitialFailed, _x.side_fl_fault_info.SOCGetFrameError, _x.side_fl_fault_info.CameraSerDesError, _x.side_fl_fault_info.CameraOvertemperature, _x.side_fl_fault_info.ProducerSenderTimeout, _x.side_fl_fault_info.ProducerFrameDrop, _x.side_fl_fault_info.CameraModuleError, _x.side_fl_fault_info.SerError, _x.side_fl_fault_info.DesError, _x.side_fl_fault_info.PipelineError, _x.side_fr_fault_info.CameraInitialFailed, _x.side_fr_fault_info.SOCGetFrameError, _x.side_fr_fault_info.CameraSerDesError, _x.side_fr_fault_info.CameraOvertemperature, _x.side_fr_fault_info.ProducerSenderTimeout, _x.side_fr_fault_info.ProducerFrameDrop, _x.side_fr_fault_info.CameraModuleError, _x.side_fr_fault_info.SerError, _x.side_fr_fault_info.DesError, _x.side_fr_fault_info.PipelineError, _x.side_rl_fault_info.CameraInitialFailed, _x.side_rl_fault_info.SOCGetFrameError, _x.side_rl_fault_info.CameraSerDesError, _x.side_rl_fault_info.CameraOvertemperature, _x.side_rl_fault_info.ProducerSenderTimeout, _x.side_rl_fault_info.ProducerFrameDrop, _x.side_rl_fault_info.CameraModuleError, _x.side_rl_fault_info.SerError, _x.side_rl_fault_info.DesError, _x.side_rl_fault_info.PipelineError, _x.side_rr_fault_info.CameraInitialFailed, _x.side_rr_fault_info.SOCGetFrameError, _x.side_rr_fault_info.CameraSerDesError, _x.side_rr_fault_info.CameraOvertemperature, _x.side_rr_fault_info.ProducerSenderTimeout, _x.side_rr_fault_info.ProducerFrameDrop, _x.side_rr_fault_info.CameraModuleError, _x.side_rr_fault_info.SerError, _x.side_rr_fault_info.DesError, _x.side_rr_fault_info.PipelineError, _x.oms_fault_info.CameraInitialFailed, _x.oms_fault_info.SOCGetFrameError, _x.oms_fault_info.CameraSerDesError, _x.oms_fault_info.CameraOvertemperature, _x.oms_fault_info.ProducerSenderTimeout, _x.oms_fault_info.ProducerFrameDrop, _x.oms_fault_info.CameraModuleError, _x.oms_fault_info.SerError, _x.oms_fault_info.DesError, _x.oms_fault_info.PipelineError, _x.fsync_get_error, _x.publish_ptp_ts,) = _get_struct_131BQ().unpack(str[start:end])
      self.front120_fault_info.CameraInitialFailed = bool(self.front120_fault_info.CameraInitialFailed)
      self.front120_fault_info.SOCGetFrameError = bool(self.front120_fault_info.SOCGetFrameError)
      self.front120_fault_info.CameraSerDesError = bool(self.front120_fault_info.CameraSerDesError)
      self.front120_fault_info.CameraOvertemperature = bool(self.front120_fault_info.CameraOvertemperature)
      self.front120_fault_info.ProducerSenderTimeout = bool(self.front120_fault_info.ProducerSenderTimeout)
      self.front120_fault_info.ProducerFrameDrop = bool(self.front120_fault_info.ProducerFrameDrop)
      self.front120_fault_info.CameraModuleError = bool(self.front120_fault_info.CameraModuleError)
      self.front120_fault_info.SerError = bool(self.front120_fault_info.SerError)
      self.front120_fault_info.DesError = bool(self.front120_fault_info.DesError)
      self.front120_fault_info.PipelineError = bool(self.front120_fault_info.PipelineError)
      self.front30_fault_info.CameraInitialFailed = bool(self.front30_fault_info.CameraInitialFailed)
      self.front30_fault_info.SOCGetFrameError = bool(self.front30_fault_info.SOCGetFrameError)
      self.front30_fault_info.CameraSerDesError = bool(self.front30_fault_info.CameraSerDesError)
      self.front30_fault_info.CameraOvertemperature = bool(self.front30_fault_info.CameraOvertemperature)
      self.front30_fault_info.ProducerSenderTimeout = bool(self.front30_fault_info.ProducerSenderTimeout)
      self.front30_fault_info.ProducerFrameDrop = bool(self.front30_fault_info.ProducerFrameDrop)
      self.front30_fault_info.CameraModuleError = bool(self.front30_fault_info.CameraModuleError)
      self.front30_fault_info.SerError = bool(self.front30_fault_info.SerError)
      self.front30_fault_info.DesError = bool(self.front30_fault_info.DesError)
      self.front30_fault_info.PipelineError = bool(self.front30_fault_info.PipelineError)
      self.rear_fault_info.CameraInitialFailed = bool(self.rear_fault_info.CameraInitialFailed)
      self.rear_fault_info.SOCGetFrameError = bool(self.rear_fault_info.SOCGetFrameError)
      self.rear_fault_info.CameraSerDesError = bool(self.rear_fault_info.CameraSerDesError)
      self.rear_fault_info.CameraOvertemperature = bool(self.rear_fault_info.CameraOvertemperature)
      self.rear_fault_info.ProducerSenderTimeout = bool(self.rear_fault_info.ProducerSenderTimeout)
      self.rear_fault_info.ProducerFrameDrop = bool(self.rear_fault_info.ProducerFrameDrop)
      self.rear_fault_info.CameraModuleError = bool(self.rear_fault_info.CameraModuleError)
      self.rear_fault_info.SerError = bool(self.rear_fault_info.SerError)
      self.rear_fault_info.DesError = bool(self.rear_fault_info.DesError)
      self.rear_fault_info.PipelineError = bool(self.rear_fault_info.PipelineError)
      self.dms_fault_info.CameraInitialFailed = bool(self.dms_fault_info.CameraInitialFailed)
      self.dms_fault_info.SOCGetFrameError = bool(self.dms_fault_info.SOCGetFrameError)
      self.dms_fault_info.CameraSerDesError = bool(self.dms_fault_info.CameraSerDesError)
      self.dms_fault_info.CameraOvertemperature = bool(self.dms_fault_info.CameraOvertemperature)
      self.dms_fault_info.ProducerSenderTimeout = bool(self.dms_fault_info.ProducerSenderTimeout)
      self.dms_fault_info.ProducerFrameDrop = bool(self.dms_fault_info.ProducerFrameDrop)
      self.dms_fault_info.CameraModuleError = bool(self.dms_fault_info.CameraModuleError)
      self.dms_fault_info.SerError = bool(self.dms_fault_info.SerError)
      self.dms_fault_info.DesError = bool(self.dms_fault_info.DesError)
      self.dms_fault_info.PipelineError = bool(self.dms_fault_info.PipelineError)
      self.svc_front_fault_info.CameraInitialFailed = bool(self.svc_front_fault_info.CameraInitialFailed)
      self.svc_front_fault_info.SOCGetFrameError = bool(self.svc_front_fault_info.SOCGetFrameError)
      self.svc_front_fault_info.CameraSerDesError = bool(self.svc_front_fault_info.CameraSerDesError)
      self.svc_front_fault_info.CameraOvertemperature = bool(self.svc_front_fault_info.CameraOvertemperature)
      self.svc_front_fault_info.ProducerSenderTimeout = bool(self.svc_front_fault_info.ProducerSenderTimeout)
      self.svc_front_fault_info.ProducerFrameDrop = bool(self.svc_front_fault_info.ProducerFrameDrop)
      self.svc_front_fault_info.CameraModuleError = bool(self.svc_front_fault_info.CameraModuleError)
      self.svc_front_fault_info.SerError = bool(self.svc_front_fault_info.SerError)
      self.svc_front_fault_info.DesError = bool(self.svc_front_fault_info.DesError)
      self.svc_front_fault_info.PipelineError = bool(self.svc_front_fault_info.PipelineError)
      self.svc_rear_fault_info.CameraInitialFailed = bool(self.svc_rear_fault_info.CameraInitialFailed)
      self.svc_rear_fault_info.SOCGetFrameError = bool(self.svc_rear_fault_info.SOCGetFrameError)
      self.svc_rear_fault_info.CameraSerDesError = bool(self.svc_rear_fault_info.CameraSerDesError)
      self.svc_rear_fault_info.CameraOvertemperature = bool(self.svc_rear_fault_info.CameraOvertemperature)
      self.svc_rear_fault_info.ProducerSenderTimeout = bool(self.svc_rear_fault_info.ProducerSenderTimeout)
      self.svc_rear_fault_info.ProducerFrameDrop = bool(self.svc_rear_fault_info.ProducerFrameDrop)
      self.svc_rear_fault_info.CameraModuleError = bool(self.svc_rear_fault_info.CameraModuleError)
      self.svc_rear_fault_info.SerError = bool(self.svc_rear_fault_info.SerError)
      self.svc_rear_fault_info.DesError = bool(self.svc_rear_fault_info.DesError)
      self.svc_rear_fault_info.PipelineError = bool(self.svc_rear_fault_info.PipelineError)
      self.svc_left_fault_info.CameraInitialFailed = bool(self.svc_left_fault_info.CameraInitialFailed)
      self.svc_left_fault_info.SOCGetFrameError = bool(self.svc_left_fault_info.SOCGetFrameError)
      self.svc_left_fault_info.CameraSerDesError = bool(self.svc_left_fault_info.CameraSerDesError)
      self.svc_left_fault_info.CameraOvertemperature = bool(self.svc_left_fault_info.CameraOvertemperature)
      self.svc_left_fault_info.ProducerSenderTimeout = bool(self.svc_left_fault_info.ProducerSenderTimeout)
      self.svc_left_fault_info.ProducerFrameDrop = bool(self.svc_left_fault_info.ProducerFrameDrop)
      self.svc_left_fault_info.CameraModuleError = bool(self.svc_left_fault_info.CameraModuleError)
      self.svc_left_fault_info.SerError = bool(self.svc_left_fault_info.SerError)
      self.svc_left_fault_info.DesError = bool(self.svc_left_fault_info.DesError)
      self.svc_left_fault_info.PipelineError = bool(self.svc_left_fault_info.PipelineError)
      self.svc_right_fault_info.CameraInitialFailed = bool(self.svc_right_fault_info.CameraInitialFailed)
      self.svc_right_fault_info.SOCGetFrameError = bool(self.svc_right_fault_info.SOCGetFrameError)
      self.svc_right_fault_info.CameraSerDesError = bool(self.svc_right_fault_info.CameraSerDesError)
      self.svc_right_fault_info.CameraOvertemperature = bool(self.svc_right_fault_info.CameraOvertemperature)
      self.svc_right_fault_info.ProducerSenderTimeout = bool(self.svc_right_fault_info.ProducerSenderTimeout)
      self.svc_right_fault_info.ProducerFrameDrop = bool(self.svc_right_fault_info.ProducerFrameDrop)
      self.svc_right_fault_info.CameraModuleError = bool(self.svc_right_fault_info.CameraModuleError)
      self.svc_right_fault_info.SerError = bool(self.svc_right_fault_info.SerError)
      self.svc_right_fault_info.DesError = bool(self.svc_right_fault_info.DesError)
      self.svc_right_fault_info.PipelineError = bool(self.svc_right_fault_info.PipelineError)
      self.side_fl_fault_info.CameraInitialFailed = bool(self.side_fl_fault_info.CameraInitialFailed)
      self.side_fl_fault_info.SOCGetFrameError = bool(self.side_fl_fault_info.SOCGetFrameError)
      self.side_fl_fault_info.CameraSerDesError = bool(self.side_fl_fault_info.CameraSerDesError)
      self.side_fl_fault_info.CameraOvertemperature = bool(self.side_fl_fault_info.CameraOvertemperature)
      self.side_fl_fault_info.ProducerSenderTimeout = bool(self.side_fl_fault_info.ProducerSenderTimeout)
      self.side_fl_fault_info.ProducerFrameDrop = bool(self.side_fl_fault_info.ProducerFrameDrop)
      self.side_fl_fault_info.CameraModuleError = bool(self.side_fl_fault_info.CameraModuleError)
      self.side_fl_fault_info.SerError = bool(self.side_fl_fault_info.SerError)
      self.side_fl_fault_info.DesError = bool(self.side_fl_fault_info.DesError)
      self.side_fl_fault_info.PipelineError = bool(self.side_fl_fault_info.PipelineError)
      self.side_fr_fault_info.CameraInitialFailed = bool(self.side_fr_fault_info.CameraInitialFailed)
      self.side_fr_fault_info.SOCGetFrameError = bool(self.side_fr_fault_info.SOCGetFrameError)
      self.side_fr_fault_info.CameraSerDesError = bool(self.side_fr_fault_info.CameraSerDesError)
      self.side_fr_fault_info.CameraOvertemperature = bool(self.side_fr_fault_info.CameraOvertemperature)
      self.side_fr_fault_info.ProducerSenderTimeout = bool(self.side_fr_fault_info.ProducerSenderTimeout)
      self.side_fr_fault_info.ProducerFrameDrop = bool(self.side_fr_fault_info.ProducerFrameDrop)
      self.side_fr_fault_info.CameraModuleError = bool(self.side_fr_fault_info.CameraModuleError)
      self.side_fr_fault_info.SerError = bool(self.side_fr_fault_info.SerError)
      self.side_fr_fault_info.DesError = bool(self.side_fr_fault_info.DesError)
      self.side_fr_fault_info.PipelineError = bool(self.side_fr_fault_info.PipelineError)
      self.side_rl_fault_info.CameraInitialFailed = bool(self.side_rl_fault_info.CameraInitialFailed)
      self.side_rl_fault_info.SOCGetFrameError = bool(self.side_rl_fault_info.SOCGetFrameError)
      self.side_rl_fault_info.CameraSerDesError = bool(self.side_rl_fault_info.CameraSerDesError)
      self.side_rl_fault_info.CameraOvertemperature = bool(self.side_rl_fault_info.CameraOvertemperature)
      self.side_rl_fault_info.ProducerSenderTimeout = bool(self.side_rl_fault_info.ProducerSenderTimeout)
      self.side_rl_fault_info.ProducerFrameDrop = bool(self.side_rl_fault_info.ProducerFrameDrop)
      self.side_rl_fault_info.CameraModuleError = bool(self.side_rl_fault_info.CameraModuleError)
      self.side_rl_fault_info.SerError = bool(self.side_rl_fault_info.SerError)
      self.side_rl_fault_info.DesError = bool(self.side_rl_fault_info.DesError)
      self.side_rl_fault_info.PipelineError = bool(self.side_rl_fault_info.PipelineError)
      self.side_rr_fault_info.CameraInitialFailed = bool(self.side_rr_fault_info.CameraInitialFailed)
      self.side_rr_fault_info.SOCGetFrameError = bool(self.side_rr_fault_info.SOCGetFrameError)
      self.side_rr_fault_info.CameraSerDesError = bool(self.side_rr_fault_info.CameraSerDesError)
      self.side_rr_fault_info.CameraOvertemperature = bool(self.side_rr_fault_info.CameraOvertemperature)
      self.side_rr_fault_info.ProducerSenderTimeout = bool(self.side_rr_fault_info.ProducerSenderTimeout)
      self.side_rr_fault_info.ProducerFrameDrop = bool(self.side_rr_fault_info.ProducerFrameDrop)
      self.side_rr_fault_info.CameraModuleError = bool(self.side_rr_fault_info.CameraModuleError)
      self.side_rr_fault_info.SerError = bool(self.side_rr_fault_info.SerError)
      self.side_rr_fault_info.DesError = bool(self.side_rr_fault_info.DesError)
      self.side_rr_fault_info.PipelineError = bool(self.side_rr_fault_info.PipelineError)
      self.oms_fault_info.CameraInitialFailed = bool(self.oms_fault_info.CameraInitialFailed)
      self.oms_fault_info.SOCGetFrameError = bool(self.oms_fault_info.SOCGetFrameError)
      self.oms_fault_info.CameraSerDesError = bool(self.oms_fault_info.CameraSerDesError)
      self.oms_fault_info.CameraOvertemperature = bool(self.oms_fault_info.CameraOvertemperature)
      self.oms_fault_info.ProducerSenderTimeout = bool(self.oms_fault_info.ProducerSenderTimeout)
      self.oms_fault_info.ProducerFrameDrop = bool(self.oms_fault_info.ProducerFrameDrop)
      self.oms_fault_info.CameraModuleError = bool(self.oms_fault_info.CameraModuleError)
      self.oms_fault_info.SerError = bool(self.oms_fault_info.SerError)
      self.oms_fault_info.DesError = bool(self.oms_fault_info.DesError)
      self.oms_fault_info.PipelineError = bool(self.oms_fault_info.PipelineError)
      self.fsync_get_error = bool(self.fsync_get_error)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_131BQ().pack(_x.front120_fault_info.CameraInitialFailed, _x.front120_fault_info.SOCGetFrameError, _x.front120_fault_info.CameraSerDesError, _x.front120_fault_info.CameraOvertemperature, _x.front120_fault_info.ProducerSenderTimeout, _x.front120_fault_info.ProducerFrameDrop, _x.front120_fault_info.CameraModuleError, _x.front120_fault_info.SerError, _x.front120_fault_info.DesError, _x.front120_fault_info.PipelineError, _x.front30_fault_info.CameraInitialFailed, _x.front30_fault_info.SOCGetFrameError, _x.front30_fault_info.CameraSerDesError, _x.front30_fault_info.CameraOvertemperature, _x.front30_fault_info.ProducerSenderTimeout, _x.front30_fault_info.ProducerFrameDrop, _x.front30_fault_info.CameraModuleError, _x.front30_fault_info.SerError, _x.front30_fault_info.DesError, _x.front30_fault_info.PipelineError, _x.rear_fault_info.CameraInitialFailed, _x.rear_fault_info.SOCGetFrameError, _x.rear_fault_info.CameraSerDesError, _x.rear_fault_info.CameraOvertemperature, _x.rear_fault_info.ProducerSenderTimeout, _x.rear_fault_info.ProducerFrameDrop, _x.rear_fault_info.CameraModuleError, _x.rear_fault_info.SerError, _x.rear_fault_info.DesError, _x.rear_fault_info.PipelineError, _x.dms_fault_info.CameraInitialFailed, _x.dms_fault_info.SOCGetFrameError, _x.dms_fault_info.CameraSerDesError, _x.dms_fault_info.CameraOvertemperature, _x.dms_fault_info.ProducerSenderTimeout, _x.dms_fault_info.ProducerFrameDrop, _x.dms_fault_info.CameraModuleError, _x.dms_fault_info.SerError, _x.dms_fault_info.DesError, _x.dms_fault_info.PipelineError, _x.svc_front_fault_info.CameraInitialFailed, _x.svc_front_fault_info.SOCGetFrameError, _x.svc_front_fault_info.CameraSerDesError, _x.svc_front_fault_info.CameraOvertemperature, _x.svc_front_fault_info.ProducerSenderTimeout, _x.svc_front_fault_info.ProducerFrameDrop, _x.svc_front_fault_info.CameraModuleError, _x.svc_front_fault_info.SerError, _x.svc_front_fault_info.DesError, _x.svc_front_fault_info.PipelineError, _x.svc_rear_fault_info.CameraInitialFailed, _x.svc_rear_fault_info.SOCGetFrameError, _x.svc_rear_fault_info.CameraSerDesError, _x.svc_rear_fault_info.CameraOvertemperature, _x.svc_rear_fault_info.ProducerSenderTimeout, _x.svc_rear_fault_info.ProducerFrameDrop, _x.svc_rear_fault_info.CameraModuleError, _x.svc_rear_fault_info.SerError, _x.svc_rear_fault_info.DesError, _x.svc_rear_fault_info.PipelineError, _x.svc_left_fault_info.CameraInitialFailed, _x.svc_left_fault_info.SOCGetFrameError, _x.svc_left_fault_info.CameraSerDesError, _x.svc_left_fault_info.CameraOvertemperature, _x.svc_left_fault_info.ProducerSenderTimeout, _x.svc_left_fault_info.ProducerFrameDrop, _x.svc_left_fault_info.CameraModuleError, _x.svc_left_fault_info.SerError, _x.svc_left_fault_info.DesError, _x.svc_left_fault_info.PipelineError, _x.svc_right_fault_info.CameraInitialFailed, _x.svc_right_fault_info.SOCGetFrameError, _x.svc_right_fault_info.CameraSerDesError, _x.svc_right_fault_info.CameraOvertemperature, _x.svc_right_fault_info.ProducerSenderTimeout, _x.svc_right_fault_info.ProducerFrameDrop, _x.svc_right_fault_info.CameraModuleError, _x.svc_right_fault_info.SerError, _x.svc_right_fault_info.DesError, _x.svc_right_fault_info.PipelineError, _x.side_fl_fault_info.CameraInitialFailed, _x.side_fl_fault_info.SOCGetFrameError, _x.side_fl_fault_info.CameraSerDesError, _x.side_fl_fault_info.CameraOvertemperature, _x.side_fl_fault_info.ProducerSenderTimeout, _x.side_fl_fault_info.ProducerFrameDrop, _x.side_fl_fault_info.CameraModuleError, _x.side_fl_fault_info.SerError, _x.side_fl_fault_info.DesError, _x.side_fl_fault_info.PipelineError, _x.side_fr_fault_info.CameraInitialFailed, _x.side_fr_fault_info.SOCGetFrameError, _x.side_fr_fault_info.CameraSerDesError, _x.side_fr_fault_info.CameraOvertemperature, _x.side_fr_fault_info.ProducerSenderTimeout, _x.side_fr_fault_info.ProducerFrameDrop, _x.side_fr_fault_info.CameraModuleError, _x.side_fr_fault_info.SerError, _x.side_fr_fault_info.DesError, _x.side_fr_fault_info.PipelineError, _x.side_rl_fault_info.CameraInitialFailed, _x.side_rl_fault_info.SOCGetFrameError, _x.side_rl_fault_info.CameraSerDesError, _x.side_rl_fault_info.CameraOvertemperature, _x.side_rl_fault_info.ProducerSenderTimeout, _x.side_rl_fault_info.ProducerFrameDrop, _x.side_rl_fault_info.CameraModuleError, _x.side_rl_fault_info.SerError, _x.side_rl_fault_info.DesError, _x.side_rl_fault_info.PipelineError, _x.side_rr_fault_info.CameraInitialFailed, _x.side_rr_fault_info.SOCGetFrameError, _x.side_rr_fault_info.CameraSerDesError, _x.side_rr_fault_info.CameraOvertemperature, _x.side_rr_fault_info.ProducerSenderTimeout, _x.side_rr_fault_info.ProducerFrameDrop, _x.side_rr_fault_info.CameraModuleError, _x.side_rr_fault_info.SerError, _x.side_rr_fault_info.DesError, _x.side_rr_fault_info.PipelineError, _x.oms_fault_info.CameraInitialFailed, _x.oms_fault_info.SOCGetFrameError, _x.oms_fault_info.CameraSerDesError, _x.oms_fault_info.CameraOvertemperature, _x.oms_fault_info.ProducerSenderTimeout, _x.oms_fault_info.ProducerFrameDrop, _x.oms_fault_info.CameraModuleError, _x.oms_fault_info.SerError, _x.oms_fault_info.DesError, _x.oms_fault_info.PipelineError, _x.fsync_get_error, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.front120_fault_info is None:
        self.front120_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.front30_fault_info is None:
        self.front30_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.rear_fault_info is None:
        self.rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.dms_fault_info is None:
        self.dms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_front_fault_info is None:
        self.svc_front_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_rear_fault_info is None:
        self.svc_rear_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_left_fault_info is None:
        self.svc_left_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.svc_right_fault_info is None:
        self.svc_right_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_fl_fault_info is None:
        self.side_fl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_fr_fault_info is None:
        self.side_fr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_rl_fault_info is None:
        self.side_rl_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.side_rr_fault_info is None:
        self.side_rr_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      if self.oms_fault_info is None:
        self.oms_fault_info = rospy_message_converter.msg.SOCCameraFaultType()
      end = 0
      _x = self
      start = end
      end += 139
      (_x.front120_fault_info.CameraInitialFailed, _x.front120_fault_info.SOCGetFrameError, _x.front120_fault_info.CameraSerDesError, _x.front120_fault_info.CameraOvertemperature, _x.front120_fault_info.ProducerSenderTimeout, _x.front120_fault_info.ProducerFrameDrop, _x.front120_fault_info.CameraModuleError, _x.front120_fault_info.SerError, _x.front120_fault_info.DesError, _x.front120_fault_info.PipelineError, _x.front30_fault_info.CameraInitialFailed, _x.front30_fault_info.SOCGetFrameError, _x.front30_fault_info.CameraSerDesError, _x.front30_fault_info.CameraOvertemperature, _x.front30_fault_info.ProducerSenderTimeout, _x.front30_fault_info.ProducerFrameDrop, _x.front30_fault_info.CameraModuleError, _x.front30_fault_info.SerError, _x.front30_fault_info.DesError, _x.front30_fault_info.PipelineError, _x.rear_fault_info.CameraInitialFailed, _x.rear_fault_info.SOCGetFrameError, _x.rear_fault_info.CameraSerDesError, _x.rear_fault_info.CameraOvertemperature, _x.rear_fault_info.ProducerSenderTimeout, _x.rear_fault_info.ProducerFrameDrop, _x.rear_fault_info.CameraModuleError, _x.rear_fault_info.SerError, _x.rear_fault_info.DesError, _x.rear_fault_info.PipelineError, _x.dms_fault_info.CameraInitialFailed, _x.dms_fault_info.SOCGetFrameError, _x.dms_fault_info.CameraSerDesError, _x.dms_fault_info.CameraOvertemperature, _x.dms_fault_info.ProducerSenderTimeout, _x.dms_fault_info.ProducerFrameDrop, _x.dms_fault_info.CameraModuleError, _x.dms_fault_info.SerError, _x.dms_fault_info.DesError, _x.dms_fault_info.PipelineError, _x.svc_front_fault_info.CameraInitialFailed, _x.svc_front_fault_info.SOCGetFrameError, _x.svc_front_fault_info.CameraSerDesError, _x.svc_front_fault_info.CameraOvertemperature, _x.svc_front_fault_info.ProducerSenderTimeout, _x.svc_front_fault_info.ProducerFrameDrop, _x.svc_front_fault_info.CameraModuleError, _x.svc_front_fault_info.SerError, _x.svc_front_fault_info.DesError, _x.svc_front_fault_info.PipelineError, _x.svc_rear_fault_info.CameraInitialFailed, _x.svc_rear_fault_info.SOCGetFrameError, _x.svc_rear_fault_info.CameraSerDesError, _x.svc_rear_fault_info.CameraOvertemperature, _x.svc_rear_fault_info.ProducerSenderTimeout, _x.svc_rear_fault_info.ProducerFrameDrop, _x.svc_rear_fault_info.CameraModuleError, _x.svc_rear_fault_info.SerError, _x.svc_rear_fault_info.DesError, _x.svc_rear_fault_info.PipelineError, _x.svc_left_fault_info.CameraInitialFailed, _x.svc_left_fault_info.SOCGetFrameError, _x.svc_left_fault_info.CameraSerDesError, _x.svc_left_fault_info.CameraOvertemperature, _x.svc_left_fault_info.ProducerSenderTimeout, _x.svc_left_fault_info.ProducerFrameDrop, _x.svc_left_fault_info.CameraModuleError, _x.svc_left_fault_info.SerError, _x.svc_left_fault_info.DesError, _x.svc_left_fault_info.PipelineError, _x.svc_right_fault_info.CameraInitialFailed, _x.svc_right_fault_info.SOCGetFrameError, _x.svc_right_fault_info.CameraSerDesError, _x.svc_right_fault_info.CameraOvertemperature, _x.svc_right_fault_info.ProducerSenderTimeout, _x.svc_right_fault_info.ProducerFrameDrop, _x.svc_right_fault_info.CameraModuleError, _x.svc_right_fault_info.SerError, _x.svc_right_fault_info.DesError, _x.svc_right_fault_info.PipelineError, _x.side_fl_fault_info.CameraInitialFailed, _x.side_fl_fault_info.SOCGetFrameError, _x.side_fl_fault_info.CameraSerDesError, _x.side_fl_fault_info.CameraOvertemperature, _x.side_fl_fault_info.ProducerSenderTimeout, _x.side_fl_fault_info.ProducerFrameDrop, _x.side_fl_fault_info.CameraModuleError, _x.side_fl_fault_info.SerError, _x.side_fl_fault_info.DesError, _x.side_fl_fault_info.PipelineError, _x.side_fr_fault_info.CameraInitialFailed, _x.side_fr_fault_info.SOCGetFrameError, _x.side_fr_fault_info.CameraSerDesError, _x.side_fr_fault_info.CameraOvertemperature, _x.side_fr_fault_info.ProducerSenderTimeout, _x.side_fr_fault_info.ProducerFrameDrop, _x.side_fr_fault_info.CameraModuleError, _x.side_fr_fault_info.SerError, _x.side_fr_fault_info.DesError, _x.side_fr_fault_info.PipelineError, _x.side_rl_fault_info.CameraInitialFailed, _x.side_rl_fault_info.SOCGetFrameError, _x.side_rl_fault_info.CameraSerDesError, _x.side_rl_fault_info.CameraOvertemperature, _x.side_rl_fault_info.ProducerSenderTimeout, _x.side_rl_fault_info.ProducerFrameDrop, _x.side_rl_fault_info.CameraModuleError, _x.side_rl_fault_info.SerError, _x.side_rl_fault_info.DesError, _x.side_rl_fault_info.PipelineError, _x.side_rr_fault_info.CameraInitialFailed, _x.side_rr_fault_info.SOCGetFrameError, _x.side_rr_fault_info.CameraSerDesError, _x.side_rr_fault_info.CameraOvertemperature, _x.side_rr_fault_info.ProducerSenderTimeout, _x.side_rr_fault_info.ProducerFrameDrop, _x.side_rr_fault_info.CameraModuleError, _x.side_rr_fault_info.SerError, _x.side_rr_fault_info.DesError, _x.side_rr_fault_info.PipelineError, _x.oms_fault_info.CameraInitialFailed, _x.oms_fault_info.SOCGetFrameError, _x.oms_fault_info.CameraSerDesError, _x.oms_fault_info.CameraOvertemperature, _x.oms_fault_info.ProducerSenderTimeout, _x.oms_fault_info.ProducerFrameDrop, _x.oms_fault_info.CameraModuleError, _x.oms_fault_info.SerError, _x.oms_fault_info.DesError, _x.oms_fault_info.PipelineError, _x.fsync_get_error, _x.publish_ptp_ts,) = _get_struct_131BQ().unpack(str[start:end])
      self.front120_fault_info.CameraInitialFailed = bool(self.front120_fault_info.CameraInitialFailed)
      self.front120_fault_info.SOCGetFrameError = bool(self.front120_fault_info.SOCGetFrameError)
      self.front120_fault_info.CameraSerDesError = bool(self.front120_fault_info.CameraSerDesError)
      self.front120_fault_info.CameraOvertemperature = bool(self.front120_fault_info.CameraOvertemperature)
      self.front120_fault_info.ProducerSenderTimeout = bool(self.front120_fault_info.ProducerSenderTimeout)
      self.front120_fault_info.ProducerFrameDrop = bool(self.front120_fault_info.ProducerFrameDrop)
      self.front120_fault_info.CameraModuleError = bool(self.front120_fault_info.CameraModuleError)
      self.front120_fault_info.SerError = bool(self.front120_fault_info.SerError)
      self.front120_fault_info.DesError = bool(self.front120_fault_info.DesError)
      self.front120_fault_info.PipelineError = bool(self.front120_fault_info.PipelineError)
      self.front30_fault_info.CameraInitialFailed = bool(self.front30_fault_info.CameraInitialFailed)
      self.front30_fault_info.SOCGetFrameError = bool(self.front30_fault_info.SOCGetFrameError)
      self.front30_fault_info.CameraSerDesError = bool(self.front30_fault_info.CameraSerDesError)
      self.front30_fault_info.CameraOvertemperature = bool(self.front30_fault_info.CameraOvertemperature)
      self.front30_fault_info.ProducerSenderTimeout = bool(self.front30_fault_info.ProducerSenderTimeout)
      self.front30_fault_info.ProducerFrameDrop = bool(self.front30_fault_info.ProducerFrameDrop)
      self.front30_fault_info.CameraModuleError = bool(self.front30_fault_info.CameraModuleError)
      self.front30_fault_info.SerError = bool(self.front30_fault_info.SerError)
      self.front30_fault_info.DesError = bool(self.front30_fault_info.DesError)
      self.front30_fault_info.PipelineError = bool(self.front30_fault_info.PipelineError)
      self.rear_fault_info.CameraInitialFailed = bool(self.rear_fault_info.CameraInitialFailed)
      self.rear_fault_info.SOCGetFrameError = bool(self.rear_fault_info.SOCGetFrameError)
      self.rear_fault_info.CameraSerDesError = bool(self.rear_fault_info.CameraSerDesError)
      self.rear_fault_info.CameraOvertemperature = bool(self.rear_fault_info.CameraOvertemperature)
      self.rear_fault_info.ProducerSenderTimeout = bool(self.rear_fault_info.ProducerSenderTimeout)
      self.rear_fault_info.ProducerFrameDrop = bool(self.rear_fault_info.ProducerFrameDrop)
      self.rear_fault_info.CameraModuleError = bool(self.rear_fault_info.CameraModuleError)
      self.rear_fault_info.SerError = bool(self.rear_fault_info.SerError)
      self.rear_fault_info.DesError = bool(self.rear_fault_info.DesError)
      self.rear_fault_info.PipelineError = bool(self.rear_fault_info.PipelineError)
      self.dms_fault_info.CameraInitialFailed = bool(self.dms_fault_info.CameraInitialFailed)
      self.dms_fault_info.SOCGetFrameError = bool(self.dms_fault_info.SOCGetFrameError)
      self.dms_fault_info.CameraSerDesError = bool(self.dms_fault_info.CameraSerDesError)
      self.dms_fault_info.CameraOvertemperature = bool(self.dms_fault_info.CameraOvertemperature)
      self.dms_fault_info.ProducerSenderTimeout = bool(self.dms_fault_info.ProducerSenderTimeout)
      self.dms_fault_info.ProducerFrameDrop = bool(self.dms_fault_info.ProducerFrameDrop)
      self.dms_fault_info.CameraModuleError = bool(self.dms_fault_info.CameraModuleError)
      self.dms_fault_info.SerError = bool(self.dms_fault_info.SerError)
      self.dms_fault_info.DesError = bool(self.dms_fault_info.DesError)
      self.dms_fault_info.PipelineError = bool(self.dms_fault_info.PipelineError)
      self.svc_front_fault_info.CameraInitialFailed = bool(self.svc_front_fault_info.CameraInitialFailed)
      self.svc_front_fault_info.SOCGetFrameError = bool(self.svc_front_fault_info.SOCGetFrameError)
      self.svc_front_fault_info.CameraSerDesError = bool(self.svc_front_fault_info.CameraSerDesError)
      self.svc_front_fault_info.CameraOvertemperature = bool(self.svc_front_fault_info.CameraOvertemperature)
      self.svc_front_fault_info.ProducerSenderTimeout = bool(self.svc_front_fault_info.ProducerSenderTimeout)
      self.svc_front_fault_info.ProducerFrameDrop = bool(self.svc_front_fault_info.ProducerFrameDrop)
      self.svc_front_fault_info.CameraModuleError = bool(self.svc_front_fault_info.CameraModuleError)
      self.svc_front_fault_info.SerError = bool(self.svc_front_fault_info.SerError)
      self.svc_front_fault_info.DesError = bool(self.svc_front_fault_info.DesError)
      self.svc_front_fault_info.PipelineError = bool(self.svc_front_fault_info.PipelineError)
      self.svc_rear_fault_info.CameraInitialFailed = bool(self.svc_rear_fault_info.CameraInitialFailed)
      self.svc_rear_fault_info.SOCGetFrameError = bool(self.svc_rear_fault_info.SOCGetFrameError)
      self.svc_rear_fault_info.CameraSerDesError = bool(self.svc_rear_fault_info.CameraSerDesError)
      self.svc_rear_fault_info.CameraOvertemperature = bool(self.svc_rear_fault_info.CameraOvertemperature)
      self.svc_rear_fault_info.ProducerSenderTimeout = bool(self.svc_rear_fault_info.ProducerSenderTimeout)
      self.svc_rear_fault_info.ProducerFrameDrop = bool(self.svc_rear_fault_info.ProducerFrameDrop)
      self.svc_rear_fault_info.CameraModuleError = bool(self.svc_rear_fault_info.CameraModuleError)
      self.svc_rear_fault_info.SerError = bool(self.svc_rear_fault_info.SerError)
      self.svc_rear_fault_info.DesError = bool(self.svc_rear_fault_info.DesError)
      self.svc_rear_fault_info.PipelineError = bool(self.svc_rear_fault_info.PipelineError)
      self.svc_left_fault_info.CameraInitialFailed = bool(self.svc_left_fault_info.CameraInitialFailed)
      self.svc_left_fault_info.SOCGetFrameError = bool(self.svc_left_fault_info.SOCGetFrameError)
      self.svc_left_fault_info.CameraSerDesError = bool(self.svc_left_fault_info.CameraSerDesError)
      self.svc_left_fault_info.CameraOvertemperature = bool(self.svc_left_fault_info.CameraOvertemperature)
      self.svc_left_fault_info.ProducerSenderTimeout = bool(self.svc_left_fault_info.ProducerSenderTimeout)
      self.svc_left_fault_info.ProducerFrameDrop = bool(self.svc_left_fault_info.ProducerFrameDrop)
      self.svc_left_fault_info.CameraModuleError = bool(self.svc_left_fault_info.CameraModuleError)
      self.svc_left_fault_info.SerError = bool(self.svc_left_fault_info.SerError)
      self.svc_left_fault_info.DesError = bool(self.svc_left_fault_info.DesError)
      self.svc_left_fault_info.PipelineError = bool(self.svc_left_fault_info.PipelineError)
      self.svc_right_fault_info.CameraInitialFailed = bool(self.svc_right_fault_info.CameraInitialFailed)
      self.svc_right_fault_info.SOCGetFrameError = bool(self.svc_right_fault_info.SOCGetFrameError)
      self.svc_right_fault_info.CameraSerDesError = bool(self.svc_right_fault_info.CameraSerDesError)
      self.svc_right_fault_info.CameraOvertemperature = bool(self.svc_right_fault_info.CameraOvertemperature)
      self.svc_right_fault_info.ProducerSenderTimeout = bool(self.svc_right_fault_info.ProducerSenderTimeout)
      self.svc_right_fault_info.ProducerFrameDrop = bool(self.svc_right_fault_info.ProducerFrameDrop)
      self.svc_right_fault_info.CameraModuleError = bool(self.svc_right_fault_info.CameraModuleError)
      self.svc_right_fault_info.SerError = bool(self.svc_right_fault_info.SerError)
      self.svc_right_fault_info.DesError = bool(self.svc_right_fault_info.DesError)
      self.svc_right_fault_info.PipelineError = bool(self.svc_right_fault_info.PipelineError)
      self.side_fl_fault_info.CameraInitialFailed = bool(self.side_fl_fault_info.CameraInitialFailed)
      self.side_fl_fault_info.SOCGetFrameError = bool(self.side_fl_fault_info.SOCGetFrameError)
      self.side_fl_fault_info.CameraSerDesError = bool(self.side_fl_fault_info.CameraSerDesError)
      self.side_fl_fault_info.CameraOvertemperature = bool(self.side_fl_fault_info.CameraOvertemperature)
      self.side_fl_fault_info.ProducerSenderTimeout = bool(self.side_fl_fault_info.ProducerSenderTimeout)
      self.side_fl_fault_info.ProducerFrameDrop = bool(self.side_fl_fault_info.ProducerFrameDrop)
      self.side_fl_fault_info.CameraModuleError = bool(self.side_fl_fault_info.CameraModuleError)
      self.side_fl_fault_info.SerError = bool(self.side_fl_fault_info.SerError)
      self.side_fl_fault_info.DesError = bool(self.side_fl_fault_info.DesError)
      self.side_fl_fault_info.PipelineError = bool(self.side_fl_fault_info.PipelineError)
      self.side_fr_fault_info.CameraInitialFailed = bool(self.side_fr_fault_info.CameraInitialFailed)
      self.side_fr_fault_info.SOCGetFrameError = bool(self.side_fr_fault_info.SOCGetFrameError)
      self.side_fr_fault_info.CameraSerDesError = bool(self.side_fr_fault_info.CameraSerDesError)
      self.side_fr_fault_info.CameraOvertemperature = bool(self.side_fr_fault_info.CameraOvertemperature)
      self.side_fr_fault_info.ProducerSenderTimeout = bool(self.side_fr_fault_info.ProducerSenderTimeout)
      self.side_fr_fault_info.ProducerFrameDrop = bool(self.side_fr_fault_info.ProducerFrameDrop)
      self.side_fr_fault_info.CameraModuleError = bool(self.side_fr_fault_info.CameraModuleError)
      self.side_fr_fault_info.SerError = bool(self.side_fr_fault_info.SerError)
      self.side_fr_fault_info.DesError = bool(self.side_fr_fault_info.DesError)
      self.side_fr_fault_info.PipelineError = bool(self.side_fr_fault_info.PipelineError)
      self.side_rl_fault_info.CameraInitialFailed = bool(self.side_rl_fault_info.CameraInitialFailed)
      self.side_rl_fault_info.SOCGetFrameError = bool(self.side_rl_fault_info.SOCGetFrameError)
      self.side_rl_fault_info.CameraSerDesError = bool(self.side_rl_fault_info.CameraSerDesError)
      self.side_rl_fault_info.CameraOvertemperature = bool(self.side_rl_fault_info.CameraOvertemperature)
      self.side_rl_fault_info.ProducerSenderTimeout = bool(self.side_rl_fault_info.ProducerSenderTimeout)
      self.side_rl_fault_info.ProducerFrameDrop = bool(self.side_rl_fault_info.ProducerFrameDrop)
      self.side_rl_fault_info.CameraModuleError = bool(self.side_rl_fault_info.CameraModuleError)
      self.side_rl_fault_info.SerError = bool(self.side_rl_fault_info.SerError)
      self.side_rl_fault_info.DesError = bool(self.side_rl_fault_info.DesError)
      self.side_rl_fault_info.PipelineError = bool(self.side_rl_fault_info.PipelineError)
      self.side_rr_fault_info.CameraInitialFailed = bool(self.side_rr_fault_info.CameraInitialFailed)
      self.side_rr_fault_info.SOCGetFrameError = bool(self.side_rr_fault_info.SOCGetFrameError)
      self.side_rr_fault_info.CameraSerDesError = bool(self.side_rr_fault_info.CameraSerDesError)
      self.side_rr_fault_info.CameraOvertemperature = bool(self.side_rr_fault_info.CameraOvertemperature)
      self.side_rr_fault_info.ProducerSenderTimeout = bool(self.side_rr_fault_info.ProducerSenderTimeout)
      self.side_rr_fault_info.ProducerFrameDrop = bool(self.side_rr_fault_info.ProducerFrameDrop)
      self.side_rr_fault_info.CameraModuleError = bool(self.side_rr_fault_info.CameraModuleError)
      self.side_rr_fault_info.SerError = bool(self.side_rr_fault_info.SerError)
      self.side_rr_fault_info.DesError = bool(self.side_rr_fault_info.DesError)
      self.side_rr_fault_info.PipelineError = bool(self.side_rr_fault_info.PipelineError)
      self.oms_fault_info.CameraInitialFailed = bool(self.oms_fault_info.CameraInitialFailed)
      self.oms_fault_info.SOCGetFrameError = bool(self.oms_fault_info.SOCGetFrameError)
      self.oms_fault_info.CameraSerDesError = bool(self.oms_fault_info.CameraSerDesError)
      self.oms_fault_info.CameraOvertemperature = bool(self.oms_fault_info.CameraOvertemperature)
      self.oms_fault_info.ProducerSenderTimeout = bool(self.oms_fault_info.ProducerSenderTimeout)
      self.oms_fault_info.ProducerFrameDrop = bool(self.oms_fault_info.ProducerFrameDrop)
      self.oms_fault_info.CameraModuleError = bool(self.oms_fault_info.CameraModuleError)
      self.oms_fault_info.SerError = bool(self.oms_fault_info.SerError)
      self.oms_fault_info.DesError = bool(self.oms_fault_info.DesError)
      self.oms_fault_info.PipelineError = bool(self.oms_fault_info.PipelineError)
      self.fsync_get_error = bool(self.fsync_get_error)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_131BQ = None
def _get_struct_131BQ():
    global _struct_131BQ
    if _struct_131BQ is None:
        _struct_131BQ = struct.Struct("<131BQ")
    return _struct_131BQ
_struct_2Q = None
def _get_struct_2Q():
    global _struct_2Q
    if _struct_2Q is None:
        _struct_2Q = struct.Struct("<2Q")
    return _struct_2Q
