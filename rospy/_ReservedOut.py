# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/ReservedOut.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class ReservedOut(genpy.Message):
  _md5sum = "bf995cebc551250ab174c18c5dc0d0d2"
  _type = "rospy_message_converter/ReservedOut"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """float64 aeb_reserved_1
float64 aeb_reserved_2
float64 aeb_reserved_3
float64 aeb_reserved_4
float64 aeb_reserved_5
float64 aeb_reserved_6
float64 aeb_reserved_7
float64 aeb_reserved_8
float64 aeb_reserved_9
float64 aeb_reserved_10
float64 aeb_reserved_11
float64 aeb_reserved_12
float64 aeb_reserved_13
float64 aeb_reserved_14
float64 aeb_reserved_15
float64 aeb_reserved_16
float64 aeb_reserved_17
float64 aeb_reserved_18
float64 aeb_reserved_19
float64 aeb_reserved_20
float64 aeb_reserved_21
float64 aeb_reserved_22
float64 aeb_reserved_23
float64 aeb_reserved_24
float64 aeb_reserved_25
float64 aeb_reserved_26
float64 aeb_reserved_27
float64 aeb_reserved_28
float64 aeb_reserved_29
float64 aeb_reserved_30
float64 aeb_reserved_31
float64 aeb_reserved_32
float64 aeb_reserved_33
float64 aeb_reserved_34
float64 aeb_reserved_35
float64 aeb_reserved_36
float64 aeb_reserved_37
float64 aeb_reserved_38
float64 aeb_reserved_39
float64 aeb_reserved_40
float64 aeb_reserved_41
float64 aeb_reserved_42
float64 aeb_reserved_43
float64 aeb_reserved_44
float64 aeb_reserved_45
float64 aeb_reserved_46
float64 aeb_reserved_47
float64 aeb_reserved_48
float64 aeb_reserved_49
float64 aeb_reserved_50
float64 aeb_reserved_51
float64 aeb_reserved_52
float64 aeb_reserved_53
float64 aeb_reserved_54
float64 aeb_reserved_55
float64 aeb_reserved_56
float64 aeb_reserved_57
float64 aeb_reserved_58
float64 aeb_reserved_59
float64 aeb_reserved_60
float64 aeb_reserved_61
float64 aeb_reserved_62
float64 aeb_reserved_63
float64 aeb_reserved_64
float64 aeb_reserved_65
float64 aeb_reserved_66
float64 aeb_reserved_67
float64 aeb_reserved_68
float64 aeb_reserved_69
float64 aeb_reserved_70
float64 aeb_reserved_71
float64 aeb_reserved_72
float64 aeb_reserved_73
float64 aeb_reserved_74
float64 aeb_reserved_75
float64 aeb_reserved_76
float64 aeb_reserved_77
float64 aeb_reserved_78
float64 aeb_reserved_79
float64 aeb_reserved_80
float64 aeb_reserved_81
float64 aeb_reserved_82
float64 aeb_reserved_83
float64 aeb_reserved_84
float64 aeb_reserved_85
float64 aeb_reserved_86
float64 aeb_reserved_87
float64 aeb_reserved_88
float64 aeb_reserved_89
float64 aeb_reserved_90
float64 aeb_reserved_91
float64 aeb_reserved_92
float64 aeb_reserved_93
float64 aeb_reserved_94
float64 aeb_reserved_95
float64 aeb_reserved_96
float64 aeb_reserved_97
float64 aeb_reserved_98
float64 aeb_reserved_99
float64 aeb_reserved_100
"""
  __slots__ = ['aeb_reserved_1','aeb_reserved_2','aeb_reserved_3','aeb_reserved_4','aeb_reserved_5','aeb_reserved_6','aeb_reserved_7','aeb_reserved_8','aeb_reserved_9','aeb_reserved_10','aeb_reserved_11','aeb_reserved_12','aeb_reserved_13','aeb_reserved_14','aeb_reserved_15','aeb_reserved_16','aeb_reserved_17','aeb_reserved_18','aeb_reserved_19','aeb_reserved_20','aeb_reserved_21','aeb_reserved_22','aeb_reserved_23','aeb_reserved_24','aeb_reserved_25','aeb_reserved_26','aeb_reserved_27','aeb_reserved_28','aeb_reserved_29','aeb_reserved_30','aeb_reserved_31','aeb_reserved_32','aeb_reserved_33','aeb_reserved_34','aeb_reserved_35','aeb_reserved_36','aeb_reserved_37','aeb_reserved_38','aeb_reserved_39','aeb_reserved_40','aeb_reserved_41','aeb_reserved_42','aeb_reserved_43','aeb_reserved_44','aeb_reserved_45','aeb_reserved_46','aeb_reserved_47','aeb_reserved_48','aeb_reserved_49','aeb_reserved_50','aeb_reserved_51','aeb_reserved_52','aeb_reserved_53','aeb_reserved_54','aeb_reserved_55','aeb_reserved_56','aeb_reserved_57','aeb_reserved_58','aeb_reserved_59','aeb_reserved_60','aeb_reserved_61','aeb_reserved_62','aeb_reserved_63','aeb_reserved_64','aeb_reserved_65','aeb_reserved_66','aeb_reserved_67','aeb_reserved_68','aeb_reserved_69','aeb_reserved_70','aeb_reserved_71','aeb_reserved_72','aeb_reserved_73','aeb_reserved_74','aeb_reserved_75','aeb_reserved_76','aeb_reserved_77','aeb_reserved_78','aeb_reserved_79','aeb_reserved_80','aeb_reserved_81','aeb_reserved_82','aeb_reserved_83','aeb_reserved_84','aeb_reserved_85','aeb_reserved_86','aeb_reserved_87','aeb_reserved_88','aeb_reserved_89','aeb_reserved_90','aeb_reserved_91','aeb_reserved_92','aeb_reserved_93','aeb_reserved_94','aeb_reserved_95','aeb_reserved_96','aeb_reserved_97','aeb_reserved_98','aeb_reserved_99','aeb_reserved_100']
  _slot_types = ['float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64','float64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       aeb_reserved_1,aeb_reserved_2,aeb_reserved_3,aeb_reserved_4,aeb_reserved_5,aeb_reserved_6,aeb_reserved_7,aeb_reserved_8,aeb_reserved_9,aeb_reserved_10,aeb_reserved_11,aeb_reserved_12,aeb_reserved_13,aeb_reserved_14,aeb_reserved_15,aeb_reserved_16,aeb_reserved_17,aeb_reserved_18,aeb_reserved_19,aeb_reserved_20,aeb_reserved_21,aeb_reserved_22,aeb_reserved_23,aeb_reserved_24,aeb_reserved_25,aeb_reserved_26,aeb_reserved_27,aeb_reserved_28,aeb_reserved_29,aeb_reserved_30,aeb_reserved_31,aeb_reserved_32,aeb_reserved_33,aeb_reserved_34,aeb_reserved_35,aeb_reserved_36,aeb_reserved_37,aeb_reserved_38,aeb_reserved_39,aeb_reserved_40,aeb_reserved_41,aeb_reserved_42,aeb_reserved_43,aeb_reserved_44,aeb_reserved_45,aeb_reserved_46,aeb_reserved_47,aeb_reserved_48,aeb_reserved_49,aeb_reserved_50,aeb_reserved_51,aeb_reserved_52,aeb_reserved_53,aeb_reserved_54,aeb_reserved_55,aeb_reserved_56,aeb_reserved_57,aeb_reserved_58,aeb_reserved_59,aeb_reserved_60,aeb_reserved_61,aeb_reserved_62,aeb_reserved_63,aeb_reserved_64,aeb_reserved_65,aeb_reserved_66,aeb_reserved_67,aeb_reserved_68,aeb_reserved_69,aeb_reserved_70,aeb_reserved_71,aeb_reserved_72,aeb_reserved_73,aeb_reserved_74,aeb_reserved_75,aeb_reserved_76,aeb_reserved_77,aeb_reserved_78,aeb_reserved_79,aeb_reserved_80,aeb_reserved_81,aeb_reserved_82,aeb_reserved_83,aeb_reserved_84,aeb_reserved_85,aeb_reserved_86,aeb_reserved_87,aeb_reserved_88,aeb_reserved_89,aeb_reserved_90,aeb_reserved_91,aeb_reserved_92,aeb_reserved_93,aeb_reserved_94,aeb_reserved_95,aeb_reserved_96,aeb_reserved_97,aeb_reserved_98,aeb_reserved_99,aeb_reserved_100

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(ReservedOut, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.aeb_reserved_1 is None:
        self.aeb_reserved_1 = 0.
      if self.aeb_reserved_2 is None:
        self.aeb_reserved_2 = 0.
      if self.aeb_reserved_3 is None:
        self.aeb_reserved_3 = 0.
      if self.aeb_reserved_4 is None:
        self.aeb_reserved_4 = 0.
      if self.aeb_reserved_5 is None:
        self.aeb_reserved_5 = 0.
      if self.aeb_reserved_6 is None:
        self.aeb_reserved_6 = 0.
      if self.aeb_reserved_7 is None:
        self.aeb_reserved_7 = 0.
      if self.aeb_reserved_8 is None:
        self.aeb_reserved_8 = 0.
      if self.aeb_reserved_9 is None:
        self.aeb_reserved_9 = 0.
      if self.aeb_reserved_10 is None:
        self.aeb_reserved_10 = 0.
      if self.aeb_reserved_11 is None:
        self.aeb_reserved_11 = 0.
      if self.aeb_reserved_12 is None:
        self.aeb_reserved_12 = 0.
      if self.aeb_reserved_13 is None:
        self.aeb_reserved_13 = 0.
      if self.aeb_reserved_14 is None:
        self.aeb_reserved_14 = 0.
      if self.aeb_reserved_15 is None:
        self.aeb_reserved_15 = 0.
      if self.aeb_reserved_16 is None:
        self.aeb_reserved_16 = 0.
      if self.aeb_reserved_17 is None:
        self.aeb_reserved_17 = 0.
      if self.aeb_reserved_18 is None:
        self.aeb_reserved_18 = 0.
      if self.aeb_reserved_19 is None:
        self.aeb_reserved_19 = 0.
      if self.aeb_reserved_20 is None:
        self.aeb_reserved_20 = 0.
      if self.aeb_reserved_21 is None:
        self.aeb_reserved_21 = 0.
      if self.aeb_reserved_22 is None:
        self.aeb_reserved_22 = 0.
      if self.aeb_reserved_23 is None:
        self.aeb_reserved_23 = 0.
      if self.aeb_reserved_24 is None:
        self.aeb_reserved_24 = 0.
      if self.aeb_reserved_25 is None:
        self.aeb_reserved_25 = 0.
      if self.aeb_reserved_26 is None:
        self.aeb_reserved_26 = 0.
      if self.aeb_reserved_27 is None:
        self.aeb_reserved_27 = 0.
      if self.aeb_reserved_28 is None:
        self.aeb_reserved_28 = 0.
      if self.aeb_reserved_29 is None:
        self.aeb_reserved_29 = 0.
      if self.aeb_reserved_30 is None:
        self.aeb_reserved_30 = 0.
      if self.aeb_reserved_31 is None:
        self.aeb_reserved_31 = 0.
      if self.aeb_reserved_32 is None:
        self.aeb_reserved_32 = 0.
      if self.aeb_reserved_33 is None:
        self.aeb_reserved_33 = 0.
      if self.aeb_reserved_34 is None:
        self.aeb_reserved_34 = 0.
      if self.aeb_reserved_35 is None:
        self.aeb_reserved_35 = 0.
      if self.aeb_reserved_36 is None:
        self.aeb_reserved_36 = 0.
      if self.aeb_reserved_37 is None:
        self.aeb_reserved_37 = 0.
      if self.aeb_reserved_38 is None:
        self.aeb_reserved_38 = 0.
      if self.aeb_reserved_39 is None:
        self.aeb_reserved_39 = 0.
      if self.aeb_reserved_40 is None:
        self.aeb_reserved_40 = 0.
      if self.aeb_reserved_41 is None:
        self.aeb_reserved_41 = 0.
      if self.aeb_reserved_42 is None:
        self.aeb_reserved_42 = 0.
      if self.aeb_reserved_43 is None:
        self.aeb_reserved_43 = 0.
      if self.aeb_reserved_44 is None:
        self.aeb_reserved_44 = 0.
      if self.aeb_reserved_45 is None:
        self.aeb_reserved_45 = 0.
      if self.aeb_reserved_46 is None:
        self.aeb_reserved_46 = 0.
      if self.aeb_reserved_47 is None:
        self.aeb_reserved_47 = 0.
      if self.aeb_reserved_48 is None:
        self.aeb_reserved_48 = 0.
      if self.aeb_reserved_49 is None:
        self.aeb_reserved_49 = 0.
      if self.aeb_reserved_50 is None:
        self.aeb_reserved_50 = 0.
      if self.aeb_reserved_51 is None:
        self.aeb_reserved_51 = 0.
      if self.aeb_reserved_52 is None:
        self.aeb_reserved_52 = 0.
      if self.aeb_reserved_53 is None:
        self.aeb_reserved_53 = 0.
      if self.aeb_reserved_54 is None:
        self.aeb_reserved_54 = 0.
      if self.aeb_reserved_55 is None:
        self.aeb_reserved_55 = 0.
      if self.aeb_reserved_56 is None:
        self.aeb_reserved_56 = 0.
      if self.aeb_reserved_57 is None:
        self.aeb_reserved_57 = 0.
      if self.aeb_reserved_58 is None:
        self.aeb_reserved_58 = 0.
      if self.aeb_reserved_59 is None:
        self.aeb_reserved_59 = 0.
      if self.aeb_reserved_60 is None:
        self.aeb_reserved_60 = 0.
      if self.aeb_reserved_61 is None:
        self.aeb_reserved_61 = 0.
      if self.aeb_reserved_62 is None:
        self.aeb_reserved_62 = 0.
      if self.aeb_reserved_63 is None:
        self.aeb_reserved_63 = 0.
      if self.aeb_reserved_64 is None:
        self.aeb_reserved_64 = 0.
      if self.aeb_reserved_65 is None:
        self.aeb_reserved_65 = 0.
      if self.aeb_reserved_66 is None:
        self.aeb_reserved_66 = 0.
      if self.aeb_reserved_67 is None:
        self.aeb_reserved_67 = 0.
      if self.aeb_reserved_68 is None:
        self.aeb_reserved_68 = 0.
      if self.aeb_reserved_69 is None:
        self.aeb_reserved_69 = 0.
      if self.aeb_reserved_70 is None:
        self.aeb_reserved_70 = 0.
      if self.aeb_reserved_71 is None:
        self.aeb_reserved_71 = 0.
      if self.aeb_reserved_72 is None:
        self.aeb_reserved_72 = 0.
      if self.aeb_reserved_73 is None:
        self.aeb_reserved_73 = 0.
      if self.aeb_reserved_74 is None:
        self.aeb_reserved_74 = 0.
      if self.aeb_reserved_75 is None:
        self.aeb_reserved_75 = 0.
      if self.aeb_reserved_76 is None:
        self.aeb_reserved_76 = 0.
      if self.aeb_reserved_77 is None:
        self.aeb_reserved_77 = 0.
      if self.aeb_reserved_78 is None:
        self.aeb_reserved_78 = 0.
      if self.aeb_reserved_79 is None:
        self.aeb_reserved_79 = 0.
      if self.aeb_reserved_80 is None:
        self.aeb_reserved_80 = 0.
      if self.aeb_reserved_81 is None:
        self.aeb_reserved_81 = 0.
      if self.aeb_reserved_82 is None:
        self.aeb_reserved_82 = 0.
      if self.aeb_reserved_83 is None:
        self.aeb_reserved_83 = 0.
      if self.aeb_reserved_84 is None:
        self.aeb_reserved_84 = 0.
      if self.aeb_reserved_85 is None:
        self.aeb_reserved_85 = 0.
      if self.aeb_reserved_86 is None:
        self.aeb_reserved_86 = 0.
      if self.aeb_reserved_87 is None:
        self.aeb_reserved_87 = 0.
      if self.aeb_reserved_88 is None:
        self.aeb_reserved_88 = 0.
      if self.aeb_reserved_89 is None:
        self.aeb_reserved_89 = 0.
      if self.aeb_reserved_90 is None:
        self.aeb_reserved_90 = 0.
      if self.aeb_reserved_91 is None:
        self.aeb_reserved_91 = 0.
      if self.aeb_reserved_92 is None:
        self.aeb_reserved_92 = 0.
      if self.aeb_reserved_93 is None:
        self.aeb_reserved_93 = 0.
      if self.aeb_reserved_94 is None:
        self.aeb_reserved_94 = 0.
      if self.aeb_reserved_95 is None:
        self.aeb_reserved_95 = 0.
      if self.aeb_reserved_96 is None:
        self.aeb_reserved_96 = 0.
      if self.aeb_reserved_97 is None:
        self.aeb_reserved_97 = 0.
      if self.aeb_reserved_98 is None:
        self.aeb_reserved_98 = 0.
      if self.aeb_reserved_99 is None:
        self.aeb_reserved_99 = 0.
      if self.aeb_reserved_100 is None:
        self.aeb_reserved_100 = 0.
    else:
      self.aeb_reserved_1 = 0.
      self.aeb_reserved_2 = 0.
      self.aeb_reserved_3 = 0.
      self.aeb_reserved_4 = 0.
      self.aeb_reserved_5 = 0.
      self.aeb_reserved_6 = 0.
      self.aeb_reserved_7 = 0.
      self.aeb_reserved_8 = 0.
      self.aeb_reserved_9 = 0.
      self.aeb_reserved_10 = 0.
      self.aeb_reserved_11 = 0.
      self.aeb_reserved_12 = 0.
      self.aeb_reserved_13 = 0.
      self.aeb_reserved_14 = 0.
      self.aeb_reserved_15 = 0.
      self.aeb_reserved_16 = 0.
      self.aeb_reserved_17 = 0.
      self.aeb_reserved_18 = 0.
      self.aeb_reserved_19 = 0.
      self.aeb_reserved_20 = 0.
      self.aeb_reserved_21 = 0.
      self.aeb_reserved_22 = 0.
      self.aeb_reserved_23 = 0.
      self.aeb_reserved_24 = 0.
      self.aeb_reserved_25 = 0.
      self.aeb_reserved_26 = 0.
      self.aeb_reserved_27 = 0.
      self.aeb_reserved_28 = 0.
      self.aeb_reserved_29 = 0.
      self.aeb_reserved_30 = 0.
      self.aeb_reserved_31 = 0.
      self.aeb_reserved_32 = 0.
      self.aeb_reserved_33 = 0.
      self.aeb_reserved_34 = 0.
      self.aeb_reserved_35 = 0.
      self.aeb_reserved_36 = 0.
      self.aeb_reserved_37 = 0.
      self.aeb_reserved_38 = 0.
      self.aeb_reserved_39 = 0.
      self.aeb_reserved_40 = 0.
      self.aeb_reserved_41 = 0.
      self.aeb_reserved_42 = 0.
      self.aeb_reserved_43 = 0.
      self.aeb_reserved_44 = 0.
      self.aeb_reserved_45 = 0.
      self.aeb_reserved_46 = 0.
      self.aeb_reserved_47 = 0.
      self.aeb_reserved_48 = 0.
      self.aeb_reserved_49 = 0.
      self.aeb_reserved_50 = 0.
      self.aeb_reserved_51 = 0.
      self.aeb_reserved_52 = 0.
      self.aeb_reserved_53 = 0.
      self.aeb_reserved_54 = 0.
      self.aeb_reserved_55 = 0.
      self.aeb_reserved_56 = 0.
      self.aeb_reserved_57 = 0.
      self.aeb_reserved_58 = 0.
      self.aeb_reserved_59 = 0.
      self.aeb_reserved_60 = 0.
      self.aeb_reserved_61 = 0.
      self.aeb_reserved_62 = 0.
      self.aeb_reserved_63 = 0.
      self.aeb_reserved_64 = 0.
      self.aeb_reserved_65 = 0.
      self.aeb_reserved_66 = 0.
      self.aeb_reserved_67 = 0.
      self.aeb_reserved_68 = 0.
      self.aeb_reserved_69 = 0.
      self.aeb_reserved_70 = 0.
      self.aeb_reserved_71 = 0.
      self.aeb_reserved_72 = 0.
      self.aeb_reserved_73 = 0.
      self.aeb_reserved_74 = 0.
      self.aeb_reserved_75 = 0.
      self.aeb_reserved_76 = 0.
      self.aeb_reserved_77 = 0.
      self.aeb_reserved_78 = 0.
      self.aeb_reserved_79 = 0.
      self.aeb_reserved_80 = 0.
      self.aeb_reserved_81 = 0.
      self.aeb_reserved_82 = 0.
      self.aeb_reserved_83 = 0.
      self.aeb_reserved_84 = 0.
      self.aeb_reserved_85 = 0.
      self.aeb_reserved_86 = 0.
      self.aeb_reserved_87 = 0.
      self.aeb_reserved_88 = 0.
      self.aeb_reserved_89 = 0.
      self.aeb_reserved_90 = 0.
      self.aeb_reserved_91 = 0.
      self.aeb_reserved_92 = 0.
      self.aeb_reserved_93 = 0.
      self.aeb_reserved_94 = 0.
      self.aeb_reserved_95 = 0.
      self.aeb_reserved_96 = 0.
      self.aeb_reserved_97 = 0.
      self.aeb_reserved_98 = 0.
      self.aeb_reserved_99 = 0.
      self.aeb_reserved_100 = 0.

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_100d().pack(_x.aeb_reserved_1, _x.aeb_reserved_2, _x.aeb_reserved_3, _x.aeb_reserved_4, _x.aeb_reserved_5, _x.aeb_reserved_6, _x.aeb_reserved_7, _x.aeb_reserved_8, _x.aeb_reserved_9, _x.aeb_reserved_10, _x.aeb_reserved_11, _x.aeb_reserved_12, _x.aeb_reserved_13, _x.aeb_reserved_14, _x.aeb_reserved_15, _x.aeb_reserved_16, _x.aeb_reserved_17, _x.aeb_reserved_18, _x.aeb_reserved_19, _x.aeb_reserved_20, _x.aeb_reserved_21, _x.aeb_reserved_22, _x.aeb_reserved_23, _x.aeb_reserved_24, _x.aeb_reserved_25, _x.aeb_reserved_26, _x.aeb_reserved_27, _x.aeb_reserved_28, _x.aeb_reserved_29, _x.aeb_reserved_30, _x.aeb_reserved_31, _x.aeb_reserved_32, _x.aeb_reserved_33, _x.aeb_reserved_34, _x.aeb_reserved_35, _x.aeb_reserved_36, _x.aeb_reserved_37, _x.aeb_reserved_38, _x.aeb_reserved_39, _x.aeb_reserved_40, _x.aeb_reserved_41, _x.aeb_reserved_42, _x.aeb_reserved_43, _x.aeb_reserved_44, _x.aeb_reserved_45, _x.aeb_reserved_46, _x.aeb_reserved_47, _x.aeb_reserved_48, _x.aeb_reserved_49, _x.aeb_reserved_50, _x.aeb_reserved_51, _x.aeb_reserved_52, _x.aeb_reserved_53, _x.aeb_reserved_54, _x.aeb_reserved_55, _x.aeb_reserved_56, _x.aeb_reserved_57, _x.aeb_reserved_58, _x.aeb_reserved_59, _x.aeb_reserved_60, _x.aeb_reserved_61, _x.aeb_reserved_62, _x.aeb_reserved_63, _x.aeb_reserved_64, _x.aeb_reserved_65, _x.aeb_reserved_66, _x.aeb_reserved_67, _x.aeb_reserved_68, _x.aeb_reserved_69, _x.aeb_reserved_70, _x.aeb_reserved_71, _x.aeb_reserved_72, _x.aeb_reserved_73, _x.aeb_reserved_74, _x.aeb_reserved_75, _x.aeb_reserved_76, _x.aeb_reserved_77, _x.aeb_reserved_78, _x.aeb_reserved_79, _x.aeb_reserved_80, _x.aeb_reserved_81, _x.aeb_reserved_82, _x.aeb_reserved_83, _x.aeb_reserved_84, _x.aeb_reserved_85, _x.aeb_reserved_86, _x.aeb_reserved_87, _x.aeb_reserved_88, _x.aeb_reserved_89, _x.aeb_reserved_90, _x.aeb_reserved_91, _x.aeb_reserved_92, _x.aeb_reserved_93, _x.aeb_reserved_94, _x.aeb_reserved_95, _x.aeb_reserved_96, _x.aeb_reserved_97, _x.aeb_reserved_98, _x.aeb_reserved_99, _x.aeb_reserved_100))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 800
      (_x.aeb_reserved_1, _x.aeb_reserved_2, _x.aeb_reserved_3, _x.aeb_reserved_4, _x.aeb_reserved_5, _x.aeb_reserved_6, _x.aeb_reserved_7, _x.aeb_reserved_8, _x.aeb_reserved_9, _x.aeb_reserved_10, _x.aeb_reserved_11, _x.aeb_reserved_12, _x.aeb_reserved_13, _x.aeb_reserved_14, _x.aeb_reserved_15, _x.aeb_reserved_16, _x.aeb_reserved_17, _x.aeb_reserved_18, _x.aeb_reserved_19, _x.aeb_reserved_20, _x.aeb_reserved_21, _x.aeb_reserved_22, _x.aeb_reserved_23, _x.aeb_reserved_24, _x.aeb_reserved_25, _x.aeb_reserved_26, _x.aeb_reserved_27, _x.aeb_reserved_28, _x.aeb_reserved_29, _x.aeb_reserved_30, _x.aeb_reserved_31, _x.aeb_reserved_32, _x.aeb_reserved_33, _x.aeb_reserved_34, _x.aeb_reserved_35, _x.aeb_reserved_36, _x.aeb_reserved_37, _x.aeb_reserved_38, _x.aeb_reserved_39, _x.aeb_reserved_40, _x.aeb_reserved_41, _x.aeb_reserved_42, _x.aeb_reserved_43, _x.aeb_reserved_44, _x.aeb_reserved_45, _x.aeb_reserved_46, _x.aeb_reserved_47, _x.aeb_reserved_48, _x.aeb_reserved_49, _x.aeb_reserved_50, _x.aeb_reserved_51, _x.aeb_reserved_52, _x.aeb_reserved_53, _x.aeb_reserved_54, _x.aeb_reserved_55, _x.aeb_reserved_56, _x.aeb_reserved_57, _x.aeb_reserved_58, _x.aeb_reserved_59, _x.aeb_reserved_60, _x.aeb_reserved_61, _x.aeb_reserved_62, _x.aeb_reserved_63, _x.aeb_reserved_64, _x.aeb_reserved_65, _x.aeb_reserved_66, _x.aeb_reserved_67, _x.aeb_reserved_68, _x.aeb_reserved_69, _x.aeb_reserved_70, _x.aeb_reserved_71, _x.aeb_reserved_72, _x.aeb_reserved_73, _x.aeb_reserved_74, _x.aeb_reserved_75, _x.aeb_reserved_76, _x.aeb_reserved_77, _x.aeb_reserved_78, _x.aeb_reserved_79, _x.aeb_reserved_80, _x.aeb_reserved_81, _x.aeb_reserved_82, _x.aeb_reserved_83, _x.aeb_reserved_84, _x.aeb_reserved_85, _x.aeb_reserved_86, _x.aeb_reserved_87, _x.aeb_reserved_88, _x.aeb_reserved_89, _x.aeb_reserved_90, _x.aeb_reserved_91, _x.aeb_reserved_92, _x.aeb_reserved_93, _x.aeb_reserved_94, _x.aeb_reserved_95, _x.aeb_reserved_96, _x.aeb_reserved_97, _x.aeb_reserved_98, _x.aeb_reserved_99, _x.aeb_reserved_100,) = _get_struct_100d().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_100d().pack(_x.aeb_reserved_1, _x.aeb_reserved_2, _x.aeb_reserved_3, _x.aeb_reserved_4, _x.aeb_reserved_5, _x.aeb_reserved_6, _x.aeb_reserved_7, _x.aeb_reserved_8, _x.aeb_reserved_9, _x.aeb_reserved_10, _x.aeb_reserved_11, _x.aeb_reserved_12, _x.aeb_reserved_13, _x.aeb_reserved_14, _x.aeb_reserved_15, _x.aeb_reserved_16, _x.aeb_reserved_17, _x.aeb_reserved_18, _x.aeb_reserved_19, _x.aeb_reserved_20, _x.aeb_reserved_21, _x.aeb_reserved_22, _x.aeb_reserved_23, _x.aeb_reserved_24, _x.aeb_reserved_25, _x.aeb_reserved_26, _x.aeb_reserved_27, _x.aeb_reserved_28, _x.aeb_reserved_29, _x.aeb_reserved_30, _x.aeb_reserved_31, _x.aeb_reserved_32, _x.aeb_reserved_33, _x.aeb_reserved_34, _x.aeb_reserved_35, _x.aeb_reserved_36, _x.aeb_reserved_37, _x.aeb_reserved_38, _x.aeb_reserved_39, _x.aeb_reserved_40, _x.aeb_reserved_41, _x.aeb_reserved_42, _x.aeb_reserved_43, _x.aeb_reserved_44, _x.aeb_reserved_45, _x.aeb_reserved_46, _x.aeb_reserved_47, _x.aeb_reserved_48, _x.aeb_reserved_49, _x.aeb_reserved_50, _x.aeb_reserved_51, _x.aeb_reserved_52, _x.aeb_reserved_53, _x.aeb_reserved_54, _x.aeb_reserved_55, _x.aeb_reserved_56, _x.aeb_reserved_57, _x.aeb_reserved_58, _x.aeb_reserved_59, _x.aeb_reserved_60, _x.aeb_reserved_61, _x.aeb_reserved_62, _x.aeb_reserved_63, _x.aeb_reserved_64, _x.aeb_reserved_65, _x.aeb_reserved_66, _x.aeb_reserved_67, _x.aeb_reserved_68, _x.aeb_reserved_69, _x.aeb_reserved_70, _x.aeb_reserved_71, _x.aeb_reserved_72, _x.aeb_reserved_73, _x.aeb_reserved_74, _x.aeb_reserved_75, _x.aeb_reserved_76, _x.aeb_reserved_77, _x.aeb_reserved_78, _x.aeb_reserved_79, _x.aeb_reserved_80, _x.aeb_reserved_81, _x.aeb_reserved_82, _x.aeb_reserved_83, _x.aeb_reserved_84, _x.aeb_reserved_85, _x.aeb_reserved_86, _x.aeb_reserved_87, _x.aeb_reserved_88, _x.aeb_reserved_89, _x.aeb_reserved_90, _x.aeb_reserved_91, _x.aeb_reserved_92, _x.aeb_reserved_93, _x.aeb_reserved_94, _x.aeb_reserved_95, _x.aeb_reserved_96, _x.aeb_reserved_97, _x.aeb_reserved_98, _x.aeb_reserved_99, _x.aeb_reserved_100))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 800
      (_x.aeb_reserved_1, _x.aeb_reserved_2, _x.aeb_reserved_3, _x.aeb_reserved_4, _x.aeb_reserved_5, _x.aeb_reserved_6, _x.aeb_reserved_7, _x.aeb_reserved_8, _x.aeb_reserved_9, _x.aeb_reserved_10, _x.aeb_reserved_11, _x.aeb_reserved_12, _x.aeb_reserved_13, _x.aeb_reserved_14, _x.aeb_reserved_15, _x.aeb_reserved_16, _x.aeb_reserved_17, _x.aeb_reserved_18, _x.aeb_reserved_19, _x.aeb_reserved_20, _x.aeb_reserved_21, _x.aeb_reserved_22, _x.aeb_reserved_23, _x.aeb_reserved_24, _x.aeb_reserved_25, _x.aeb_reserved_26, _x.aeb_reserved_27, _x.aeb_reserved_28, _x.aeb_reserved_29, _x.aeb_reserved_30, _x.aeb_reserved_31, _x.aeb_reserved_32, _x.aeb_reserved_33, _x.aeb_reserved_34, _x.aeb_reserved_35, _x.aeb_reserved_36, _x.aeb_reserved_37, _x.aeb_reserved_38, _x.aeb_reserved_39, _x.aeb_reserved_40, _x.aeb_reserved_41, _x.aeb_reserved_42, _x.aeb_reserved_43, _x.aeb_reserved_44, _x.aeb_reserved_45, _x.aeb_reserved_46, _x.aeb_reserved_47, _x.aeb_reserved_48, _x.aeb_reserved_49, _x.aeb_reserved_50, _x.aeb_reserved_51, _x.aeb_reserved_52, _x.aeb_reserved_53, _x.aeb_reserved_54, _x.aeb_reserved_55, _x.aeb_reserved_56, _x.aeb_reserved_57, _x.aeb_reserved_58, _x.aeb_reserved_59, _x.aeb_reserved_60, _x.aeb_reserved_61, _x.aeb_reserved_62, _x.aeb_reserved_63, _x.aeb_reserved_64, _x.aeb_reserved_65, _x.aeb_reserved_66, _x.aeb_reserved_67, _x.aeb_reserved_68, _x.aeb_reserved_69, _x.aeb_reserved_70, _x.aeb_reserved_71, _x.aeb_reserved_72, _x.aeb_reserved_73, _x.aeb_reserved_74, _x.aeb_reserved_75, _x.aeb_reserved_76, _x.aeb_reserved_77, _x.aeb_reserved_78, _x.aeb_reserved_79, _x.aeb_reserved_80, _x.aeb_reserved_81, _x.aeb_reserved_82, _x.aeb_reserved_83, _x.aeb_reserved_84, _x.aeb_reserved_85, _x.aeb_reserved_86, _x.aeb_reserved_87, _x.aeb_reserved_88, _x.aeb_reserved_89, _x.aeb_reserved_90, _x.aeb_reserved_91, _x.aeb_reserved_92, _x.aeb_reserved_93, _x.aeb_reserved_94, _x.aeb_reserved_95, _x.aeb_reserved_96, _x.aeb_reserved_97, _x.aeb_reserved_98, _x.aeb_reserved_99, _x.aeb_reserved_100,) = _get_struct_100d().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_100d = None
def _get_struct_100d():
    global _struct_100d
    if _struct_100d is None:
        _struct_100d = struct.Struct("<100d")
    return _struct_100d
