# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/PrimaryPowerFaultInfo.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class PrimaryPowerFaultInfo(genpy.Message):
  _md5sum = "96aeec36bb3fb686bf08acafa1f1822c"
  _type = "rospy_message_converter/PrimaryPowerFaultInfo"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """bool BAT_IN1_VSENSE_Overvoltage
bool BAT_IN1_VSENSE_Undervoltage
bool BAT_FIN1_DIO_VSENSE_Overvoltage
bool BAT_FIN1_DIO_VSENSE_Undervoltage
bool P14V_MAIN1_VSENSE_Overvoltage
bool P14V_MAIN1_VSENSE_Undervoltage
bool P5V8_TLF1_VSENSE_Overvoltage
bool P5V8_TLF1_VSENSE_Undervoltage
bool V_PP3V3_CHCAN1_Overvoltage
bool V_PP3V3_CHCAN1_Undervoltage
bool V_PP5V_MAIN1_Overvoltage
bool V_PP5V_MAIN1_Undervoltage
bool V_PP14V_S1_Overvoltage
bool V_PP14V_S1_Undervoltage
bool V_PP5V_S1_Overvoltage
bool V_PP5V_S1_Undervoltage
bool V_PP5V_ANT_L1L5_Overvoltage
bool V_PP5V_ANT_L1L5_Undervoltage
bool V_PP5V_ANT_L1L2_Overvoltage
bool V_PP5V_ANT_L1L2_Undervoltage
bool P3V_GNSS_VSENSE_Overvoltage
bool P3V_GNSS_VSENSE_Undervoltage
bool V_PP14V_S2_Overvoltage
bool V_PP14V_S2_Undervoltage
bool V_PP5V_S2_Overvoltage
bool V_PP5V_S2_Undervoltage
bool V_PP12V_REG1_Overvoltage
bool V_PP12V_REG1_Undervoltage
bool V_PP3V3_MISC1_Overvoltage
bool V_PP3V3_MISC1_Undervoltage
bool V_PP1V05_SPR1_Overvoltage
bool V_PP1V05_SPR1_Undervoltage
bool V_PP1V5_SPR1_Overvoltage
bool V_PP1V5_SPR1_Undervoltage
bool V_PP1V8_MISC1_Overvoltage
bool V_PP1V8_MISC1_Undervoltage
bool V_PP0V9_PHY1_Overvoltage
bool V_PP0V9_PHY1_Undervoltage
bool V_PP1V2_DES1_Overvoltage
bool V_PP1V2_DES1_Undervoltage
bool V_PP1V0_DES1_Overvoltage
bool V_PP1V0_DES1_Undervoltage
bool V_PP0V9_ISP1_Overvoltage
bool V_PP0V9_ISP1_Undervoltage
bool V_PP1V8_DES1_Overvoltage
bool V_PP1V8_DES1_Undervoltage
bool V_PP3V3_TXVPHY1_Overvoltage
bool V_PP3V3_TXVPHY1_Undervoltage
bool V_PP3V3_GNSS_Overvoltage
bool V_PP3V3_GNSS_Undervoltage
bool V_PP3V3_S1_Overvoltage
bool V_PP3V3_S1_Undervoltage
bool V_PP1V8_S1_Overvoltage
bool V_PP1V8_S1_Undervoltage
bool V_PP3V3_S2_Overvoltage
bool V_PP3V3_S2_Undervoltage
bool V_PP1V8_S2_Overvoltage
bool V_PP1V8_S2_Undervoltage
bool V_PP3V3_DP1_Overvoltage
bool V_PP3V3_DP1_Undervoltage
bool V_PP1V8_MCU1_Overvoltage
bool V_PP1V8_MCU1_Undervoltage
bool BAT_IN1_VSENSE_2nd_Overvoltage
bool BAT_IN1_VSENSE_2nd_Undervoltage
bool BAT_FIN1_DIO_VSENSE_2nd_Overvoltage
bool BAT_FIN1_DIO_VSENSE_2nd_Undervoltage
bool P14V_MAIN1_VSENSE_2nd_Overvoltage
bool P14V_MAIN1_VSENSE_2nd_Undervoltage
bool P5V8_TLF1_VSENSE_2nd_Overvoltage
bool P5V8_TLF1_VSENSE_2nd_Undervoltage
bool V_PP5V_MAIN1_2nd_Overvoltage
bool V_PP5V_MAIN1_2nd_Undervoltage
bool V_PP14V_S1_2nd_Overvoltage
bool V_PP14V_S1_2nd_Undervoltage
bool V_PP5V_S1_2nd_Overvoltage
bool V_PP5V_S1_2nd_Undervoltage
bool V_PP3V3_MISC1_2nd_Overvoltage
bool V_PP3V3_MISC1_2nd_Undervoltage
bool V_PP1V8_DES1_2nd_Overvoltage
bool V_PP1V8_DES1_2nd_Undervoltage
bool V_PP3V3_GNSS_2nd_Overvoltage
bool V_PP3V3_GNSS_2nd_Undervoltage
bool BAT_IN21_VSENSE_Overvoltage
bool BAT_IN21_VSENSE_Undervoltage
bool P3V3_MCU21_VSENSE_Overvoltage
bool P3V3_MCU21_VSENSE_Undervoltage
bool V_PP1V2_S1_Overvoltage
bool V_PP1V2_S1_Undervoltage
bool V_PPVCC_UFS1_Overvoltage
bool V_PPVCC_UFS1_Undervoltage
bool V_PP1V2_S2_Overvoltage
bool V_PP1V2_S2_Undervoltage
bool V_PPVCC_UFS2_Overvoltage
bool V_PPVCC_UFS2_Undervoltage
"""
  __slots__ = ['BAT_IN1_VSENSE_Overvoltage','BAT_IN1_VSENSE_Undervoltage','BAT_FIN1_DIO_VSENSE_Overvoltage','BAT_FIN1_DIO_VSENSE_Undervoltage','P14V_MAIN1_VSENSE_Overvoltage','P14V_MAIN1_VSENSE_Undervoltage','P5V8_TLF1_VSENSE_Overvoltage','P5V8_TLF1_VSENSE_Undervoltage','V_PP3V3_CHCAN1_Overvoltage','V_PP3V3_CHCAN1_Undervoltage','V_PP5V_MAIN1_Overvoltage','V_PP5V_MAIN1_Undervoltage','V_PP14V_S1_Overvoltage','V_PP14V_S1_Undervoltage','V_PP5V_S1_Overvoltage','V_PP5V_S1_Undervoltage','V_PP5V_ANT_L1L5_Overvoltage','V_PP5V_ANT_L1L5_Undervoltage','V_PP5V_ANT_L1L2_Overvoltage','V_PP5V_ANT_L1L2_Undervoltage','P3V_GNSS_VSENSE_Overvoltage','P3V_GNSS_VSENSE_Undervoltage','V_PP14V_S2_Overvoltage','V_PP14V_S2_Undervoltage','V_PP5V_S2_Overvoltage','V_PP5V_S2_Undervoltage','V_PP12V_REG1_Overvoltage','V_PP12V_REG1_Undervoltage','V_PP3V3_MISC1_Overvoltage','V_PP3V3_MISC1_Undervoltage','V_PP1V05_SPR1_Overvoltage','V_PP1V05_SPR1_Undervoltage','V_PP1V5_SPR1_Overvoltage','V_PP1V5_SPR1_Undervoltage','V_PP1V8_MISC1_Overvoltage','V_PP1V8_MISC1_Undervoltage','V_PP0V9_PHY1_Overvoltage','V_PP0V9_PHY1_Undervoltage','V_PP1V2_DES1_Overvoltage','V_PP1V2_DES1_Undervoltage','V_PP1V0_DES1_Overvoltage','V_PP1V0_DES1_Undervoltage','V_PP0V9_ISP1_Overvoltage','V_PP0V9_ISP1_Undervoltage','V_PP1V8_DES1_Overvoltage','V_PP1V8_DES1_Undervoltage','V_PP3V3_TXVPHY1_Overvoltage','V_PP3V3_TXVPHY1_Undervoltage','V_PP3V3_GNSS_Overvoltage','V_PP3V3_GNSS_Undervoltage','V_PP3V3_S1_Overvoltage','V_PP3V3_S1_Undervoltage','V_PP1V8_S1_Overvoltage','V_PP1V8_S1_Undervoltage','V_PP3V3_S2_Overvoltage','V_PP3V3_S2_Undervoltage','V_PP1V8_S2_Overvoltage','V_PP1V8_S2_Undervoltage','V_PP3V3_DP1_Overvoltage','V_PP3V3_DP1_Undervoltage','V_PP1V8_MCU1_Overvoltage','V_PP1V8_MCU1_Undervoltage','BAT_IN1_VSENSE_2nd_Overvoltage','BAT_IN1_VSENSE_2nd_Undervoltage','BAT_FIN1_DIO_VSENSE_2nd_Overvoltage','BAT_FIN1_DIO_VSENSE_2nd_Undervoltage','P14V_MAIN1_VSENSE_2nd_Overvoltage','P14V_MAIN1_VSENSE_2nd_Undervoltage','P5V8_TLF1_VSENSE_2nd_Overvoltage','P5V8_TLF1_VSENSE_2nd_Undervoltage','V_PP5V_MAIN1_2nd_Overvoltage','V_PP5V_MAIN1_2nd_Undervoltage','V_PP14V_S1_2nd_Overvoltage','V_PP14V_S1_2nd_Undervoltage','V_PP5V_S1_2nd_Overvoltage','V_PP5V_S1_2nd_Undervoltage','V_PP3V3_MISC1_2nd_Overvoltage','V_PP3V3_MISC1_2nd_Undervoltage','V_PP1V8_DES1_2nd_Overvoltage','V_PP1V8_DES1_2nd_Undervoltage','V_PP3V3_GNSS_2nd_Overvoltage','V_PP3V3_GNSS_2nd_Undervoltage','BAT_IN21_VSENSE_Overvoltage','BAT_IN21_VSENSE_Undervoltage','P3V3_MCU21_VSENSE_Overvoltage','P3V3_MCU21_VSENSE_Undervoltage','V_PP1V2_S1_Overvoltage','V_PP1V2_S1_Undervoltage','V_PPVCC_UFS1_Overvoltage','V_PPVCC_UFS1_Undervoltage','V_PP1V2_S2_Overvoltage','V_PP1V2_S2_Undervoltage','V_PPVCC_UFS2_Overvoltage','V_PPVCC_UFS2_Undervoltage']
  _slot_types = ['bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool','bool']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       BAT_IN1_VSENSE_Overvoltage,BAT_IN1_VSENSE_Undervoltage,BAT_FIN1_DIO_VSENSE_Overvoltage,BAT_FIN1_DIO_VSENSE_Undervoltage,P14V_MAIN1_VSENSE_Overvoltage,P14V_MAIN1_VSENSE_Undervoltage,P5V8_TLF1_VSENSE_Overvoltage,P5V8_TLF1_VSENSE_Undervoltage,V_PP3V3_CHCAN1_Overvoltage,V_PP3V3_CHCAN1_Undervoltage,V_PP5V_MAIN1_Overvoltage,V_PP5V_MAIN1_Undervoltage,V_PP14V_S1_Overvoltage,V_PP14V_S1_Undervoltage,V_PP5V_S1_Overvoltage,V_PP5V_S1_Undervoltage,V_PP5V_ANT_L1L5_Overvoltage,V_PP5V_ANT_L1L5_Undervoltage,V_PP5V_ANT_L1L2_Overvoltage,V_PP5V_ANT_L1L2_Undervoltage,P3V_GNSS_VSENSE_Overvoltage,P3V_GNSS_VSENSE_Undervoltage,V_PP14V_S2_Overvoltage,V_PP14V_S2_Undervoltage,V_PP5V_S2_Overvoltage,V_PP5V_S2_Undervoltage,V_PP12V_REG1_Overvoltage,V_PP12V_REG1_Undervoltage,V_PP3V3_MISC1_Overvoltage,V_PP3V3_MISC1_Undervoltage,V_PP1V05_SPR1_Overvoltage,V_PP1V05_SPR1_Undervoltage,V_PP1V5_SPR1_Overvoltage,V_PP1V5_SPR1_Undervoltage,V_PP1V8_MISC1_Overvoltage,V_PP1V8_MISC1_Undervoltage,V_PP0V9_PHY1_Overvoltage,V_PP0V9_PHY1_Undervoltage,V_PP1V2_DES1_Overvoltage,V_PP1V2_DES1_Undervoltage,V_PP1V0_DES1_Overvoltage,V_PP1V0_DES1_Undervoltage,V_PP0V9_ISP1_Overvoltage,V_PP0V9_ISP1_Undervoltage,V_PP1V8_DES1_Overvoltage,V_PP1V8_DES1_Undervoltage,V_PP3V3_TXVPHY1_Overvoltage,V_PP3V3_TXVPHY1_Undervoltage,V_PP3V3_GNSS_Overvoltage,V_PP3V3_GNSS_Undervoltage,V_PP3V3_S1_Overvoltage,V_PP3V3_S1_Undervoltage,V_PP1V8_S1_Overvoltage,V_PP1V8_S1_Undervoltage,V_PP3V3_S2_Overvoltage,V_PP3V3_S2_Undervoltage,V_PP1V8_S2_Overvoltage,V_PP1V8_S2_Undervoltage,V_PP3V3_DP1_Overvoltage,V_PP3V3_DP1_Undervoltage,V_PP1V8_MCU1_Overvoltage,V_PP1V8_MCU1_Undervoltage,BAT_IN1_VSENSE_2nd_Overvoltage,BAT_IN1_VSENSE_2nd_Undervoltage,BAT_FIN1_DIO_VSENSE_2nd_Overvoltage,BAT_FIN1_DIO_VSENSE_2nd_Undervoltage,P14V_MAIN1_VSENSE_2nd_Overvoltage,P14V_MAIN1_VSENSE_2nd_Undervoltage,P5V8_TLF1_VSENSE_2nd_Overvoltage,P5V8_TLF1_VSENSE_2nd_Undervoltage,V_PP5V_MAIN1_2nd_Overvoltage,V_PP5V_MAIN1_2nd_Undervoltage,V_PP14V_S1_2nd_Overvoltage,V_PP14V_S1_2nd_Undervoltage,V_PP5V_S1_2nd_Overvoltage,V_PP5V_S1_2nd_Undervoltage,V_PP3V3_MISC1_2nd_Overvoltage,V_PP3V3_MISC1_2nd_Undervoltage,V_PP1V8_DES1_2nd_Overvoltage,V_PP1V8_DES1_2nd_Undervoltage,V_PP3V3_GNSS_2nd_Overvoltage,V_PP3V3_GNSS_2nd_Undervoltage,BAT_IN21_VSENSE_Overvoltage,BAT_IN21_VSENSE_Undervoltage,P3V3_MCU21_VSENSE_Overvoltage,P3V3_MCU21_VSENSE_Undervoltage,V_PP1V2_S1_Overvoltage,V_PP1V2_S1_Undervoltage,V_PPVCC_UFS1_Overvoltage,V_PPVCC_UFS1_Undervoltage,V_PP1V2_S2_Overvoltage,V_PP1V2_S2_Undervoltage,V_PPVCC_UFS2_Overvoltage,V_PPVCC_UFS2_Undervoltage

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(PrimaryPowerFaultInfo, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.BAT_IN1_VSENSE_Overvoltage is None:
        self.BAT_IN1_VSENSE_Overvoltage = False
      if self.BAT_IN1_VSENSE_Undervoltage is None:
        self.BAT_IN1_VSENSE_Undervoltage = False
      if self.BAT_FIN1_DIO_VSENSE_Overvoltage is None:
        self.BAT_FIN1_DIO_VSENSE_Overvoltage = False
      if self.BAT_FIN1_DIO_VSENSE_Undervoltage is None:
        self.BAT_FIN1_DIO_VSENSE_Undervoltage = False
      if self.P14V_MAIN1_VSENSE_Overvoltage is None:
        self.P14V_MAIN1_VSENSE_Overvoltage = False
      if self.P14V_MAIN1_VSENSE_Undervoltage is None:
        self.P14V_MAIN1_VSENSE_Undervoltage = False
      if self.P5V8_TLF1_VSENSE_Overvoltage is None:
        self.P5V8_TLF1_VSENSE_Overvoltage = False
      if self.P5V8_TLF1_VSENSE_Undervoltage is None:
        self.P5V8_TLF1_VSENSE_Undervoltage = False
      if self.V_PP3V3_CHCAN1_Overvoltage is None:
        self.V_PP3V3_CHCAN1_Overvoltage = False
      if self.V_PP3V3_CHCAN1_Undervoltage is None:
        self.V_PP3V3_CHCAN1_Undervoltage = False
      if self.V_PP5V_MAIN1_Overvoltage is None:
        self.V_PP5V_MAIN1_Overvoltage = False
      if self.V_PP5V_MAIN1_Undervoltage is None:
        self.V_PP5V_MAIN1_Undervoltage = False
      if self.V_PP14V_S1_Overvoltage is None:
        self.V_PP14V_S1_Overvoltage = False
      if self.V_PP14V_S1_Undervoltage is None:
        self.V_PP14V_S1_Undervoltage = False
      if self.V_PP5V_S1_Overvoltage is None:
        self.V_PP5V_S1_Overvoltage = False
      if self.V_PP5V_S1_Undervoltage is None:
        self.V_PP5V_S1_Undervoltage = False
      if self.V_PP5V_ANT_L1L5_Overvoltage is None:
        self.V_PP5V_ANT_L1L5_Overvoltage = False
      if self.V_PP5V_ANT_L1L5_Undervoltage is None:
        self.V_PP5V_ANT_L1L5_Undervoltage = False
      if self.V_PP5V_ANT_L1L2_Overvoltage is None:
        self.V_PP5V_ANT_L1L2_Overvoltage = False
      if self.V_PP5V_ANT_L1L2_Undervoltage is None:
        self.V_PP5V_ANT_L1L2_Undervoltage = False
      if self.P3V_GNSS_VSENSE_Overvoltage is None:
        self.P3V_GNSS_VSENSE_Overvoltage = False
      if self.P3V_GNSS_VSENSE_Undervoltage is None:
        self.P3V_GNSS_VSENSE_Undervoltage = False
      if self.V_PP14V_S2_Overvoltage is None:
        self.V_PP14V_S2_Overvoltage = False
      if self.V_PP14V_S2_Undervoltage is None:
        self.V_PP14V_S2_Undervoltage = False
      if self.V_PP5V_S2_Overvoltage is None:
        self.V_PP5V_S2_Overvoltage = False
      if self.V_PP5V_S2_Undervoltage is None:
        self.V_PP5V_S2_Undervoltage = False
      if self.V_PP12V_REG1_Overvoltage is None:
        self.V_PP12V_REG1_Overvoltage = False
      if self.V_PP12V_REG1_Undervoltage is None:
        self.V_PP12V_REG1_Undervoltage = False
      if self.V_PP3V3_MISC1_Overvoltage is None:
        self.V_PP3V3_MISC1_Overvoltage = False
      if self.V_PP3V3_MISC1_Undervoltage is None:
        self.V_PP3V3_MISC1_Undervoltage = False
      if self.V_PP1V05_SPR1_Overvoltage is None:
        self.V_PP1V05_SPR1_Overvoltage = False
      if self.V_PP1V05_SPR1_Undervoltage is None:
        self.V_PP1V05_SPR1_Undervoltage = False
      if self.V_PP1V5_SPR1_Overvoltage is None:
        self.V_PP1V5_SPR1_Overvoltage = False
      if self.V_PP1V5_SPR1_Undervoltage is None:
        self.V_PP1V5_SPR1_Undervoltage = False
      if self.V_PP1V8_MISC1_Overvoltage is None:
        self.V_PP1V8_MISC1_Overvoltage = False
      if self.V_PP1V8_MISC1_Undervoltage is None:
        self.V_PP1V8_MISC1_Undervoltage = False
      if self.V_PP0V9_PHY1_Overvoltage is None:
        self.V_PP0V9_PHY1_Overvoltage = False
      if self.V_PP0V9_PHY1_Undervoltage is None:
        self.V_PP0V9_PHY1_Undervoltage = False
      if self.V_PP1V2_DES1_Overvoltage is None:
        self.V_PP1V2_DES1_Overvoltage = False
      if self.V_PP1V2_DES1_Undervoltage is None:
        self.V_PP1V2_DES1_Undervoltage = False
      if self.V_PP1V0_DES1_Overvoltage is None:
        self.V_PP1V0_DES1_Overvoltage = False
      if self.V_PP1V0_DES1_Undervoltage is None:
        self.V_PP1V0_DES1_Undervoltage = False
      if self.V_PP0V9_ISP1_Overvoltage is None:
        self.V_PP0V9_ISP1_Overvoltage = False
      if self.V_PP0V9_ISP1_Undervoltage is None:
        self.V_PP0V9_ISP1_Undervoltage = False
      if self.V_PP1V8_DES1_Overvoltage is None:
        self.V_PP1V8_DES1_Overvoltage = False
      if self.V_PP1V8_DES1_Undervoltage is None:
        self.V_PP1V8_DES1_Undervoltage = False
      if self.V_PP3V3_TXVPHY1_Overvoltage is None:
        self.V_PP3V3_TXVPHY1_Overvoltage = False
      if self.V_PP3V3_TXVPHY1_Undervoltage is None:
        self.V_PP3V3_TXVPHY1_Undervoltage = False
      if self.V_PP3V3_GNSS_Overvoltage is None:
        self.V_PP3V3_GNSS_Overvoltage = False
      if self.V_PP3V3_GNSS_Undervoltage is None:
        self.V_PP3V3_GNSS_Undervoltage = False
      if self.V_PP3V3_S1_Overvoltage is None:
        self.V_PP3V3_S1_Overvoltage = False
      if self.V_PP3V3_S1_Undervoltage is None:
        self.V_PP3V3_S1_Undervoltage = False
      if self.V_PP1V8_S1_Overvoltage is None:
        self.V_PP1V8_S1_Overvoltage = False
      if self.V_PP1V8_S1_Undervoltage is None:
        self.V_PP1V8_S1_Undervoltage = False
      if self.V_PP3V3_S2_Overvoltage is None:
        self.V_PP3V3_S2_Overvoltage = False
      if self.V_PP3V3_S2_Undervoltage is None:
        self.V_PP3V3_S2_Undervoltage = False
      if self.V_PP1V8_S2_Overvoltage is None:
        self.V_PP1V8_S2_Overvoltage = False
      if self.V_PP1V8_S2_Undervoltage is None:
        self.V_PP1V8_S2_Undervoltage = False
      if self.V_PP3V3_DP1_Overvoltage is None:
        self.V_PP3V3_DP1_Overvoltage = False
      if self.V_PP3V3_DP1_Undervoltage is None:
        self.V_PP3V3_DP1_Undervoltage = False
      if self.V_PP1V8_MCU1_Overvoltage is None:
        self.V_PP1V8_MCU1_Overvoltage = False
      if self.V_PP1V8_MCU1_Undervoltage is None:
        self.V_PP1V8_MCU1_Undervoltage = False
      if self.BAT_IN1_VSENSE_2nd_Overvoltage is None:
        self.BAT_IN1_VSENSE_2nd_Overvoltage = False
      if self.BAT_IN1_VSENSE_2nd_Undervoltage is None:
        self.BAT_IN1_VSENSE_2nd_Undervoltage = False
      if self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage is None:
        self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage = False
      if self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage is None:
        self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage = False
      if self.P14V_MAIN1_VSENSE_2nd_Overvoltage is None:
        self.P14V_MAIN1_VSENSE_2nd_Overvoltage = False
      if self.P14V_MAIN1_VSENSE_2nd_Undervoltage is None:
        self.P14V_MAIN1_VSENSE_2nd_Undervoltage = False
      if self.P5V8_TLF1_VSENSE_2nd_Overvoltage is None:
        self.P5V8_TLF1_VSENSE_2nd_Overvoltage = False
      if self.P5V8_TLF1_VSENSE_2nd_Undervoltage is None:
        self.P5V8_TLF1_VSENSE_2nd_Undervoltage = False
      if self.V_PP5V_MAIN1_2nd_Overvoltage is None:
        self.V_PP5V_MAIN1_2nd_Overvoltage = False
      if self.V_PP5V_MAIN1_2nd_Undervoltage is None:
        self.V_PP5V_MAIN1_2nd_Undervoltage = False
      if self.V_PP14V_S1_2nd_Overvoltage is None:
        self.V_PP14V_S1_2nd_Overvoltage = False
      if self.V_PP14V_S1_2nd_Undervoltage is None:
        self.V_PP14V_S1_2nd_Undervoltage = False
      if self.V_PP5V_S1_2nd_Overvoltage is None:
        self.V_PP5V_S1_2nd_Overvoltage = False
      if self.V_PP5V_S1_2nd_Undervoltage is None:
        self.V_PP5V_S1_2nd_Undervoltage = False
      if self.V_PP3V3_MISC1_2nd_Overvoltage is None:
        self.V_PP3V3_MISC1_2nd_Overvoltage = False
      if self.V_PP3V3_MISC1_2nd_Undervoltage is None:
        self.V_PP3V3_MISC1_2nd_Undervoltage = False
      if self.V_PP1V8_DES1_2nd_Overvoltage is None:
        self.V_PP1V8_DES1_2nd_Overvoltage = False
      if self.V_PP1V8_DES1_2nd_Undervoltage is None:
        self.V_PP1V8_DES1_2nd_Undervoltage = False
      if self.V_PP3V3_GNSS_2nd_Overvoltage is None:
        self.V_PP3V3_GNSS_2nd_Overvoltage = False
      if self.V_PP3V3_GNSS_2nd_Undervoltage is None:
        self.V_PP3V3_GNSS_2nd_Undervoltage = False
      if self.BAT_IN21_VSENSE_Overvoltage is None:
        self.BAT_IN21_VSENSE_Overvoltage = False
      if self.BAT_IN21_VSENSE_Undervoltage is None:
        self.BAT_IN21_VSENSE_Undervoltage = False
      if self.P3V3_MCU21_VSENSE_Overvoltage is None:
        self.P3V3_MCU21_VSENSE_Overvoltage = False
      if self.P3V3_MCU21_VSENSE_Undervoltage is None:
        self.P3V3_MCU21_VSENSE_Undervoltage = False
      if self.V_PP1V2_S1_Overvoltage is None:
        self.V_PP1V2_S1_Overvoltage = False
      if self.V_PP1V2_S1_Undervoltage is None:
        self.V_PP1V2_S1_Undervoltage = False
      if self.V_PPVCC_UFS1_Overvoltage is None:
        self.V_PPVCC_UFS1_Overvoltage = False
      if self.V_PPVCC_UFS1_Undervoltage is None:
        self.V_PPVCC_UFS1_Undervoltage = False
      if self.V_PP1V2_S2_Overvoltage is None:
        self.V_PP1V2_S2_Overvoltage = False
      if self.V_PP1V2_S2_Undervoltage is None:
        self.V_PP1V2_S2_Undervoltage = False
      if self.V_PPVCC_UFS2_Overvoltage is None:
        self.V_PPVCC_UFS2_Overvoltage = False
      if self.V_PPVCC_UFS2_Undervoltage is None:
        self.V_PPVCC_UFS2_Undervoltage = False
    else:
      self.BAT_IN1_VSENSE_Overvoltage = False
      self.BAT_IN1_VSENSE_Undervoltage = False
      self.BAT_FIN1_DIO_VSENSE_Overvoltage = False
      self.BAT_FIN1_DIO_VSENSE_Undervoltage = False
      self.P14V_MAIN1_VSENSE_Overvoltage = False
      self.P14V_MAIN1_VSENSE_Undervoltage = False
      self.P5V8_TLF1_VSENSE_Overvoltage = False
      self.P5V8_TLF1_VSENSE_Undervoltage = False
      self.V_PP3V3_CHCAN1_Overvoltage = False
      self.V_PP3V3_CHCAN1_Undervoltage = False
      self.V_PP5V_MAIN1_Overvoltage = False
      self.V_PP5V_MAIN1_Undervoltage = False
      self.V_PP14V_S1_Overvoltage = False
      self.V_PP14V_S1_Undervoltage = False
      self.V_PP5V_S1_Overvoltage = False
      self.V_PP5V_S1_Undervoltage = False
      self.V_PP5V_ANT_L1L5_Overvoltage = False
      self.V_PP5V_ANT_L1L5_Undervoltage = False
      self.V_PP5V_ANT_L1L2_Overvoltage = False
      self.V_PP5V_ANT_L1L2_Undervoltage = False
      self.P3V_GNSS_VSENSE_Overvoltage = False
      self.P3V_GNSS_VSENSE_Undervoltage = False
      self.V_PP14V_S2_Overvoltage = False
      self.V_PP14V_S2_Undervoltage = False
      self.V_PP5V_S2_Overvoltage = False
      self.V_PP5V_S2_Undervoltage = False
      self.V_PP12V_REG1_Overvoltage = False
      self.V_PP12V_REG1_Undervoltage = False
      self.V_PP3V3_MISC1_Overvoltage = False
      self.V_PP3V3_MISC1_Undervoltage = False
      self.V_PP1V05_SPR1_Overvoltage = False
      self.V_PP1V05_SPR1_Undervoltage = False
      self.V_PP1V5_SPR1_Overvoltage = False
      self.V_PP1V5_SPR1_Undervoltage = False
      self.V_PP1V8_MISC1_Overvoltage = False
      self.V_PP1V8_MISC1_Undervoltage = False
      self.V_PP0V9_PHY1_Overvoltage = False
      self.V_PP0V9_PHY1_Undervoltage = False
      self.V_PP1V2_DES1_Overvoltage = False
      self.V_PP1V2_DES1_Undervoltage = False
      self.V_PP1V0_DES1_Overvoltage = False
      self.V_PP1V0_DES1_Undervoltage = False
      self.V_PP0V9_ISP1_Overvoltage = False
      self.V_PP0V9_ISP1_Undervoltage = False
      self.V_PP1V8_DES1_Overvoltage = False
      self.V_PP1V8_DES1_Undervoltage = False
      self.V_PP3V3_TXVPHY1_Overvoltage = False
      self.V_PP3V3_TXVPHY1_Undervoltage = False
      self.V_PP3V3_GNSS_Overvoltage = False
      self.V_PP3V3_GNSS_Undervoltage = False
      self.V_PP3V3_S1_Overvoltage = False
      self.V_PP3V3_S1_Undervoltage = False
      self.V_PP1V8_S1_Overvoltage = False
      self.V_PP1V8_S1_Undervoltage = False
      self.V_PP3V3_S2_Overvoltage = False
      self.V_PP3V3_S2_Undervoltage = False
      self.V_PP1V8_S2_Overvoltage = False
      self.V_PP1V8_S2_Undervoltage = False
      self.V_PP3V3_DP1_Overvoltage = False
      self.V_PP3V3_DP1_Undervoltage = False
      self.V_PP1V8_MCU1_Overvoltage = False
      self.V_PP1V8_MCU1_Undervoltage = False
      self.BAT_IN1_VSENSE_2nd_Overvoltage = False
      self.BAT_IN1_VSENSE_2nd_Undervoltage = False
      self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage = False
      self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage = False
      self.P14V_MAIN1_VSENSE_2nd_Overvoltage = False
      self.P14V_MAIN1_VSENSE_2nd_Undervoltage = False
      self.P5V8_TLF1_VSENSE_2nd_Overvoltage = False
      self.P5V8_TLF1_VSENSE_2nd_Undervoltage = False
      self.V_PP5V_MAIN1_2nd_Overvoltage = False
      self.V_PP5V_MAIN1_2nd_Undervoltage = False
      self.V_PP14V_S1_2nd_Overvoltage = False
      self.V_PP14V_S1_2nd_Undervoltage = False
      self.V_PP5V_S1_2nd_Overvoltage = False
      self.V_PP5V_S1_2nd_Undervoltage = False
      self.V_PP3V3_MISC1_2nd_Overvoltage = False
      self.V_PP3V3_MISC1_2nd_Undervoltage = False
      self.V_PP1V8_DES1_2nd_Overvoltage = False
      self.V_PP1V8_DES1_2nd_Undervoltage = False
      self.V_PP3V3_GNSS_2nd_Overvoltage = False
      self.V_PP3V3_GNSS_2nd_Undervoltage = False
      self.BAT_IN21_VSENSE_Overvoltage = False
      self.BAT_IN21_VSENSE_Undervoltage = False
      self.P3V3_MCU21_VSENSE_Overvoltage = False
      self.P3V3_MCU21_VSENSE_Undervoltage = False
      self.V_PP1V2_S1_Overvoltage = False
      self.V_PP1V2_S1_Undervoltage = False
      self.V_PPVCC_UFS1_Overvoltage = False
      self.V_PPVCC_UFS1_Undervoltage = False
      self.V_PP1V2_S2_Overvoltage = False
      self.V_PP1V2_S2_Undervoltage = False
      self.V_PPVCC_UFS2_Overvoltage = False
      self.V_PPVCC_UFS2_Undervoltage = False

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_94B().pack(_x.BAT_IN1_VSENSE_Overvoltage, _x.BAT_IN1_VSENSE_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_Undervoltage, _x.P14V_MAIN1_VSENSE_Overvoltage, _x.P14V_MAIN1_VSENSE_Undervoltage, _x.P5V8_TLF1_VSENSE_Overvoltage, _x.P5V8_TLF1_VSENSE_Undervoltage, _x.V_PP3V3_CHCAN1_Overvoltage, _x.V_PP3V3_CHCAN1_Undervoltage, _x.V_PP5V_MAIN1_Overvoltage, _x.V_PP5V_MAIN1_Undervoltage, _x.V_PP14V_S1_Overvoltage, _x.V_PP14V_S1_Undervoltage, _x.V_PP5V_S1_Overvoltage, _x.V_PP5V_S1_Undervoltage, _x.V_PP5V_ANT_L1L5_Overvoltage, _x.V_PP5V_ANT_L1L5_Undervoltage, _x.V_PP5V_ANT_L1L2_Overvoltage, _x.V_PP5V_ANT_L1L2_Undervoltage, _x.P3V_GNSS_VSENSE_Overvoltage, _x.P3V_GNSS_VSENSE_Undervoltage, _x.V_PP14V_S2_Overvoltage, _x.V_PP14V_S2_Undervoltage, _x.V_PP5V_S2_Overvoltage, _x.V_PP5V_S2_Undervoltage, _x.V_PP12V_REG1_Overvoltage, _x.V_PP12V_REG1_Undervoltage, _x.V_PP3V3_MISC1_Overvoltage, _x.V_PP3V3_MISC1_Undervoltage, _x.V_PP1V05_SPR1_Overvoltage, _x.V_PP1V05_SPR1_Undervoltage, _x.V_PP1V5_SPR1_Overvoltage, _x.V_PP1V5_SPR1_Undervoltage, _x.V_PP1V8_MISC1_Overvoltage, _x.V_PP1V8_MISC1_Undervoltage, _x.V_PP0V9_PHY1_Overvoltage, _x.V_PP0V9_PHY1_Undervoltage, _x.V_PP1V2_DES1_Overvoltage, _x.V_PP1V2_DES1_Undervoltage, _x.V_PP1V0_DES1_Overvoltage, _x.V_PP1V0_DES1_Undervoltage, _x.V_PP0V9_ISP1_Overvoltage, _x.V_PP0V9_ISP1_Undervoltage, _x.V_PP1V8_DES1_Overvoltage, _x.V_PP1V8_DES1_Undervoltage, _x.V_PP3V3_TXVPHY1_Overvoltage, _x.V_PP3V3_TXVPHY1_Undervoltage, _x.V_PP3V3_GNSS_Overvoltage, _x.V_PP3V3_GNSS_Undervoltage, _x.V_PP3V3_S1_Overvoltage, _x.V_PP3V3_S1_Undervoltage, _x.V_PP1V8_S1_Overvoltage, _x.V_PP1V8_S1_Undervoltage, _x.V_PP3V3_S2_Overvoltage, _x.V_PP3V3_S2_Undervoltage, _x.V_PP1V8_S2_Overvoltage, _x.V_PP1V8_S2_Undervoltage, _x.V_PP3V3_DP1_Overvoltage, _x.V_PP3V3_DP1_Undervoltage, _x.V_PP1V8_MCU1_Overvoltage, _x.V_PP1V8_MCU1_Undervoltage, _x.BAT_IN1_VSENSE_2nd_Overvoltage, _x.BAT_IN1_VSENSE_2nd_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage, _x.P14V_MAIN1_VSENSE_2nd_Overvoltage, _x.P14V_MAIN1_VSENSE_2nd_Undervoltage, _x.P5V8_TLF1_VSENSE_2nd_Overvoltage, _x.P5V8_TLF1_VSENSE_2nd_Undervoltage, _x.V_PP5V_MAIN1_2nd_Overvoltage, _x.V_PP5V_MAIN1_2nd_Undervoltage, _x.V_PP14V_S1_2nd_Overvoltage, _x.V_PP14V_S1_2nd_Undervoltage, _x.V_PP5V_S1_2nd_Overvoltage, _x.V_PP5V_S1_2nd_Undervoltage, _x.V_PP3V3_MISC1_2nd_Overvoltage, _x.V_PP3V3_MISC1_2nd_Undervoltage, _x.V_PP1V8_DES1_2nd_Overvoltage, _x.V_PP1V8_DES1_2nd_Undervoltage, _x.V_PP3V3_GNSS_2nd_Overvoltage, _x.V_PP3V3_GNSS_2nd_Undervoltage, _x.BAT_IN21_VSENSE_Overvoltage, _x.BAT_IN21_VSENSE_Undervoltage, _x.P3V3_MCU21_VSENSE_Overvoltage, _x.P3V3_MCU21_VSENSE_Undervoltage, _x.V_PP1V2_S1_Overvoltage, _x.V_PP1V2_S1_Undervoltage, _x.V_PPVCC_UFS1_Overvoltage, _x.V_PPVCC_UFS1_Undervoltage, _x.V_PP1V2_S2_Overvoltage, _x.V_PP1V2_S2_Undervoltage, _x.V_PPVCC_UFS2_Overvoltage, _x.V_PPVCC_UFS2_Undervoltage))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 94
      (_x.BAT_IN1_VSENSE_Overvoltage, _x.BAT_IN1_VSENSE_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_Undervoltage, _x.P14V_MAIN1_VSENSE_Overvoltage, _x.P14V_MAIN1_VSENSE_Undervoltage, _x.P5V8_TLF1_VSENSE_Overvoltage, _x.P5V8_TLF1_VSENSE_Undervoltage, _x.V_PP3V3_CHCAN1_Overvoltage, _x.V_PP3V3_CHCAN1_Undervoltage, _x.V_PP5V_MAIN1_Overvoltage, _x.V_PP5V_MAIN1_Undervoltage, _x.V_PP14V_S1_Overvoltage, _x.V_PP14V_S1_Undervoltage, _x.V_PP5V_S1_Overvoltage, _x.V_PP5V_S1_Undervoltage, _x.V_PP5V_ANT_L1L5_Overvoltage, _x.V_PP5V_ANT_L1L5_Undervoltage, _x.V_PP5V_ANT_L1L2_Overvoltage, _x.V_PP5V_ANT_L1L2_Undervoltage, _x.P3V_GNSS_VSENSE_Overvoltage, _x.P3V_GNSS_VSENSE_Undervoltage, _x.V_PP14V_S2_Overvoltage, _x.V_PP14V_S2_Undervoltage, _x.V_PP5V_S2_Overvoltage, _x.V_PP5V_S2_Undervoltage, _x.V_PP12V_REG1_Overvoltage, _x.V_PP12V_REG1_Undervoltage, _x.V_PP3V3_MISC1_Overvoltage, _x.V_PP3V3_MISC1_Undervoltage, _x.V_PP1V05_SPR1_Overvoltage, _x.V_PP1V05_SPR1_Undervoltage, _x.V_PP1V5_SPR1_Overvoltage, _x.V_PP1V5_SPR1_Undervoltage, _x.V_PP1V8_MISC1_Overvoltage, _x.V_PP1V8_MISC1_Undervoltage, _x.V_PP0V9_PHY1_Overvoltage, _x.V_PP0V9_PHY1_Undervoltage, _x.V_PP1V2_DES1_Overvoltage, _x.V_PP1V2_DES1_Undervoltage, _x.V_PP1V0_DES1_Overvoltage, _x.V_PP1V0_DES1_Undervoltage, _x.V_PP0V9_ISP1_Overvoltage, _x.V_PP0V9_ISP1_Undervoltage, _x.V_PP1V8_DES1_Overvoltage, _x.V_PP1V8_DES1_Undervoltage, _x.V_PP3V3_TXVPHY1_Overvoltage, _x.V_PP3V3_TXVPHY1_Undervoltage, _x.V_PP3V3_GNSS_Overvoltage, _x.V_PP3V3_GNSS_Undervoltage, _x.V_PP3V3_S1_Overvoltage, _x.V_PP3V3_S1_Undervoltage, _x.V_PP1V8_S1_Overvoltage, _x.V_PP1V8_S1_Undervoltage, _x.V_PP3V3_S2_Overvoltage, _x.V_PP3V3_S2_Undervoltage, _x.V_PP1V8_S2_Overvoltage, _x.V_PP1V8_S2_Undervoltage, _x.V_PP3V3_DP1_Overvoltage, _x.V_PP3V3_DP1_Undervoltage, _x.V_PP1V8_MCU1_Overvoltage, _x.V_PP1V8_MCU1_Undervoltage, _x.BAT_IN1_VSENSE_2nd_Overvoltage, _x.BAT_IN1_VSENSE_2nd_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage, _x.P14V_MAIN1_VSENSE_2nd_Overvoltage, _x.P14V_MAIN1_VSENSE_2nd_Undervoltage, _x.P5V8_TLF1_VSENSE_2nd_Overvoltage, _x.P5V8_TLF1_VSENSE_2nd_Undervoltage, _x.V_PP5V_MAIN1_2nd_Overvoltage, _x.V_PP5V_MAIN1_2nd_Undervoltage, _x.V_PP14V_S1_2nd_Overvoltage, _x.V_PP14V_S1_2nd_Undervoltage, _x.V_PP5V_S1_2nd_Overvoltage, _x.V_PP5V_S1_2nd_Undervoltage, _x.V_PP3V3_MISC1_2nd_Overvoltage, _x.V_PP3V3_MISC1_2nd_Undervoltage, _x.V_PP1V8_DES1_2nd_Overvoltage, _x.V_PP1V8_DES1_2nd_Undervoltage, _x.V_PP3V3_GNSS_2nd_Overvoltage, _x.V_PP3V3_GNSS_2nd_Undervoltage, _x.BAT_IN21_VSENSE_Overvoltage, _x.BAT_IN21_VSENSE_Undervoltage, _x.P3V3_MCU21_VSENSE_Overvoltage, _x.P3V3_MCU21_VSENSE_Undervoltage, _x.V_PP1V2_S1_Overvoltage, _x.V_PP1V2_S1_Undervoltage, _x.V_PPVCC_UFS1_Overvoltage, _x.V_PPVCC_UFS1_Undervoltage, _x.V_PP1V2_S2_Overvoltage, _x.V_PP1V2_S2_Undervoltage, _x.V_PPVCC_UFS2_Overvoltage, _x.V_PPVCC_UFS2_Undervoltage,) = _get_struct_94B().unpack(str[start:end])
      self.BAT_IN1_VSENSE_Overvoltage = bool(self.BAT_IN1_VSENSE_Overvoltage)
      self.BAT_IN1_VSENSE_Undervoltage = bool(self.BAT_IN1_VSENSE_Undervoltage)
      self.BAT_FIN1_DIO_VSENSE_Overvoltage = bool(self.BAT_FIN1_DIO_VSENSE_Overvoltage)
      self.BAT_FIN1_DIO_VSENSE_Undervoltage = bool(self.BAT_FIN1_DIO_VSENSE_Undervoltage)
      self.P14V_MAIN1_VSENSE_Overvoltage = bool(self.P14V_MAIN1_VSENSE_Overvoltage)
      self.P14V_MAIN1_VSENSE_Undervoltage = bool(self.P14V_MAIN1_VSENSE_Undervoltage)
      self.P5V8_TLF1_VSENSE_Overvoltage = bool(self.P5V8_TLF1_VSENSE_Overvoltage)
      self.P5V8_TLF1_VSENSE_Undervoltage = bool(self.P5V8_TLF1_VSENSE_Undervoltage)
      self.V_PP3V3_CHCAN1_Overvoltage = bool(self.V_PP3V3_CHCAN1_Overvoltage)
      self.V_PP3V3_CHCAN1_Undervoltage = bool(self.V_PP3V3_CHCAN1_Undervoltage)
      self.V_PP5V_MAIN1_Overvoltage = bool(self.V_PP5V_MAIN1_Overvoltage)
      self.V_PP5V_MAIN1_Undervoltage = bool(self.V_PP5V_MAIN1_Undervoltage)
      self.V_PP14V_S1_Overvoltage = bool(self.V_PP14V_S1_Overvoltage)
      self.V_PP14V_S1_Undervoltage = bool(self.V_PP14V_S1_Undervoltage)
      self.V_PP5V_S1_Overvoltage = bool(self.V_PP5V_S1_Overvoltage)
      self.V_PP5V_S1_Undervoltage = bool(self.V_PP5V_S1_Undervoltage)
      self.V_PP5V_ANT_L1L5_Overvoltage = bool(self.V_PP5V_ANT_L1L5_Overvoltage)
      self.V_PP5V_ANT_L1L5_Undervoltage = bool(self.V_PP5V_ANT_L1L5_Undervoltage)
      self.V_PP5V_ANT_L1L2_Overvoltage = bool(self.V_PP5V_ANT_L1L2_Overvoltage)
      self.V_PP5V_ANT_L1L2_Undervoltage = bool(self.V_PP5V_ANT_L1L2_Undervoltage)
      self.P3V_GNSS_VSENSE_Overvoltage = bool(self.P3V_GNSS_VSENSE_Overvoltage)
      self.P3V_GNSS_VSENSE_Undervoltage = bool(self.P3V_GNSS_VSENSE_Undervoltage)
      self.V_PP14V_S2_Overvoltage = bool(self.V_PP14V_S2_Overvoltage)
      self.V_PP14V_S2_Undervoltage = bool(self.V_PP14V_S2_Undervoltage)
      self.V_PP5V_S2_Overvoltage = bool(self.V_PP5V_S2_Overvoltage)
      self.V_PP5V_S2_Undervoltage = bool(self.V_PP5V_S2_Undervoltage)
      self.V_PP12V_REG1_Overvoltage = bool(self.V_PP12V_REG1_Overvoltage)
      self.V_PP12V_REG1_Undervoltage = bool(self.V_PP12V_REG1_Undervoltage)
      self.V_PP3V3_MISC1_Overvoltage = bool(self.V_PP3V3_MISC1_Overvoltage)
      self.V_PP3V3_MISC1_Undervoltage = bool(self.V_PP3V3_MISC1_Undervoltage)
      self.V_PP1V05_SPR1_Overvoltage = bool(self.V_PP1V05_SPR1_Overvoltage)
      self.V_PP1V05_SPR1_Undervoltage = bool(self.V_PP1V05_SPR1_Undervoltage)
      self.V_PP1V5_SPR1_Overvoltage = bool(self.V_PP1V5_SPR1_Overvoltage)
      self.V_PP1V5_SPR1_Undervoltage = bool(self.V_PP1V5_SPR1_Undervoltage)
      self.V_PP1V8_MISC1_Overvoltage = bool(self.V_PP1V8_MISC1_Overvoltage)
      self.V_PP1V8_MISC1_Undervoltage = bool(self.V_PP1V8_MISC1_Undervoltage)
      self.V_PP0V9_PHY1_Overvoltage = bool(self.V_PP0V9_PHY1_Overvoltage)
      self.V_PP0V9_PHY1_Undervoltage = bool(self.V_PP0V9_PHY1_Undervoltage)
      self.V_PP1V2_DES1_Overvoltage = bool(self.V_PP1V2_DES1_Overvoltage)
      self.V_PP1V2_DES1_Undervoltage = bool(self.V_PP1V2_DES1_Undervoltage)
      self.V_PP1V0_DES1_Overvoltage = bool(self.V_PP1V0_DES1_Overvoltage)
      self.V_PP1V0_DES1_Undervoltage = bool(self.V_PP1V0_DES1_Undervoltage)
      self.V_PP0V9_ISP1_Overvoltage = bool(self.V_PP0V9_ISP1_Overvoltage)
      self.V_PP0V9_ISP1_Undervoltage = bool(self.V_PP0V9_ISP1_Undervoltage)
      self.V_PP1V8_DES1_Overvoltage = bool(self.V_PP1V8_DES1_Overvoltage)
      self.V_PP1V8_DES1_Undervoltage = bool(self.V_PP1V8_DES1_Undervoltage)
      self.V_PP3V3_TXVPHY1_Overvoltage = bool(self.V_PP3V3_TXVPHY1_Overvoltage)
      self.V_PP3V3_TXVPHY1_Undervoltage = bool(self.V_PP3V3_TXVPHY1_Undervoltage)
      self.V_PP3V3_GNSS_Overvoltage = bool(self.V_PP3V3_GNSS_Overvoltage)
      self.V_PP3V3_GNSS_Undervoltage = bool(self.V_PP3V3_GNSS_Undervoltage)
      self.V_PP3V3_S1_Overvoltage = bool(self.V_PP3V3_S1_Overvoltage)
      self.V_PP3V3_S1_Undervoltage = bool(self.V_PP3V3_S1_Undervoltage)
      self.V_PP1V8_S1_Overvoltage = bool(self.V_PP1V8_S1_Overvoltage)
      self.V_PP1V8_S1_Undervoltage = bool(self.V_PP1V8_S1_Undervoltage)
      self.V_PP3V3_S2_Overvoltage = bool(self.V_PP3V3_S2_Overvoltage)
      self.V_PP3V3_S2_Undervoltage = bool(self.V_PP3V3_S2_Undervoltage)
      self.V_PP1V8_S2_Overvoltage = bool(self.V_PP1V8_S2_Overvoltage)
      self.V_PP1V8_S2_Undervoltage = bool(self.V_PP1V8_S2_Undervoltage)
      self.V_PP3V3_DP1_Overvoltage = bool(self.V_PP3V3_DP1_Overvoltage)
      self.V_PP3V3_DP1_Undervoltage = bool(self.V_PP3V3_DP1_Undervoltage)
      self.V_PP1V8_MCU1_Overvoltage = bool(self.V_PP1V8_MCU1_Overvoltage)
      self.V_PP1V8_MCU1_Undervoltage = bool(self.V_PP1V8_MCU1_Undervoltage)
      self.BAT_IN1_VSENSE_2nd_Overvoltage = bool(self.BAT_IN1_VSENSE_2nd_Overvoltage)
      self.BAT_IN1_VSENSE_2nd_Undervoltage = bool(self.BAT_IN1_VSENSE_2nd_Undervoltage)
      self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage = bool(self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage)
      self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage = bool(self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage)
      self.P14V_MAIN1_VSENSE_2nd_Overvoltage = bool(self.P14V_MAIN1_VSENSE_2nd_Overvoltage)
      self.P14V_MAIN1_VSENSE_2nd_Undervoltage = bool(self.P14V_MAIN1_VSENSE_2nd_Undervoltage)
      self.P5V8_TLF1_VSENSE_2nd_Overvoltage = bool(self.P5V8_TLF1_VSENSE_2nd_Overvoltage)
      self.P5V8_TLF1_VSENSE_2nd_Undervoltage = bool(self.P5V8_TLF1_VSENSE_2nd_Undervoltage)
      self.V_PP5V_MAIN1_2nd_Overvoltage = bool(self.V_PP5V_MAIN1_2nd_Overvoltage)
      self.V_PP5V_MAIN1_2nd_Undervoltage = bool(self.V_PP5V_MAIN1_2nd_Undervoltage)
      self.V_PP14V_S1_2nd_Overvoltage = bool(self.V_PP14V_S1_2nd_Overvoltage)
      self.V_PP14V_S1_2nd_Undervoltage = bool(self.V_PP14V_S1_2nd_Undervoltage)
      self.V_PP5V_S1_2nd_Overvoltage = bool(self.V_PP5V_S1_2nd_Overvoltage)
      self.V_PP5V_S1_2nd_Undervoltage = bool(self.V_PP5V_S1_2nd_Undervoltage)
      self.V_PP3V3_MISC1_2nd_Overvoltage = bool(self.V_PP3V3_MISC1_2nd_Overvoltage)
      self.V_PP3V3_MISC1_2nd_Undervoltage = bool(self.V_PP3V3_MISC1_2nd_Undervoltage)
      self.V_PP1V8_DES1_2nd_Overvoltage = bool(self.V_PP1V8_DES1_2nd_Overvoltage)
      self.V_PP1V8_DES1_2nd_Undervoltage = bool(self.V_PP1V8_DES1_2nd_Undervoltage)
      self.V_PP3V3_GNSS_2nd_Overvoltage = bool(self.V_PP3V3_GNSS_2nd_Overvoltage)
      self.V_PP3V3_GNSS_2nd_Undervoltage = bool(self.V_PP3V3_GNSS_2nd_Undervoltage)
      self.BAT_IN21_VSENSE_Overvoltage = bool(self.BAT_IN21_VSENSE_Overvoltage)
      self.BAT_IN21_VSENSE_Undervoltage = bool(self.BAT_IN21_VSENSE_Undervoltage)
      self.P3V3_MCU21_VSENSE_Overvoltage = bool(self.P3V3_MCU21_VSENSE_Overvoltage)
      self.P3V3_MCU21_VSENSE_Undervoltage = bool(self.P3V3_MCU21_VSENSE_Undervoltage)
      self.V_PP1V2_S1_Overvoltage = bool(self.V_PP1V2_S1_Overvoltage)
      self.V_PP1V2_S1_Undervoltage = bool(self.V_PP1V2_S1_Undervoltage)
      self.V_PPVCC_UFS1_Overvoltage = bool(self.V_PPVCC_UFS1_Overvoltage)
      self.V_PPVCC_UFS1_Undervoltage = bool(self.V_PPVCC_UFS1_Undervoltage)
      self.V_PP1V2_S2_Overvoltage = bool(self.V_PP1V2_S2_Overvoltage)
      self.V_PP1V2_S2_Undervoltage = bool(self.V_PP1V2_S2_Undervoltage)
      self.V_PPVCC_UFS2_Overvoltage = bool(self.V_PPVCC_UFS2_Overvoltage)
      self.V_PPVCC_UFS2_Undervoltage = bool(self.V_PPVCC_UFS2_Undervoltage)
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_94B().pack(_x.BAT_IN1_VSENSE_Overvoltage, _x.BAT_IN1_VSENSE_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_Undervoltage, _x.P14V_MAIN1_VSENSE_Overvoltage, _x.P14V_MAIN1_VSENSE_Undervoltage, _x.P5V8_TLF1_VSENSE_Overvoltage, _x.P5V8_TLF1_VSENSE_Undervoltage, _x.V_PP3V3_CHCAN1_Overvoltage, _x.V_PP3V3_CHCAN1_Undervoltage, _x.V_PP5V_MAIN1_Overvoltage, _x.V_PP5V_MAIN1_Undervoltage, _x.V_PP14V_S1_Overvoltage, _x.V_PP14V_S1_Undervoltage, _x.V_PP5V_S1_Overvoltage, _x.V_PP5V_S1_Undervoltage, _x.V_PP5V_ANT_L1L5_Overvoltage, _x.V_PP5V_ANT_L1L5_Undervoltage, _x.V_PP5V_ANT_L1L2_Overvoltage, _x.V_PP5V_ANT_L1L2_Undervoltage, _x.P3V_GNSS_VSENSE_Overvoltage, _x.P3V_GNSS_VSENSE_Undervoltage, _x.V_PP14V_S2_Overvoltage, _x.V_PP14V_S2_Undervoltage, _x.V_PP5V_S2_Overvoltage, _x.V_PP5V_S2_Undervoltage, _x.V_PP12V_REG1_Overvoltage, _x.V_PP12V_REG1_Undervoltage, _x.V_PP3V3_MISC1_Overvoltage, _x.V_PP3V3_MISC1_Undervoltage, _x.V_PP1V05_SPR1_Overvoltage, _x.V_PP1V05_SPR1_Undervoltage, _x.V_PP1V5_SPR1_Overvoltage, _x.V_PP1V5_SPR1_Undervoltage, _x.V_PP1V8_MISC1_Overvoltage, _x.V_PP1V8_MISC1_Undervoltage, _x.V_PP0V9_PHY1_Overvoltage, _x.V_PP0V9_PHY1_Undervoltage, _x.V_PP1V2_DES1_Overvoltage, _x.V_PP1V2_DES1_Undervoltage, _x.V_PP1V0_DES1_Overvoltage, _x.V_PP1V0_DES1_Undervoltage, _x.V_PP0V9_ISP1_Overvoltage, _x.V_PP0V9_ISP1_Undervoltage, _x.V_PP1V8_DES1_Overvoltage, _x.V_PP1V8_DES1_Undervoltage, _x.V_PP3V3_TXVPHY1_Overvoltage, _x.V_PP3V3_TXVPHY1_Undervoltage, _x.V_PP3V3_GNSS_Overvoltage, _x.V_PP3V3_GNSS_Undervoltage, _x.V_PP3V3_S1_Overvoltage, _x.V_PP3V3_S1_Undervoltage, _x.V_PP1V8_S1_Overvoltage, _x.V_PP1V8_S1_Undervoltage, _x.V_PP3V3_S2_Overvoltage, _x.V_PP3V3_S2_Undervoltage, _x.V_PP1V8_S2_Overvoltage, _x.V_PP1V8_S2_Undervoltage, _x.V_PP3V3_DP1_Overvoltage, _x.V_PP3V3_DP1_Undervoltage, _x.V_PP1V8_MCU1_Overvoltage, _x.V_PP1V8_MCU1_Undervoltage, _x.BAT_IN1_VSENSE_2nd_Overvoltage, _x.BAT_IN1_VSENSE_2nd_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage, _x.P14V_MAIN1_VSENSE_2nd_Overvoltage, _x.P14V_MAIN1_VSENSE_2nd_Undervoltage, _x.P5V8_TLF1_VSENSE_2nd_Overvoltage, _x.P5V8_TLF1_VSENSE_2nd_Undervoltage, _x.V_PP5V_MAIN1_2nd_Overvoltage, _x.V_PP5V_MAIN1_2nd_Undervoltage, _x.V_PP14V_S1_2nd_Overvoltage, _x.V_PP14V_S1_2nd_Undervoltage, _x.V_PP5V_S1_2nd_Overvoltage, _x.V_PP5V_S1_2nd_Undervoltage, _x.V_PP3V3_MISC1_2nd_Overvoltage, _x.V_PP3V3_MISC1_2nd_Undervoltage, _x.V_PP1V8_DES1_2nd_Overvoltage, _x.V_PP1V8_DES1_2nd_Undervoltage, _x.V_PP3V3_GNSS_2nd_Overvoltage, _x.V_PP3V3_GNSS_2nd_Undervoltage, _x.BAT_IN21_VSENSE_Overvoltage, _x.BAT_IN21_VSENSE_Undervoltage, _x.P3V3_MCU21_VSENSE_Overvoltage, _x.P3V3_MCU21_VSENSE_Undervoltage, _x.V_PP1V2_S1_Overvoltage, _x.V_PP1V2_S1_Undervoltage, _x.V_PPVCC_UFS1_Overvoltage, _x.V_PPVCC_UFS1_Undervoltage, _x.V_PP1V2_S2_Overvoltage, _x.V_PP1V2_S2_Undervoltage, _x.V_PPVCC_UFS2_Overvoltage, _x.V_PPVCC_UFS2_Undervoltage))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 94
      (_x.BAT_IN1_VSENSE_Overvoltage, _x.BAT_IN1_VSENSE_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_Undervoltage, _x.P14V_MAIN1_VSENSE_Overvoltage, _x.P14V_MAIN1_VSENSE_Undervoltage, _x.P5V8_TLF1_VSENSE_Overvoltage, _x.P5V8_TLF1_VSENSE_Undervoltage, _x.V_PP3V3_CHCAN1_Overvoltage, _x.V_PP3V3_CHCAN1_Undervoltage, _x.V_PP5V_MAIN1_Overvoltage, _x.V_PP5V_MAIN1_Undervoltage, _x.V_PP14V_S1_Overvoltage, _x.V_PP14V_S1_Undervoltage, _x.V_PP5V_S1_Overvoltage, _x.V_PP5V_S1_Undervoltage, _x.V_PP5V_ANT_L1L5_Overvoltage, _x.V_PP5V_ANT_L1L5_Undervoltage, _x.V_PP5V_ANT_L1L2_Overvoltage, _x.V_PP5V_ANT_L1L2_Undervoltage, _x.P3V_GNSS_VSENSE_Overvoltage, _x.P3V_GNSS_VSENSE_Undervoltage, _x.V_PP14V_S2_Overvoltage, _x.V_PP14V_S2_Undervoltage, _x.V_PP5V_S2_Overvoltage, _x.V_PP5V_S2_Undervoltage, _x.V_PP12V_REG1_Overvoltage, _x.V_PP12V_REG1_Undervoltage, _x.V_PP3V3_MISC1_Overvoltage, _x.V_PP3V3_MISC1_Undervoltage, _x.V_PP1V05_SPR1_Overvoltage, _x.V_PP1V05_SPR1_Undervoltage, _x.V_PP1V5_SPR1_Overvoltage, _x.V_PP1V5_SPR1_Undervoltage, _x.V_PP1V8_MISC1_Overvoltage, _x.V_PP1V8_MISC1_Undervoltage, _x.V_PP0V9_PHY1_Overvoltage, _x.V_PP0V9_PHY1_Undervoltage, _x.V_PP1V2_DES1_Overvoltage, _x.V_PP1V2_DES1_Undervoltage, _x.V_PP1V0_DES1_Overvoltage, _x.V_PP1V0_DES1_Undervoltage, _x.V_PP0V9_ISP1_Overvoltage, _x.V_PP0V9_ISP1_Undervoltage, _x.V_PP1V8_DES1_Overvoltage, _x.V_PP1V8_DES1_Undervoltage, _x.V_PP3V3_TXVPHY1_Overvoltage, _x.V_PP3V3_TXVPHY1_Undervoltage, _x.V_PP3V3_GNSS_Overvoltage, _x.V_PP3V3_GNSS_Undervoltage, _x.V_PP3V3_S1_Overvoltage, _x.V_PP3V3_S1_Undervoltage, _x.V_PP1V8_S1_Overvoltage, _x.V_PP1V8_S1_Undervoltage, _x.V_PP3V3_S2_Overvoltage, _x.V_PP3V3_S2_Undervoltage, _x.V_PP1V8_S2_Overvoltage, _x.V_PP1V8_S2_Undervoltage, _x.V_PP3V3_DP1_Overvoltage, _x.V_PP3V3_DP1_Undervoltage, _x.V_PP1V8_MCU1_Overvoltage, _x.V_PP1V8_MCU1_Undervoltage, _x.BAT_IN1_VSENSE_2nd_Overvoltage, _x.BAT_IN1_VSENSE_2nd_Undervoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage, _x.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage, _x.P14V_MAIN1_VSENSE_2nd_Overvoltage, _x.P14V_MAIN1_VSENSE_2nd_Undervoltage, _x.P5V8_TLF1_VSENSE_2nd_Overvoltage, _x.P5V8_TLF1_VSENSE_2nd_Undervoltage, _x.V_PP5V_MAIN1_2nd_Overvoltage, _x.V_PP5V_MAIN1_2nd_Undervoltage, _x.V_PP14V_S1_2nd_Overvoltage, _x.V_PP14V_S1_2nd_Undervoltage, _x.V_PP5V_S1_2nd_Overvoltage, _x.V_PP5V_S1_2nd_Undervoltage, _x.V_PP3V3_MISC1_2nd_Overvoltage, _x.V_PP3V3_MISC1_2nd_Undervoltage, _x.V_PP1V8_DES1_2nd_Overvoltage, _x.V_PP1V8_DES1_2nd_Undervoltage, _x.V_PP3V3_GNSS_2nd_Overvoltage, _x.V_PP3V3_GNSS_2nd_Undervoltage, _x.BAT_IN21_VSENSE_Overvoltage, _x.BAT_IN21_VSENSE_Undervoltage, _x.P3V3_MCU21_VSENSE_Overvoltage, _x.P3V3_MCU21_VSENSE_Undervoltage, _x.V_PP1V2_S1_Overvoltage, _x.V_PP1V2_S1_Undervoltage, _x.V_PPVCC_UFS1_Overvoltage, _x.V_PPVCC_UFS1_Undervoltage, _x.V_PP1V2_S2_Overvoltage, _x.V_PP1V2_S2_Undervoltage, _x.V_PPVCC_UFS2_Overvoltage, _x.V_PPVCC_UFS2_Undervoltage,) = _get_struct_94B().unpack(str[start:end])
      self.BAT_IN1_VSENSE_Overvoltage = bool(self.BAT_IN1_VSENSE_Overvoltage)
      self.BAT_IN1_VSENSE_Undervoltage = bool(self.BAT_IN1_VSENSE_Undervoltage)
      self.BAT_FIN1_DIO_VSENSE_Overvoltage = bool(self.BAT_FIN1_DIO_VSENSE_Overvoltage)
      self.BAT_FIN1_DIO_VSENSE_Undervoltage = bool(self.BAT_FIN1_DIO_VSENSE_Undervoltage)
      self.P14V_MAIN1_VSENSE_Overvoltage = bool(self.P14V_MAIN1_VSENSE_Overvoltage)
      self.P14V_MAIN1_VSENSE_Undervoltage = bool(self.P14V_MAIN1_VSENSE_Undervoltage)
      self.P5V8_TLF1_VSENSE_Overvoltage = bool(self.P5V8_TLF1_VSENSE_Overvoltage)
      self.P5V8_TLF1_VSENSE_Undervoltage = bool(self.P5V8_TLF1_VSENSE_Undervoltage)
      self.V_PP3V3_CHCAN1_Overvoltage = bool(self.V_PP3V3_CHCAN1_Overvoltage)
      self.V_PP3V3_CHCAN1_Undervoltage = bool(self.V_PP3V3_CHCAN1_Undervoltage)
      self.V_PP5V_MAIN1_Overvoltage = bool(self.V_PP5V_MAIN1_Overvoltage)
      self.V_PP5V_MAIN1_Undervoltage = bool(self.V_PP5V_MAIN1_Undervoltage)
      self.V_PP14V_S1_Overvoltage = bool(self.V_PP14V_S1_Overvoltage)
      self.V_PP14V_S1_Undervoltage = bool(self.V_PP14V_S1_Undervoltage)
      self.V_PP5V_S1_Overvoltage = bool(self.V_PP5V_S1_Overvoltage)
      self.V_PP5V_S1_Undervoltage = bool(self.V_PP5V_S1_Undervoltage)
      self.V_PP5V_ANT_L1L5_Overvoltage = bool(self.V_PP5V_ANT_L1L5_Overvoltage)
      self.V_PP5V_ANT_L1L5_Undervoltage = bool(self.V_PP5V_ANT_L1L5_Undervoltage)
      self.V_PP5V_ANT_L1L2_Overvoltage = bool(self.V_PP5V_ANT_L1L2_Overvoltage)
      self.V_PP5V_ANT_L1L2_Undervoltage = bool(self.V_PP5V_ANT_L1L2_Undervoltage)
      self.P3V_GNSS_VSENSE_Overvoltage = bool(self.P3V_GNSS_VSENSE_Overvoltage)
      self.P3V_GNSS_VSENSE_Undervoltage = bool(self.P3V_GNSS_VSENSE_Undervoltage)
      self.V_PP14V_S2_Overvoltage = bool(self.V_PP14V_S2_Overvoltage)
      self.V_PP14V_S2_Undervoltage = bool(self.V_PP14V_S2_Undervoltage)
      self.V_PP5V_S2_Overvoltage = bool(self.V_PP5V_S2_Overvoltage)
      self.V_PP5V_S2_Undervoltage = bool(self.V_PP5V_S2_Undervoltage)
      self.V_PP12V_REG1_Overvoltage = bool(self.V_PP12V_REG1_Overvoltage)
      self.V_PP12V_REG1_Undervoltage = bool(self.V_PP12V_REG1_Undervoltage)
      self.V_PP3V3_MISC1_Overvoltage = bool(self.V_PP3V3_MISC1_Overvoltage)
      self.V_PP3V3_MISC1_Undervoltage = bool(self.V_PP3V3_MISC1_Undervoltage)
      self.V_PP1V05_SPR1_Overvoltage = bool(self.V_PP1V05_SPR1_Overvoltage)
      self.V_PP1V05_SPR1_Undervoltage = bool(self.V_PP1V05_SPR1_Undervoltage)
      self.V_PP1V5_SPR1_Overvoltage = bool(self.V_PP1V5_SPR1_Overvoltage)
      self.V_PP1V5_SPR1_Undervoltage = bool(self.V_PP1V5_SPR1_Undervoltage)
      self.V_PP1V8_MISC1_Overvoltage = bool(self.V_PP1V8_MISC1_Overvoltage)
      self.V_PP1V8_MISC1_Undervoltage = bool(self.V_PP1V8_MISC1_Undervoltage)
      self.V_PP0V9_PHY1_Overvoltage = bool(self.V_PP0V9_PHY1_Overvoltage)
      self.V_PP0V9_PHY1_Undervoltage = bool(self.V_PP0V9_PHY1_Undervoltage)
      self.V_PP1V2_DES1_Overvoltage = bool(self.V_PP1V2_DES1_Overvoltage)
      self.V_PP1V2_DES1_Undervoltage = bool(self.V_PP1V2_DES1_Undervoltage)
      self.V_PP1V0_DES1_Overvoltage = bool(self.V_PP1V0_DES1_Overvoltage)
      self.V_PP1V0_DES1_Undervoltage = bool(self.V_PP1V0_DES1_Undervoltage)
      self.V_PP0V9_ISP1_Overvoltage = bool(self.V_PP0V9_ISP1_Overvoltage)
      self.V_PP0V9_ISP1_Undervoltage = bool(self.V_PP0V9_ISP1_Undervoltage)
      self.V_PP1V8_DES1_Overvoltage = bool(self.V_PP1V8_DES1_Overvoltage)
      self.V_PP1V8_DES1_Undervoltage = bool(self.V_PP1V8_DES1_Undervoltage)
      self.V_PP3V3_TXVPHY1_Overvoltage = bool(self.V_PP3V3_TXVPHY1_Overvoltage)
      self.V_PP3V3_TXVPHY1_Undervoltage = bool(self.V_PP3V3_TXVPHY1_Undervoltage)
      self.V_PP3V3_GNSS_Overvoltage = bool(self.V_PP3V3_GNSS_Overvoltage)
      self.V_PP3V3_GNSS_Undervoltage = bool(self.V_PP3V3_GNSS_Undervoltage)
      self.V_PP3V3_S1_Overvoltage = bool(self.V_PP3V3_S1_Overvoltage)
      self.V_PP3V3_S1_Undervoltage = bool(self.V_PP3V3_S1_Undervoltage)
      self.V_PP1V8_S1_Overvoltage = bool(self.V_PP1V8_S1_Overvoltage)
      self.V_PP1V8_S1_Undervoltage = bool(self.V_PP1V8_S1_Undervoltage)
      self.V_PP3V3_S2_Overvoltage = bool(self.V_PP3V3_S2_Overvoltage)
      self.V_PP3V3_S2_Undervoltage = bool(self.V_PP3V3_S2_Undervoltage)
      self.V_PP1V8_S2_Overvoltage = bool(self.V_PP1V8_S2_Overvoltage)
      self.V_PP1V8_S2_Undervoltage = bool(self.V_PP1V8_S2_Undervoltage)
      self.V_PP3V3_DP1_Overvoltage = bool(self.V_PP3V3_DP1_Overvoltage)
      self.V_PP3V3_DP1_Undervoltage = bool(self.V_PP3V3_DP1_Undervoltage)
      self.V_PP1V8_MCU1_Overvoltage = bool(self.V_PP1V8_MCU1_Overvoltage)
      self.V_PP1V8_MCU1_Undervoltage = bool(self.V_PP1V8_MCU1_Undervoltage)
      self.BAT_IN1_VSENSE_2nd_Overvoltage = bool(self.BAT_IN1_VSENSE_2nd_Overvoltage)
      self.BAT_IN1_VSENSE_2nd_Undervoltage = bool(self.BAT_IN1_VSENSE_2nd_Undervoltage)
      self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage = bool(self.BAT_FIN1_DIO_VSENSE_2nd_Overvoltage)
      self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage = bool(self.BAT_FIN1_DIO_VSENSE_2nd_Undervoltage)
      self.P14V_MAIN1_VSENSE_2nd_Overvoltage = bool(self.P14V_MAIN1_VSENSE_2nd_Overvoltage)
      self.P14V_MAIN1_VSENSE_2nd_Undervoltage = bool(self.P14V_MAIN1_VSENSE_2nd_Undervoltage)
      self.P5V8_TLF1_VSENSE_2nd_Overvoltage = bool(self.P5V8_TLF1_VSENSE_2nd_Overvoltage)
      self.P5V8_TLF1_VSENSE_2nd_Undervoltage = bool(self.P5V8_TLF1_VSENSE_2nd_Undervoltage)
      self.V_PP5V_MAIN1_2nd_Overvoltage = bool(self.V_PP5V_MAIN1_2nd_Overvoltage)
      self.V_PP5V_MAIN1_2nd_Undervoltage = bool(self.V_PP5V_MAIN1_2nd_Undervoltage)
      self.V_PP14V_S1_2nd_Overvoltage = bool(self.V_PP14V_S1_2nd_Overvoltage)
      self.V_PP14V_S1_2nd_Undervoltage = bool(self.V_PP14V_S1_2nd_Undervoltage)
      self.V_PP5V_S1_2nd_Overvoltage = bool(self.V_PP5V_S1_2nd_Overvoltage)
      self.V_PP5V_S1_2nd_Undervoltage = bool(self.V_PP5V_S1_2nd_Undervoltage)
      self.V_PP3V3_MISC1_2nd_Overvoltage = bool(self.V_PP3V3_MISC1_2nd_Overvoltage)
      self.V_PP3V3_MISC1_2nd_Undervoltage = bool(self.V_PP3V3_MISC1_2nd_Undervoltage)
      self.V_PP1V8_DES1_2nd_Overvoltage = bool(self.V_PP1V8_DES1_2nd_Overvoltage)
      self.V_PP1V8_DES1_2nd_Undervoltage = bool(self.V_PP1V8_DES1_2nd_Undervoltage)
      self.V_PP3V3_GNSS_2nd_Overvoltage = bool(self.V_PP3V3_GNSS_2nd_Overvoltage)
      self.V_PP3V3_GNSS_2nd_Undervoltage = bool(self.V_PP3V3_GNSS_2nd_Undervoltage)
      self.BAT_IN21_VSENSE_Overvoltage = bool(self.BAT_IN21_VSENSE_Overvoltage)
      self.BAT_IN21_VSENSE_Undervoltage = bool(self.BAT_IN21_VSENSE_Undervoltage)
      self.P3V3_MCU21_VSENSE_Overvoltage = bool(self.P3V3_MCU21_VSENSE_Overvoltage)
      self.P3V3_MCU21_VSENSE_Undervoltage = bool(self.P3V3_MCU21_VSENSE_Undervoltage)
      self.V_PP1V2_S1_Overvoltage = bool(self.V_PP1V2_S1_Overvoltage)
      self.V_PP1V2_S1_Undervoltage = bool(self.V_PP1V2_S1_Undervoltage)
      self.V_PPVCC_UFS1_Overvoltage = bool(self.V_PPVCC_UFS1_Overvoltage)
      self.V_PPVCC_UFS1_Undervoltage = bool(self.V_PPVCC_UFS1_Undervoltage)
      self.V_PP1V2_S2_Overvoltage = bool(self.V_PP1V2_S2_Overvoltage)
      self.V_PP1V2_S2_Undervoltage = bool(self.V_PP1V2_S2_Undervoltage)
      self.V_PPVCC_UFS2_Overvoltage = bool(self.V_PPVCC_UFS2_Overvoltage)
      self.V_PPVCC_UFS2_Undervoltage = bool(self.V_PPVCC_UFS2_Undervoltage)
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_94B = None
def _get_struct_94B():
    global _struct_94B
    if _struct_94B is None:
        _struct_94B = struct.Struct("<94B")
    return _struct_94B
