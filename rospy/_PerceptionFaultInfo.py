# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from rospy_message_converter/PerceptionFaultInfo.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import rospy_message_converter.msg

class PerceptionFaultInfo(genpy.Message):
  _md5sum = "e1641a482c71734bade6c42a6552d6de"
  _type = "rospy_message_converter/PerceptionFaultInfo"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """SensorInputFaultInfo sensor_input_fault_info
CalibrationFaultInfo calibration_fault_info
MapFaultInfo map_fault_info
AppInternalFaultResult nop_plus_internal_fault
AppInternalFaultResult da_internal_fault
AppInternalFaultResult aeb_internal_fault
AppInternalFaultResult elk_internal_fault
AppInternalFaultResult lka_internal_fault
AppInternalFaultResult eas_internal_fault
AppInternalFaultResult psap_internal_fault
AppInternalFaultResult sapa_internal_fault
uint64 publish_ptp_ts
string publisher_id
uint64 counter
uint64 publish_ts

================================================================================
MSG: rospy_message_converter/SensorInputFaultInfo
bool APP_IMU_InputMsg_OrderError
bool APP_IMU_PTPTimeStamp_RollBackError
bool APP_IMU_PTPTimeStamp_LatencyError
bool APP_FrontLidar_InputTimeStamp_Error
bool APP_WhlInfosCAN_InputTimeStamp_RollBackError
bool APP_FW_Camera_DataInput_Error
bool APP_FN_Camera_DataInput_Error
bool APP_FL_Camera_DataInput_Error
bool APP_FR_Camera_DataInput_Error
bool APP_RL_Camera_DataInput_Error
bool APP_RR_Camera_DataInput_Error
bool APP_SVC_LEFT_Camera_DataInput_Error
bool APP_SVC_RIGHT_Camera_DataInput_Error
bool APP_SVC_FRONT_Camera_DataInput_Error
bool APP_SVC_REAR_Camera_DataInput_Error
bool APP_RN_Camera_DataInput_Error
bool APP_IMU_DataInput_Error
bool APP_RTK_DataInput_Error
bool APP_VehicleCAN_DataInput_Error
bool APP_LIDAR_DataInput_E2E_Error
bool APP_LIDAR_ProcessResultInput_Error

================================================================================
MSG: rospy_message_converter/CalibrationFaultInfo
bool APP_FW_Camera_Calibration_Calibration_Error
bool APP_FN_Camera_Calibration_Calibration_Error
bool APP_FL_Camera_Calibration_Calibration_Error
bool APP_FR_Camera_Calibration_Calibration_Error
bool APP_RL_Camera_Calibration_Calibration_Error
bool APP_RR_Camera_Calibration_Calibration_Error
bool APP_SVC_LEFT_Calibration_Calibration_Error
bool APP_SVC_RIGHT_Calibration_Calibration_Error
bool APP_SVC_FRONT_Calibration_Calibration_Error
bool APP_SVC_REAR_Calibration_Calibration_Error
bool APP_RN_Camera_Calibration_Calibration_Error
bool APP_FW_Camera_Calibration_File_Read_Error
bool APP_FN_Camera_Calibration_File_Read_Error
bool APP_FL_Camera_Calibration_File_Read_Error
bool APP_FR_Camera_Calibration_File_Read_Error
bool APP_RL_Camera_Calibration_File_Read_Error
bool APP_RR_Camera_Calibration_File_Read_Error
bool APP_SVC_LEFT_Calibration_File_Read_Error
bool APP_SVC_RIGHT_Calibration_File_Read_Error
bool APP_SVC_FRONT_Calibration_File_Read_Error
bool APP_SVC_REAR_Calibration_File_Read_Error
bool APP_RN_Camera_Calibration_File_Read_Error
bool APP_Lidar_Calibration_Calibration_Error
bool APP_Lidar_Calibration_File_Read_Error
bool APP_IMU_Calibration_File_Read_Error
bool APP_IMU_Calibration_Calibration_Error
bool APP_Master_Antenna_Calibration_File_Read_Error
bool APP_Master_Antenna_Calibration_Calibration_Error
bool APP_Vehicle_Info_Calibration_File_Read_Error
bool APP_FW_Remap_Npz_Calibration_File_Read_Error

================================================================================
MSG: rospy_message_converter/MapFaultInfo
bool APP_HDMAP_SEARCH_ERROR
bool APP_HDMAP_PARSE_ERROR
bool APP_HDMAP_READFILE_ERROR
bool APP_HDMAP_DOWNLOAD_ERROR
bool APP_RTK_HDMAP_MATCH_ERROR

================================================================================
MSG: rospy_message_converter/AppInternalFaultResult
bool Stop_Vehicle_Standstil
bool Deactivate_Function
bool Lateral_Control_Suppression
bool Longitudinal_Control_Suppression
bool Lane_Change_Suppression
bool Takeover_Warning
bool Attention_Warning
bool Insignificant
"""
  __slots__ = ['sensor_input_fault_info','calibration_fault_info','map_fault_info','nop_plus_internal_fault','da_internal_fault','aeb_internal_fault','elk_internal_fault','lka_internal_fault','eas_internal_fault','psap_internal_fault','sapa_internal_fault','publish_ptp_ts','publisher_id','counter','publish_ts']
  _slot_types = ['rospy_message_converter/SensorInputFaultInfo','rospy_message_converter/CalibrationFaultInfo','rospy_message_converter/MapFaultInfo','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','rospy_message_converter/AppInternalFaultResult','uint64','string','uint64','uint64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       sensor_input_fault_info,calibration_fault_info,map_fault_info,nop_plus_internal_fault,da_internal_fault,aeb_internal_fault,elk_internal_fault,lka_internal_fault,eas_internal_fault,psap_internal_fault,sapa_internal_fault,publish_ptp_ts,publisher_id,counter,publish_ts

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(PerceptionFaultInfo, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.sensor_input_fault_info is None:
        self.sensor_input_fault_info = rospy_message_converter.msg.SensorInputFaultInfo()
      if self.calibration_fault_info is None:
        self.calibration_fault_info = rospy_message_converter.msg.CalibrationFaultInfo()
      if self.map_fault_info is None:
        self.map_fault_info = rospy_message_converter.msg.MapFaultInfo()
      if self.nop_plus_internal_fault is None:
        self.nop_plus_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.da_internal_fault is None:
        self.da_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.aeb_internal_fault is None:
        self.aeb_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.elk_internal_fault is None:
        self.elk_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.lka_internal_fault is None:
        self.lka_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.eas_internal_fault is None:
        self.eas_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.psap_internal_fault is None:
        self.psap_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.sapa_internal_fault is None:
        self.sapa_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.publish_ptp_ts is None:
        self.publish_ptp_ts = 0
      if self.publisher_id is None:
        self.publisher_id = ''
      if self.counter is None:
        self.counter = 0
      if self.publish_ts is None:
        self.publish_ts = 0
    else:
      self.sensor_input_fault_info = rospy_message_converter.msg.SensorInputFaultInfo()
      self.calibration_fault_info = rospy_message_converter.msg.CalibrationFaultInfo()
      self.map_fault_info = rospy_message_converter.msg.MapFaultInfo()
      self.nop_plus_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.da_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.aeb_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.elk_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.lka_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.eas_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.psap_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.sapa_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      self.publish_ptp_ts = 0
      self.publisher_id = ''
      self.counter = 0
      self.publish_ts = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_120BQ().pack(_x.sensor_input_fault_info.APP_IMU_InputMsg_OrderError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError, _x.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error, _x.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_FW_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_IMU_DataInput_Error, _x.sensor_input_fault_info.APP_RTK_DataInput_Error, _x.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error, _x.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error, _x.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error, _x.map_fault_info.APP_HDMAP_SEARCH_ERROR, _x.map_fault_info.APP_HDMAP_PARSE_ERROR, _x.map_fault_info.APP_HDMAP_READFILE_ERROR, _x.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR, _x.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR, _x.nop_plus_internal_fault.Stop_Vehicle_Standstil, _x.nop_plus_internal_fault.Deactivate_Function, _x.nop_plus_internal_fault.Lateral_Control_Suppression, _x.nop_plus_internal_fault.Longitudinal_Control_Suppression, _x.nop_plus_internal_fault.Lane_Change_Suppression, _x.nop_plus_internal_fault.Takeover_Warning, _x.nop_plus_internal_fault.Attention_Warning, _x.nop_plus_internal_fault.Insignificant, _x.da_internal_fault.Stop_Vehicle_Standstil, _x.da_internal_fault.Deactivate_Function, _x.da_internal_fault.Lateral_Control_Suppression, _x.da_internal_fault.Longitudinal_Control_Suppression, _x.da_internal_fault.Lane_Change_Suppression, _x.da_internal_fault.Takeover_Warning, _x.da_internal_fault.Attention_Warning, _x.da_internal_fault.Insignificant, _x.aeb_internal_fault.Stop_Vehicle_Standstil, _x.aeb_internal_fault.Deactivate_Function, _x.aeb_internal_fault.Lateral_Control_Suppression, _x.aeb_internal_fault.Longitudinal_Control_Suppression, _x.aeb_internal_fault.Lane_Change_Suppression, _x.aeb_internal_fault.Takeover_Warning, _x.aeb_internal_fault.Attention_Warning, _x.aeb_internal_fault.Insignificant, _x.elk_internal_fault.Stop_Vehicle_Standstil, _x.elk_internal_fault.Deactivate_Function, _x.elk_internal_fault.Lateral_Control_Suppression, _x.elk_internal_fault.Longitudinal_Control_Suppression, _x.elk_internal_fault.Lane_Change_Suppression, _x.elk_internal_fault.Takeover_Warning, _x.elk_internal_fault.Attention_Warning, _x.elk_internal_fault.Insignificant, _x.lka_internal_fault.Stop_Vehicle_Standstil, _x.lka_internal_fault.Deactivate_Function, _x.lka_internal_fault.Lateral_Control_Suppression, _x.lka_internal_fault.Longitudinal_Control_Suppression, _x.lka_internal_fault.Lane_Change_Suppression, _x.lka_internal_fault.Takeover_Warning, _x.lka_internal_fault.Attention_Warning, _x.lka_internal_fault.Insignificant, _x.eas_internal_fault.Stop_Vehicle_Standstil, _x.eas_internal_fault.Deactivate_Function, _x.eas_internal_fault.Lateral_Control_Suppression, _x.eas_internal_fault.Longitudinal_Control_Suppression, _x.eas_internal_fault.Lane_Change_Suppression, _x.eas_internal_fault.Takeover_Warning, _x.eas_internal_fault.Attention_Warning, _x.eas_internal_fault.Insignificant, _x.psap_internal_fault.Stop_Vehicle_Standstil, _x.psap_internal_fault.Deactivate_Function, _x.psap_internal_fault.Lateral_Control_Suppression, _x.psap_internal_fault.Longitudinal_Control_Suppression, _x.psap_internal_fault.Lane_Change_Suppression, _x.psap_internal_fault.Takeover_Warning, _x.psap_internal_fault.Attention_Warning, _x.psap_internal_fault.Insignificant, _x.sapa_internal_fault.Stop_Vehicle_Standstil, _x.sapa_internal_fault.Deactivate_Function, _x.sapa_internal_fault.Lateral_Control_Suppression, _x.sapa_internal_fault.Longitudinal_Control_Suppression, _x.sapa_internal_fault.Lane_Change_Suppression, _x.sapa_internal_fault.Takeover_Warning, _x.sapa_internal_fault.Attention_Warning, _x.sapa_internal_fault.Insignificant, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.sensor_input_fault_info is None:
        self.sensor_input_fault_info = rospy_message_converter.msg.SensorInputFaultInfo()
      if self.calibration_fault_info is None:
        self.calibration_fault_info = rospy_message_converter.msg.CalibrationFaultInfo()
      if self.map_fault_info is None:
        self.map_fault_info = rospy_message_converter.msg.MapFaultInfo()
      if self.nop_plus_internal_fault is None:
        self.nop_plus_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.da_internal_fault is None:
        self.da_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.aeb_internal_fault is None:
        self.aeb_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.elk_internal_fault is None:
        self.elk_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.lka_internal_fault is None:
        self.lka_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.eas_internal_fault is None:
        self.eas_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.psap_internal_fault is None:
        self.psap_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.sapa_internal_fault is None:
        self.sapa_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      end = 0
      _x = self
      start = end
      end += 128
      (_x.sensor_input_fault_info.APP_IMU_InputMsg_OrderError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError, _x.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error, _x.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_FW_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_IMU_DataInput_Error, _x.sensor_input_fault_info.APP_RTK_DataInput_Error, _x.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error, _x.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error, _x.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error, _x.map_fault_info.APP_HDMAP_SEARCH_ERROR, _x.map_fault_info.APP_HDMAP_PARSE_ERROR, _x.map_fault_info.APP_HDMAP_READFILE_ERROR, _x.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR, _x.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR, _x.nop_plus_internal_fault.Stop_Vehicle_Standstil, _x.nop_plus_internal_fault.Deactivate_Function, _x.nop_plus_internal_fault.Lateral_Control_Suppression, _x.nop_plus_internal_fault.Longitudinal_Control_Suppression, _x.nop_plus_internal_fault.Lane_Change_Suppression, _x.nop_plus_internal_fault.Takeover_Warning, _x.nop_plus_internal_fault.Attention_Warning, _x.nop_plus_internal_fault.Insignificant, _x.da_internal_fault.Stop_Vehicle_Standstil, _x.da_internal_fault.Deactivate_Function, _x.da_internal_fault.Lateral_Control_Suppression, _x.da_internal_fault.Longitudinal_Control_Suppression, _x.da_internal_fault.Lane_Change_Suppression, _x.da_internal_fault.Takeover_Warning, _x.da_internal_fault.Attention_Warning, _x.da_internal_fault.Insignificant, _x.aeb_internal_fault.Stop_Vehicle_Standstil, _x.aeb_internal_fault.Deactivate_Function, _x.aeb_internal_fault.Lateral_Control_Suppression, _x.aeb_internal_fault.Longitudinal_Control_Suppression, _x.aeb_internal_fault.Lane_Change_Suppression, _x.aeb_internal_fault.Takeover_Warning, _x.aeb_internal_fault.Attention_Warning, _x.aeb_internal_fault.Insignificant, _x.elk_internal_fault.Stop_Vehicle_Standstil, _x.elk_internal_fault.Deactivate_Function, _x.elk_internal_fault.Lateral_Control_Suppression, _x.elk_internal_fault.Longitudinal_Control_Suppression, _x.elk_internal_fault.Lane_Change_Suppression, _x.elk_internal_fault.Takeover_Warning, _x.elk_internal_fault.Attention_Warning, _x.elk_internal_fault.Insignificant, _x.lka_internal_fault.Stop_Vehicle_Standstil, _x.lka_internal_fault.Deactivate_Function, _x.lka_internal_fault.Lateral_Control_Suppression, _x.lka_internal_fault.Longitudinal_Control_Suppression, _x.lka_internal_fault.Lane_Change_Suppression, _x.lka_internal_fault.Takeover_Warning, _x.lka_internal_fault.Attention_Warning, _x.lka_internal_fault.Insignificant, _x.eas_internal_fault.Stop_Vehicle_Standstil, _x.eas_internal_fault.Deactivate_Function, _x.eas_internal_fault.Lateral_Control_Suppression, _x.eas_internal_fault.Longitudinal_Control_Suppression, _x.eas_internal_fault.Lane_Change_Suppression, _x.eas_internal_fault.Takeover_Warning, _x.eas_internal_fault.Attention_Warning, _x.eas_internal_fault.Insignificant, _x.psap_internal_fault.Stop_Vehicle_Standstil, _x.psap_internal_fault.Deactivate_Function, _x.psap_internal_fault.Lateral_Control_Suppression, _x.psap_internal_fault.Longitudinal_Control_Suppression, _x.psap_internal_fault.Lane_Change_Suppression, _x.psap_internal_fault.Takeover_Warning, _x.psap_internal_fault.Attention_Warning, _x.psap_internal_fault.Insignificant, _x.sapa_internal_fault.Stop_Vehicle_Standstil, _x.sapa_internal_fault.Deactivate_Function, _x.sapa_internal_fault.Lateral_Control_Suppression, _x.sapa_internal_fault.Longitudinal_Control_Suppression, _x.sapa_internal_fault.Lane_Change_Suppression, _x.sapa_internal_fault.Takeover_Warning, _x.sapa_internal_fault.Attention_Warning, _x.sapa_internal_fault.Insignificant, _x.publish_ptp_ts,) = _get_struct_120BQ().unpack(str[start:end])
      self.sensor_input_fault_info.APP_IMU_InputMsg_OrderError = bool(self.sensor_input_fault_info.APP_IMU_InputMsg_OrderError)
      self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError = bool(self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError)
      self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError = bool(self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError)
      self.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error = bool(self.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error)
      self.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError = bool(self.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError)
      self.sensor_input_fault_info.APP_FW_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FW_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_FN_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FN_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_FL_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FL_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_FR_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FR_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_RL_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_RL_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_RR_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_RR_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_RN_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_RN_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_IMU_DataInput_Error = bool(self.sensor_input_fault_info.APP_IMU_DataInput_Error)
      self.sensor_input_fault_info.APP_RTK_DataInput_Error = bool(self.sensor_input_fault_info.APP_RTK_DataInput_Error)
      self.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error = bool(self.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error)
      self.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error = bool(self.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error)
      self.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error = bool(self.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error)
      self.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_IMU_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_IMU_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_IMU_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_IMU_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error)
      self.map_fault_info.APP_HDMAP_SEARCH_ERROR = bool(self.map_fault_info.APP_HDMAP_SEARCH_ERROR)
      self.map_fault_info.APP_HDMAP_PARSE_ERROR = bool(self.map_fault_info.APP_HDMAP_PARSE_ERROR)
      self.map_fault_info.APP_HDMAP_READFILE_ERROR = bool(self.map_fault_info.APP_HDMAP_READFILE_ERROR)
      self.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR = bool(self.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR)
      self.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR = bool(self.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR)
      self.nop_plus_internal_fault.Stop_Vehicle_Standstil = bool(self.nop_plus_internal_fault.Stop_Vehicle_Standstil)
      self.nop_plus_internal_fault.Deactivate_Function = bool(self.nop_plus_internal_fault.Deactivate_Function)
      self.nop_plus_internal_fault.Lateral_Control_Suppression = bool(self.nop_plus_internal_fault.Lateral_Control_Suppression)
      self.nop_plus_internal_fault.Longitudinal_Control_Suppression = bool(self.nop_plus_internal_fault.Longitudinal_Control_Suppression)
      self.nop_plus_internal_fault.Lane_Change_Suppression = bool(self.nop_plus_internal_fault.Lane_Change_Suppression)
      self.nop_plus_internal_fault.Takeover_Warning = bool(self.nop_plus_internal_fault.Takeover_Warning)
      self.nop_plus_internal_fault.Attention_Warning = bool(self.nop_plus_internal_fault.Attention_Warning)
      self.nop_plus_internal_fault.Insignificant = bool(self.nop_plus_internal_fault.Insignificant)
      self.da_internal_fault.Stop_Vehicle_Standstil = bool(self.da_internal_fault.Stop_Vehicle_Standstil)
      self.da_internal_fault.Deactivate_Function = bool(self.da_internal_fault.Deactivate_Function)
      self.da_internal_fault.Lateral_Control_Suppression = bool(self.da_internal_fault.Lateral_Control_Suppression)
      self.da_internal_fault.Longitudinal_Control_Suppression = bool(self.da_internal_fault.Longitudinal_Control_Suppression)
      self.da_internal_fault.Lane_Change_Suppression = bool(self.da_internal_fault.Lane_Change_Suppression)
      self.da_internal_fault.Takeover_Warning = bool(self.da_internal_fault.Takeover_Warning)
      self.da_internal_fault.Attention_Warning = bool(self.da_internal_fault.Attention_Warning)
      self.da_internal_fault.Insignificant = bool(self.da_internal_fault.Insignificant)
      self.aeb_internal_fault.Stop_Vehicle_Standstil = bool(self.aeb_internal_fault.Stop_Vehicle_Standstil)
      self.aeb_internal_fault.Deactivate_Function = bool(self.aeb_internal_fault.Deactivate_Function)
      self.aeb_internal_fault.Lateral_Control_Suppression = bool(self.aeb_internal_fault.Lateral_Control_Suppression)
      self.aeb_internal_fault.Longitudinal_Control_Suppression = bool(self.aeb_internal_fault.Longitudinal_Control_Suppression)
      self.aeb_internal_fault.Lane_Change_Suppression = bool(self.aeb_internal_fault.Lane_Change_Suppression)
      self.aeb_internal_fault.Takeover_Warning = bool(self.aeb_internal_fault.Takeover_Warning)
      self.aeb_internal_fault.Attention_Warning = bool(self.aeb_internal_fault.Attention_Warning)
      self.aeb_internal_fault.Insignificant = bool(self.aeb_internal_fault.Insignificant)
      self.elk_internal_fault.Stop_Vehicle_Standstil = bool(self.elk_internal_fault.Stop_Vehicle_Standstil)
      self.elk_internal_fault.Deactivate_Function = bool(self.elk_internal_fault.Deactivate_Function)
      self.elk_internal_fault.Lateral_Control_Suppression = bool(self.elk_internal_fault.Lateral_Control_Suppression)
      self.elk_internal_fault.Longitudinal_Control_Suppression = bool(self.elk_internal_fault.Longitudinal_Control_Suppression)
      self.elk_internal_fault.Lane_Change_Suppression = bool(self.elk_internal_fault.Lane_Change_Suppression)
      self.elk_internal_fault.Takeover_Warning = bool(self.elk_internal_fault.Takeover_Warning)
      self.elk_internal_fault.Attention_Warning = bool(self.elk_internal_fault.Attention_Warning)
      self.elk_internal_fault.Insignificant = bool(self.elk_internal_fault.Insignificant)
      self.lka_internal_fault.Stop_Vehicle_Standstil = bool(self.lka_internal_fault.Stop_Vehicle_Standstil)
      self.lka_internal_fault.Deactivate_Function = bool(self.lka_internal_fault.Deactivate_Function)
      self.lka_internal_fault.Lateral_Control_Suppression = bool(self.lka_internal_fault.Lateral_Control_Suppression)
      self.lka_internal_fault.Longitudinal_Control_Suppression = bool(self.lka_internal_fault.Longitudinal_Control_Suppression)
      self.lka_internal_fault.Lane_Change_Suppression = bool(self.lka_internal_fault.Lane_Change_Suppression)
      self.lka_internal_fault.Takeover_Warning = bool(self.lka_internal_fault.Takeover_Warning)
      self.lka_internal_fault.Attention_Warning = bool(self.lka_internal_fault.Attention_Warning)
      self.lka_internal_fault.Insignificant = bool(self.lka_internal_fault.Insignificant)
      self.eas_internal_fault.Stop_Vehicle_Standstil = bool(self.eas_internal_fault.Stop_Vehicle_Standstil)
      self.eas_internal_fault.Deactivate_Function = bool(self.eas_internal_fault.Deactivate_Function)
      self.eas_internal_fault.Lateral_Control_Suppression = bool(self.eas_internal_fault.Lateral_Control_Suppression)
      self.eas_internal_fault.Longitudinal_Control_Suppression = bool(self.eas_internal_fault.Longitudinal_Control_Suppression)
      self.eas_internal_fault.Lane_Change_Suppression = bool(self.eas_internal_fault.Lane_Change_Suppression)
      self.eas_internal_fault.Takeover_Warning = bool(self.eas_internal_fault.Takeover_Warning)
      self.eas_internal_fault.Attention_Warning = bool(self.eas_internal_fault.Attention_Warning)
      self.eas_internal_fault.Insignificant = bool(self.eas_internal_fault.Insignificant)
      self.psap_internal_fault.Stop_Vehicle_Standstil = bool(self.psap_internal_fault.Stop_Vehicle_Standstil)
      self.psap_internal_fault.Deactivate_Function = bool(self.psap_internal_fault.Deactivate_Function)
      self.psap_internal_fault.Lateral_Control_Suppression = bool(self.psap_internal_fault.Lateral_Control_Suppression)
      self.psap_internal_fault.Longitudinal_Control_Suppression = bool(self.psap_internal_fault.Longitudinal_Control_Suppression)
      self.psap_internal_fault.Lane_Change_Suppression = bool(self.psap_internal_fault.Lane_Change_Suppression)
      self.psap_internal_fault.Takeover_Warning = bool(self.psap_internal_fault.Takeover_Warning)
      self.psap_internal_fault.Attention_Warning = bool(self.psap_internal_fault.Attention_Warning)
      self.psap_internal_fault.Insignificant = bool(self.psap_internal_fault.Insignificant)
      self.sapa_internal_fault.Stop_Vehicle_Standstil = bool(self.sapa_internal_fault.Stop_Vehicle_Standstil)
      self.sapa_internal_fault.Deactivate_Function = bool(self.sapa_internal_fault.Deactivate_Function)
      self.sapa_internal_fault.Lateral_Control_Suppression = bool(self.sapa_internal_fault.Lateral_Control_Suppression)
      self.sapa_internal_fault.Longitudinal_Control_Suppression = bool(self.sapa_internal_fault.Longitudinal_Control_Suppression)
      self.sapa_internal_fault.Lane_Change_Suppression = bool(self.sapa_internal_fault.Lane_Change_Suppression)
      self.sapa_internal_fault.Takeover_Warning = bool(self.sapa_internal_fault.Takeover_Warning)
      self.sapa_internal_fault.Attention_Warning = bool(self.sapa_internal_fault.Attention_Warning)
      self.sapa_internal_fault.Insignificant = bool(self.sapa_internal_fault.Insignificant)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_120BQ().pack(_x.sensor_input_fault_info.APP_IMU_InputMsg_OrderError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError, _x.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error, _x.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_FW_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_IMU_DataInput_Error, _x.sensor_input_fault_info.APP_RTK_DataInput_Error, _x.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error, _x.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error, _x.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error, _x.map_fault_info.APP_HDMAP_SEARCH_ERROR, _x.map_fault_info.APP_HDMAP_PARSE_ERROR, _x.map_fault_info.APP_HDMAP_READFILE_ERROR, _x.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR, _x.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR, _x.nop_plus_internal_fault.Stop_Vehicle_Standstil, _x.nop_plus_internal_fault.Deactivate_Function, _x.nop_plus_internal_fault.Lateral_Control_Suppression, _x.nop_plus_internal_fault.Longitudinal_Control_Suppression, _x.nop_plus_internal_fault.Lane_Change_Suppression, _x.nop_plus_internal_fault.Takeover_Warning, _x.nop_plus_internal_fault.Attention_Warning, _x.nop_plus_internal_fault.Insignificant, _x.da_internal_fault.Stop_Vehicle_Standstil, _x.da_internal_fault.Deactivate_Function, _x.da_internal_fault.Lateral_Control_Suppression, _x.da_internal_fault.Longitudinal_Control_Suppression, _x.da_internal_fault.Lane_Change_Suppression, _x.da_internal_fault.Takeover_Warning, _x.da_internal_fault.Attention_Warning, _x.da_internal_fault.Insignificant, _x.aeb_internal_fault.Stop_Vehicle_Standstil, _x.aeb_internal_fault.Deactivate_Function, _x.aeb_internal_fault.Lateral_Control_Suppression, _x.aeb_internal_fault.Longitudinal_Control_Suppression, _x.aeb_internal_fault.Lane_Change_Suppression, _x.aeb_internal_fault.Takeover_Warning, _x.aeb_internal_fault.Attention_Warning, _x.aeb_internal_fault.Insignificant, _x.elk_internal_fault.Stop_Vehicle_Standstil, _x.elk_internal_fault.Deactivate_Function, _x.elk_internal_fault.Lateral_Control_Suppression, _x.elk_internal_fault.Longitudinal_Control_Suppression, _x.elk_internal_fault.Lane_Change_Suppression, _x.elk_internal_fault.Takeover_Warning, _x.elk_internal_fault.Attention_Warning, _x.elk_internal_fault.Insignificant, _x.lka_internal_fault.Stop_Vehicle_Standstil, _x.lka_internal_fault.Deactivate_Function, _x.lka_internal_fault.Lateral_Control_Suppression, _x.lka_internal_fault.Longitudinal_Control_Suppression, _x.lka_internal_fault.Lane_Change_Suppression, _x.lka_internal_fault.Takeover_Warning, _x.lka_internal_fault.Attention_Warning, _x.lka_internal_fault.Insignificant, _x.eas_internal_fault.Stop_Vehicle_Standstil, _x.eas_internal_fault.Deactivate_Function, _x.eas_internal_fault.Lateral_Control_Suppression, _x.eas_internal_fault.Longitudinal_Control_Suppression, _x.eas_internal_fault.Lane_Change_Suppression, _x.eas_internal_fault.Takeover_Warning, _x.eas_internal_fault.Attention_Warning, _x.eas_internal_fault.Insignificant, _x.psap_internal_fault.Stop_Vehicle_Standstil, _x.psap_internal_fault.Deactivate_Function, _x.psap_internal_fault.Lateral_Control_Suppression, _x.psap_internal_fault.Longitudinal_Control_Suppression, _x.psap_internal_fault.Lane_Change_Suppression, _x.psap_internal_fault.Takeover_Warning, _x.psap_internal_fault.Attention_Warning, _x.psap_internal_fault.Insignificant, _x.sapa_internal_fault.Stop_Vehicle_Standstil, _x.sapa_internal_fault.Deactivate_Function, _x.sapa_internal_fault.Lateral_Control_Suppression, _x.sapa_internal_fault.Longitudinal_Control_Suppression, _x.sapa_internal_fault.Lane_Change_Suppression, _x.sapa_internal_fault.Takeover_Warning, _x.sapa_internal_fault.Attention_Warning, _x.sapa_internal_fault.Insignificant, _x.publish_ptp_ts))
      _x = self.publisher_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.Struct('<I%ss'%length).pack(length, _x))
      _x = self
      buff.write(_get_struct_2Q().pack(_x.counter, _x.publish_ts))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      if self.sensor_input_fault_info is None:
        self.sensor_input_fault_info = rospy_message_converter.msg.SensorInputFaultInfo()
      if self.calibration_fault_info is None:
        self.calibration_fault_info = rospy_message_converter.msg.CalibrationFaultInfo()
      if self.map_fault_info is None:
        self.map_fault_info = rospy_message_converter.msg.MapFaultInfo()
      if self.nop_plus_internal_fault is None:
        self.nop_plus_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.da_internal_fault is None:
        self.da_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.aeb_internal_fault is None:
        self.aeb_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.elk_internal_fault is None:
        self.elk_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.lka_internal_fault is None:
        self.lka_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.eas_internal_fault is None:
        self.eas_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.psap_internal_fault is None:
        self.psap_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      if self.sapa_internal_fault is None:
        self.sapa_internal_fault = rospy_message_converter.msg.AppInternalFaultResult()
      end = 0
      _x = self
      start = end
      end += 128
      (_x.sensor_input_fault_info.APP_IMU_InputMsg_OrderError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError, _x.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error, _x.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError, _x.sensor_input_fault_info.APP_FW_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_FR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RL_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_RN_Camera_DataInput_Error, _x.sensor_input_fault_info.APP_IMU_DataInput_Error, _x.sensor_input_fault_info.APP_RTK_DataInput_Error, _x.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error, _x.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error, _x.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error, _x.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error, _x.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error, _x.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_File_Read_Error, _x.calibration_fault_info.APP_IMU_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error, _x.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error, _x.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error, _x.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error, _x.map_fault_info.APP_HDMAP_SEARCH_ERROR, _x.map_fault_info.APP_HDMAP_PARSE_ERROR, _x.map_fault_info.APP_HDMAP_READFILE_ERROR, _x.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR, _x.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR, _x.nop_plus_internal_fault.Stop_Vehicle_Standstil, _x.nop_plus_internal_fault.Deactivate_Function, _x.nop_plus_internal_fault.Lateral_Control_Suppression, _x.nop_plus_internal_fault.Longitudinal_Control_Suppression, _x.nop_plus_internal_fault.Lane_Change_Suppression, _x.nop_plus_internal_fault.Takeover_Warning, _x.nop_plus_internal_fault.Attention_Warning, _x.nop_plus_internal_fault.Insignificant, _x.da_internal_fault.Stop_Vehicle_Standstil, _x.da_internal_fault.Deactivate_Function, _x.da_internal_fault.Lateral_Control_Suppression, _x.da_internal_fault.Longitudinal_Control_Suppression, _x.da_internal_fault.Lane_Change_Suppression, _x.da_internal_fault.Takeover_Warning, _x.da_internal_fault.Attention_Warning, _x.da_internal_fault.Insignificant, _x.aeb_internal_fault.Stop_Vehicle_Standstil, _x.aeb_internal_fault.Deactivate_Function, _x.aeb_internal_fault.Lateral_Control_Suppression, _x.aeb_internal_fault.Longitudinal_Control_Suppression, _x.aeb_internal_fault.Lane_Change_Suppression, _x.aeb_internal_fault.Takeover_Warning, _x.aeb_internal_fault.Attention_Warning, _x.aeb_internal_fault.Insignificant, _x.elk_internal_fault.Stop_Vehicle_Standstil, _x.elk_internal_fault.Deactivate_Function, _x.elk_internal_fault.Lateral_Control_Suppression, _x.elk_internal_fault.Longitudinal_Control_Suppression, _x.elk_internal_fault.Lane_Change_Suppression, _x.elk_internal_fault.Takeover_Warning, _x.elk_internal_fault.Attention_Warning, _x.elk_internal_fault.Insignificant, _x.lka_internal_fault.Stop_Vehicle_Standstil, _x.lka_internal_fault.Deactivate_Function, _x.lka_internal_fault.Lateral_Control_Suppression, _x.lka_internal_fault.Longitudinal_Control_Suppression, _x.lka_internal_fault.Lane_Change_Suppression, _x.lka_internal_fault.Takeover_Warning, _x.lka_internal_fault.Attention_Warning, _x.lka_internal_fault.Insignificant, _x.eas_internal_fault.Stop_Vehicle_Standstil, _x.eas_internal_fault.Deactivate_Function, _x.eas_internal_fault.Lateral_Control_Suppression, _x.eas_internal_fault.Longitudinal_Control_Suppression, _x.eas_internal_fault.Lane_Change_Suppression, _x.eas_internal_fault.Takeover_Warning, _x.eas_internal_fault.Attention_Warning, _x.eas_internal_fault.Insignificant, _x.psap_internal_fault.Stop_Vehicle_Standstil, _x.psap_internal_fault.Deactivate_Function, _x.psap_internal_fault.Lateral_Control_Suppression, _x.psap_internal_fault.Longitudinal_Control_Suppression, _x.psap_internal_fault.Lane_Change_Suppression, _x.psap_internal_fault.Takeover_Warning, _x.psap_internal_fault.Attention_Warning, _x.psap_internal_fault.Insignificant, _x.sapa_internal_fault.Stop_Vehicle_Standstil, _x.sapa_internal_fault.Deactivate_Function, _x.sapa_internal_fault.Lateral_Control_Suppression, _x.sapa_internal_fault.Longitudinal_Control_Suppression, _x.sapa_internal_fault.Lane_Change_Suppression, _x.sapa_internal_fault.Takeover_Warning, _x.sapa_internal_fault.Attention_Warning, _x.sapa_internal_fault.Insignificant, _x.publish_ptp_ts,) = _get_struct_120BQ().unpack(str[start:end])
      self.sensor_input_fault_info.APP_IMU_InputMsg_OrderError = bool(self.sensor_input_fault_info.APP_IMU_InputMsg_OrderError)
      self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError = bool(self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_RollBackError)
      self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError = bool(self.sensor_input_fault_info.APP_IMU_PTPTimeStamp_LatencyError)
      self.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error = bool(self.sensor_input_fault_info.APP_FrontLidar_InputTimeStamp_Error)
      self.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError = bool(self.sensor_input_fault_info.APP_WhlInfosCAN_InputTimeStamp_RollBackError)
      self.sensor_input_fault_info.APP_FW_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FW_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_FN_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FN_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_FL_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FL_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_FR_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_FR_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_RL_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_RL_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_RR_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_RR_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_LEFT_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_RIGHT_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_FRONT_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_SVC_REAR_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_RN_Camera_DataInput_Error = bool(self.sensor_input_fault_info.APP_RN_Camera_DataInput_Error)
      self.sensor_input_fault_info.APP_IMU_DataInput_Error = bool(self.sensor_input_fault_info.APP_IMU_DataInput_Error)
      self.sensor_input_fault_info.APP_RTK_DataInput_Error = bool(self.sensor_input_fault_info.APP_RTK_DataInput_Error)
      self.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error = bool(self.sensor_input_fault_info.APP_VehicleCAN_DataInput_Error)
      self.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error = bool(self.sensor_input_fault_info.APP_LIDAR_DataInput_E2E_Error)
      self.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error = bool(self.sensor_input_fault_info.APP_LIDAR_ProcessResultInput_Error)
      self.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FW_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FN_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FL_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_FR_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_RL_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_RR_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_LEFT_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_RIGHT_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_FRONT_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_SVC_REAR_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_RN_Camera_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FW_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FN_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FL_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FR_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_RL_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_RR_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_LEFT_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_RIGHT_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_FRONT_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_SVC_REAR_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_RN_Camera_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_Lidar_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_Lidar_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_IMU_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_IMU_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_IMU_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_IMU_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_Master_Antenna_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error = bool(self.calibration_fault_info.APP_Master_Antenna_Calibration_Calibration_Error)
      self.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_Vehicle_Info_Calibration_File_Read_Error)
      self.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error = bool(self.calibration_fault_info.APP_FW_Remap_Npz_Calibration_File_Read_Error)
      self.map_fault_info.APP_HDMAP_SEARCH_ERROR = bool(self.map_fault_info.APP_HDMAP_SEARCH_ERROR)
      self.map_fault_info.APP_HDMAP_PARSE_ERROR = bool(self.map_fault_info.APP_HDMAP_PARSE_ERROR)
      self.map_fault_info.APP_HDMAP_READFILE_ERROR = bool(self.map_fault_info.APP_HDMAP_READFILE_ERROR)
      self.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR = bool(self.map_fault_info.APP_HDMAP_DOWNLOAD_ERROR)
      self.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR = bool(self.map_fault_info.APP_RTK_HDMAP_MATCH_ERROR)
      self.nop_plus_internal_fault.Stop_Vehicle_Standstil = bool(self.nop_plus_internal_fault.Stop_Vehicle_Standstil)
      self.nop_plus_internal_fault.Deactivate_Function = bool(self.nop_plus_internal_fault.Deactivate_Function)
      self.nop_plus_internal_fault.Lateral_Control_Suppression = bool(self.nop_plus_internal_fault.Lateral_Control_Suppression)
      self.nop_plus_internal_fault.Longitudinal_Control_Suppression = bool(self.nop_plus_internal_fault.Longitudinal_Control_Suppression)
      self.nop_plus_internal_fault.Lane_Change_Suppression = bool(self.nop_plus_internal_fault.Lane_Change_Suppression)
      self.nop_plus_internal_fault.Takeover_Warning = bool(self.nop_plus_internal_fault.Takeover_Warning)
      self.nop_plus_internal_fault.Attention_Warning = bool(self.nop_plus_internal_fault.Attention_Warning)
      self.nop_plus_internal_fault.Insignificant = bool(self.nop_plus_internal_fault.Insignificant)
      self.da_internal_fault.Stop_Vehicle_Standstil = bool(self.da_internal_fault.Stop_Vehicle_Standstil)
      self.da_internal_fault.Deactivate_Function = bool(self.da_internal_fault.Deactivate_Function)
      self.da_internal_fault.Lateral_Control_Suppression = bool(self.da_internal_fault.Lateral_Control_Suppression)
      self.da_internal_fault.Longitudinal_Control_Suppression = bool(self.da_internal_fault.Longitudinal_Control_Suppression)
      self.da_internal_fault.Lane_Change_Suppression = bool(self.da_internal_fault.Lane_Change_Suppression)
      self.da_internal_fault.Takeover_Warning = bool(self.da_internal_fault.Takeover_Warning)
      self.da_internal_fault.Attention_Warning = bool(self.da_internal_fault.Attention_Warning)
      self.da_internal_fault.Insignificant = bool(self.da_internal_fault.Insignificant)
      self.aeb_internal_fault.Stop_Vehicle_Standstil = bool(self.aeb_internal_fault.Stop_Vehicle_Standstil)
      self.aeb_internal_fault.Deactivate_Function = bool(self.aeb_internal_fault.Deactivate_Function)
      self.aeb_internal_fault.Lateral_Control_Suppression = bool(self.aeb_internal_fault.Lateral_Control_Suppression)
      self.aeb_internal_fault.Longitudinal_Control_Suppression = bool(self.aeb_internal_fault.Longitudinal_Control_Suppression)
      self.aeb_internal_fault.Lane_Change_Suppression = bool(self.aeb_internal_fault.Lane_Change_Suppression)
      self.aeb_internal_fault.Takeover_Warning = bool(self.aeb_internal_fault.Takeover_Warning)
      self.aeb_internal_fault.Attention_Warning = bool(self.aeb_internal_fault.Attention_Warning)
      self.aeb_internal_fault.Insignificant = bool(self.aeb_internal_fault.Insignificant)
      self.elk_internal_fault.Stop_Vehicle_Standstil = bool(self.elk_internal_fault.Stop_Vehicle_Standstil)
      self.elk_internal_fault.Deactivate_Function = bool(self.elk_internal_fault.Deactivate_Function)
      self.elk_internal_fault.Lateral_Control_Suppression = bool(self.elk_internal_fault.Lateral_Control_Suppression)
      self.elk_internal_fault.Longitudinal_Control_Suppression = bool(self.elk_internal_fault.Longitudinal_Control_Suppression)
      self.elk_internal_fault.Lane_Change_Suppression = bool(self.elk_internal_fault.Lane_Change_Suppression)
      self.elk_internal_fault.Takeover_Warning = bool(self.elk_internal_fault.Takeover_Warning)
      self.elk_internal_fault.Attention_Warning = bool(self.elk_internal_fault.Attention_Warning)
      self.elk_internal_fault.Insignificant = bool(self.elk_internal_fault.Insignificant)
      self.lka_internal_fault.Stop_Vehicle_Standstil = bool(self.lka_internal_fault.Stop_Vehicle_Standstil)
      self.lka_internal_fault.Deactivate_Function = bool(self.lka_internal_fault.Deactivate_Function)
      self.lka_internal_fault.Lateral_Control_Suppression = bool(self.lka_internal_fault.Lateral_Control_Suppression)
      self.lka_internal_fault.Longitudinal_Control_Suppression = bool(self.lka_internal_fault.Longitudinal_Control_Suppression)
      self.lka_internal_fault.Lane_Change_Suppression = bool(self.lka_internal_fault.Lane_Change_Suppression)
      self.lka_internal_fault.Takeover_Warning = bool(self.lka_internal_fault.Takeover_Warning)
      self.lka_internal_fault.Attention_Warning = bool(self.lka_internal_fault.Attention_Warning)
      self.lka_internal_fault.Insignificant = bool(self.lka_internal_fault.Insignificant)
      self.eas_internal_fault.Stop_Vehicle_Standstil = bool(self.eas_internal_fault.Stop_Vehicle_Standstil)
      self.eas_internal_fault.Deactivate_Function = bool(self.eas_internal_fault.Deactivate_Function)
      self.eas_internal_fault.Lateral_Control_Suppression = bool(self.eas_internal_fault.Lateral_Control_Suppression)
      self.eas_internal_fault.Longitudinal_Control_Suppression = bool(self.eas_internal_fault.Longitudinal_Control_Suppression)
      self.eas_internal_fault.Lane_Change_Suppression = bool(self.eas_internal_fault.Lane_Change_Suppression)
      self.eas_internal_fault.Takeover_Warning = bool(self.eas_internal_fault.Takeover_Warning)
      self.eas_internal_fault.Attention_Warning = bool(self.eas_internal_fault.Attention_Warning)
      self.eas_internal_fault.Insignificant = bool(self.eas_internal_fault.Insignificant)
      self.psap_internal_fault.Stop_Vehicle_Standstil = bool(self.psap_internal_fault.Stop_Vehicle_Standstil)
      self.psap_internal_fault.Deactivate_Function = bool(self.psap_internal_fault.Deactivate_Function)
      self.psap_internal_fault.Lateral_Control_Suppression = bool(self.psap_internal_fault.Lateral_Control_Suppression)
      self.psap_internal_fault.Longitudinal_Control_Suppression = bool(self.psap_internal_fault.Longitudinal_Control_Suppression)
      self.psap_internal_fault.Lane_Change_Suppression = bool(self.psap_internal_fault.Lane_Change_Suppression)
      self.psap_internal_fault.Takeover_Warning = bool(self.psap_internal_fault.Takeover_Warning)
      self.psap_internal_fault.Attention_Warning = bool(self.psap_internal_fault.Attention_Warning)
      self.psap_internal_fault.Insignificant = bool(self.psap_internal_fault.Insignificant)
      self.sapa_internal_fault.Stop_Vehicle_Standstil = bool(self.sapa_internal_fault.Stop_Vehicle_Standstil)
      self.sapa_internal_fault.Deactivate_Function = bool(self.sapa_internal_fault.Deactivate_Function)
      self.sapa_internal_fault.Lateral_Control_Suppression = bool(self.sapa_internal_fault.Lateral_Control_Suppression)
      self.sapa_internal_fault.Longitudinal_Control_Suppression = bool(self.sapa_internal_fault.Longitudinal_Control_Suppression)
      self.sapa_internal_fault.Lane_Change_Suppression = bool(self.sapa_internal_fault.Lane_Change_Suppression)
      self.sapa_internal_fault.Takeover_Warning = bool(self.sapa_internal_fault.Takeover_Warning)
      self.sapa_internal_fault.Attention_Warning = bool(self.sapa_internal_fault.Attention_Warning)
      self.sapa_internal_fault.Insignificant = bool(self.sapa_internal_fault.Insignificant)
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.publisher_id = str[start:end].decode('utf-8', 'rosmsg')
      else:
        self.publisher_id = str[start:end]
      _x = self
      start = end
      end += 16
      (_x.counter, _x.publish_ts,) = _get_struct_2Q().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_120BQ = None
def _get_struct_120BQ():
    global _struct_120BQ
    if _struct_120BQ is None:
        _struct_120BQ = struct.Struct("<120BQ")
    return _struct_120BQ
_struct_2Q = None
def _get_struct_2Q():
    global _struct_2Q
    if _struct_2Q is None:
        _struct_2Q = struct.Struct("<2Q")
    return _struct_2Q
